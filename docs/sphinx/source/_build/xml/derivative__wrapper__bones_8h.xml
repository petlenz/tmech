<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="derivative__wrapper__bones_8h" kind="file" language="C++">
    <compoundname>derivative_wrapper_bones.h</compoundname>
    <includedby refid="tmech_8h" local="yes">/home/peter/SynologyDrive/Drive/tmech/include/tmech/tmech.h</includedby>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01OP_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, OP &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01Variable_00_01binary__expression__wrapper_3_01LHS_00_01RHS_00_01op__div_01_4_01_4" prot="public">detail::diff_wrapper&lt; Variable, binary_expression_wrapper&lt; LHS, RHS, op_div &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__times__expression" prot="public">detail::get_tensor_times_expression</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__times__expression_3_01Variable_00_01LHS_00_01RHS_00_01true_00_01false_00_01true_01_4" prot="public">detail::get_tensor_times_expression&lt; Variable, LHS, RHS, true, false, true &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__times__expression_3_01Variable_00_01LHS_00_01RHS_00_01true_00_01true_00_01false_01_4" prot="public">detail::get_tensor_times_expression&lt; Variable, LHS, RHS, true, true, false &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01op__mul_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01diff__pow_3_01__Expr_00_01real_3_01__T_00_01__L794c9fc54d9ec3701b471ab4e63b09c2" prot="public">detail::diff_wrapper&lt; _Variable, diff_pow&lt; _Expr, real&lt; _T, _L, _R, _E &gt;, true &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01diff__pow_3_01__Expr_00_01__Constant_00_01true_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, diff_pow&lt; _Expr, _Constant, true &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01Variable_00_01diff__pow_3_01G_00_01H_00_01false_01_4_01_4" prot="public">detail::diff_wrapper&lt; Variable, diff_pow&lt; G, H, false &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01abs__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Expr, abs_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01exp__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Expr, exp_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01log__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Expr, log_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01sqrt__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Expr, sqrt_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01cos__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Expr, cos_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01sin__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Expr, sin_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01tan__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Expr, tan_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01sec__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Expr, sec_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01negative_3_01__Expr_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, negative&lt; _Expr &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01Variable_00_01Variable_01_4" prot="public">detail::diff_wrapper&lt; Variable, Variable &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01Variable_00_01real_3_01__T_00_01__L_00_01__R_00_01__Exp_01_4_01_4" prot="public">detail::diff_wrapper&lt; Variable, real&lt; _T, _L, _R, _Exp &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01scalar__one_3_01__T_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, scalar_one&lt; _T &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01tensor__one_3_01__T_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, tensor_one&lt; _T &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01scalar__zero_3_01__T_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, scalar_zero&lt; _T &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01tensor__zero_3_01__T_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, tensor_zero&lt; _T &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01constant_3_01__T_00_01__ID_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, constant&lt; _T, _ID &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01variable_3_01__T_00_01__ID_01_4_00_01variable_3_01__T_00_01__ID_01_4_01_4" prot="public">detail::diff_wrapper&lt; variable&lt; _T, _ID &gt;, variable&lt; _T, _ID &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01variable_3_01T__LHS_00_01ID__LHS_01_4_00_01variable_3_01T__RHS_00_01ID__RHS_01_4_01_4" prot="public">detail::diff_wrapper&lt; variable&lt; T_LHS, ID_LHS &gt;, variable&lt; T_RHS, ID_RHS &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1get__tensor__outer__product__differentiation" prot="public">detail::get_tensor_outer_product_differentiation</innerclass>
    <innerclass refid="classdetail_1_1get__tensor__outer__product__differentiation_3_01__Variable_00_01true_00_01__LHS_657c9b612feb6071885be885489bfaa6" prot="public">detail::get_tensor_outer_product_differentiation&lt; _Variable, true, _LHS, _RHS, _SeqLHS, _SeqRHS &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01tensor__outer__product__wrapper_3_01__LHS_00_0102425af87084a45a33915e727c34b601" prot="public">detail::diff_wrapper&lt; _Variable, tensor_outer_product_wrapper&lt; _LHS, _RHS, _SeqLHS, _SeqRHS &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01tensor__inner__product__wrapper_3_01__LHS_00_011051eb27b66824b6886aa25fc1e90ec8" prot="public">detail::diff_wrapper&lt; _Variable, tensor_inner_product_wrapper&lt; _LHS, _RHS, _SeqLHS, _SeqRHS &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1get__tensor__basis__change__differentiation" prot="public">detail::get_tensor_basis_change_differentiation</innerclass>
    <innerclass refid="classdetail_1_1get__tensor__basis__change__differentiation_3_01__Variable_00_01true_00_01__Expr_00_01__Sequence_01_4" prot="public">detail::get_tensor_basis_change_differentiation&lt; _Variable, true, _Expr, _Sequence &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01tensor__basis__change__wrapper_3_01__Expr_00_01__Sequence_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, tensor_basis_change_wrapper&lt; _Expr, _Sequence &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Variable_00_01det__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Variable, det_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01det__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Expr, det_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01tensor__function__wrapper_3_01__Variable_00_01cof__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, tensor_function_wrapper&lt; _Variable, cof_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01tensor__function__wrapper_3_01__Variable_00_01adj__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, tensor_function_wrapper&lt; _Variable, adj_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Variable_00_01trace__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Variable, trace_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01trace__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Expr, trace_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01Variable_00_01inv__tensor_3_01Variable_01_4_01_4" prot="public">detail::diff_wrapper&lt; Variable, inv_tensor&lt; Variable &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01inv__tensor_3_01__Expr_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, inv_tensor&lt; _Expr &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper__n" prot="public">detail::diff_wrapper_n</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper__n_3_011_00_01Variable_00_01T_01_4" prot="public">detail::diff_wrapper_n&lt; 1, Variable, T &gt;</innerclass>
    <innerclass refid="classdetail_1_1derivative__wrapper" prot="public">detail::derivative_wrapper</innerclass>
    <innernamespace refid="namespacedetail">detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>DERIVATIVE_WRAPPER_BONES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DERIVATIVE_WRAPPER_BONES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>op_mul<sp/>=<sp/>tmech::detail::operator_mul;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>op_add<sp/>=<sp/>tmech::detail::operator_add;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>op_div<sp/>=<sp/>tmech::detail::operator_div;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>op_sub<sp/>=<sp/>tmech::detail::operator_sub;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Expression&gt;</highlight></codeline>
<codeline lineno="11" refid="classdetail_1_1diff__wrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//Summenregel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//f(x)<sp/>=<sp/>g(x)<sp/>+-<sp/>h(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//f(x)&apos;<sp/>=<sp/>g(x)&apos;<sp/>+-<sp/>h(x)&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OP&gt;</highlight></codeline>
<codeline lineno="17" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01OP_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1binary__expression__wrapper" kindref="compound">binary_expression_wrapper</ref>&lt;_LHS,<sp/>_RHS,<sp/>OP&gt;&gt;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dL<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Variable, _LHS&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dR<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Variable, _RHS&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; binary_expression_wrapper&lt;_dL, _dR, OP&gt;</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//Quotientenregel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//f(x)<sp/>=<sp/>g(x)/h(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//f(x)<sp/>=<sp/>(g(x)&apos;*h(x)<sp/>-<sp/>g(x)*h(x)&apos;)/(h(x)*h(x)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RHS&gt;</highlight></codeline>
<codeline lineno="29" refid="classdetail_1_1diff__wrapper_3_01Variable_00_01binary__expression__wrapper_3_01LHS_00_01RHS_00_01op__div_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;Variable,<sp/><ref refid="classdetail_1_1binary__expression__wrapper" kindref="compound">binary_expression_wrapper</ref>&lt;LHS,<sp/>RHS,<sp/>op_div&gt;&gt;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dL<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; typename diff_wrapper&lt; Variable, LHS &gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dR<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; typename diff_wrapper&lt; Variable, RHS &gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_NL<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; binary_expression_wrapper&lt;_dL, RHS, op_mul &gt;</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_NR<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; binary_expression_wrapper&lt;LHS, _dR, op_mul &gt;</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_N<sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; binary_expression_wrapper&lt;_NL, _NR, op_sub &gt;</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_Z<sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; binary_expression_wrapper&lt;RHS, RHS, op_mul &gt;</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; binary_expression_wrapper&lt;_N, _Z, op_div &gt;</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//Produktregel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//f(x)<sp/>=<sp/>g(x)*h(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//f(x)<sp/>=<sp/>g(x)&apos;*h(x)<sp/>+<sp/>g(x)*h(x)&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//both<sp/>are<sp/>scalars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_isTensorVariable,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_IsTensorLHS,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_IsTensorRHS&gt;</highlight></codeline>
<codeline lineno="46" refid="structdetail_1_1get__tensor__times__expression" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__tensor__times__expression" kindref="compound">get_tensor_times_expression</ref></highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dL<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; typename diff_wrapper&lt; _Variable, _LHS &gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dR<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; typename diff_wrapper&lt; _Variable, _RHS &gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer</ref>&lt;<sp/><ref refid="classdetail_1_1binary__expression__wrapper" kindref="compound">binary_expression_wrapper</ref>&lt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; binary_expression_wrapper&lt; _dL, _RHS, op_mul &gt;</ref><sp/>&gt;::squeezedType,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; binary_expression_wrapper&lt; _LHS, _dR, op_mul &gt;</ref><sp/>&gt;::squeezedType,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>op_add<sp/>&gt;<sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//f(x)<sp/>=<sp/>g(x)*H(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//f(x)<sp/>=<sp/>otimes(H(x),<sp/>g(x)&apos;)<sp/>+<sp/>g(x)*H(x)&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//lhs<sp/>is<sp/>scalar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RHS&gt;</highlight></codeline>
<codeline lineno="61" refid="structdetail_1_1get__tensor__times__expression_3_01Variable_00_01LHS_00_01RHS_00_01true_00_01false_00_01true_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__tensor__times__expression" kindref="compound">get_tensor_times_expression</ref>&lt;Variable,<sp/>LHS,<sp/>RHS,<sp/>true,<sp/>false,<sp/>true&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dL<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; typename diff_wrapper&lt; Variable, LHS &gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dR<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; typename diff_wrapper&lt; Variable, RHS &gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>_rhs_tensor_info<sp/>=<sp/>get_tensor_info&lt;typename<sp/>RHS::data_type&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>_var_tensor_info<sp/>=<sp/>get_tensor_info&lt;typename<sp/>Variable::data_type&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>static<sp/>constexpr<sp/>auto<sp/>_RankLHS{_var_tensor_info::rank()};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>static<sp/>constexpr<sp/>auto<sp/>_RankRHS{_rhs_tensor_info::rank()};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>_SequenceLHS<sp/>=<sp/>tmech::detail::add_value_sequence_t&lt;tmech::detail::sequence_t&lt;_RankRHS-1&gt;,<sp/>1&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>_SequenceRHS<sp/>=<sp/>tmech::detail::add_value_sequence_t&lt;tmech::detail::sequence_t&lt;_RankRHS-1&gt;,<sp/>_RankLHS+1&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//typename<sp/>squeezer&lt;<sp/>tensor_outer_product_wrapper&lt;RHS,<sp/>_dL,<sp/>_SequenceLHS,<sp/>_SequenceRHS&gt;&gt;::squeezedType;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>lhs<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer</ref>&lt;<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal"><sp/>(otimes(RHS(),<sp/>_dL()))&gt;::squeezedType;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>rhs<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; binary_expression_wrapper&lt;LHS, _dR, op_mul&gt;</ref>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; binary_expression_wrapper&lt; lhs, rhs, op_add &gt;</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//f(x)<sp/>=<sp/>G(x)*h(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//f(x)<sp/>=<sp/>G(x)&apos;*h(x)<sp/>+<sp/>otimes(G(x),<sp/>h(x)&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//rhs<sp/>is<sp/>scalar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RHS&gt;</highlight></codeline>
<codeline lineno="86" refid="structdetail_1_1get__tensor__times__expression_3_01Variable_00_01LHS_00_01RHS_00_01true_00_01true_00_01false_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__tensor__times__expression" kindref="compound">get_tensor_times_expression</ref>&lt;Variable,<sp/>LHS,<sp/>RHS,<sp/>true,<sp/>true,<sp/>false&gt;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>get_tensor_times_expression&lt;Variable,<sp/>RHS,<sp/>LHS,<sp/>true,<sp/>false,<sp/>true&gt;::deriv_type;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS&gt;</highlight></codeline>
<codeline lineno="93" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01op__mul_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1binary__expression__wrapper" kindref="compound">binary_expression_wrapper</ref>&lt;_LHS,<sp/>_RHS,<sp/>op_mul&gt;&gt;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Variable, _LHS&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Variable, _RHS&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_LHS_New<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; binary_expression_wrapper&lt;_dL, _RHS, op_mul&gt;</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_RHS_New<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; binary_expression_wrapper&lt;_LHS, _dR, op_mul&gt;</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_lhs_data_type<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS::data_type;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_rhs_data_type<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS::data_type;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_variable_data_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable::data_type;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__tensor__times__expression" kindref="compound">get_tensor_times_expression&lt;_Variable, _LHS, _RHS, is_tensor&lt;_variable_data_type&gt;::value</ref>,<sp/><sp/><ref refid="structdetail_1_1is__tensor" kindref="compound">is_tensor&lt;_lhs_data_type&gt;::value</ref>,<sp/><ref refid="structdetail_1_1is__tensor" kindref="compound">is_tensor&lt;_rhs_data_type&gt;::value</ref><sp/>&gt;::deriv_type;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//potenzregel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>g(x)^n<sp/>n\in<sp/>nat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>n*g(x)^(n-1)*g(x)&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//(x^n)&apos;=n*x^(n-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_L,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_R,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_E&gt;</highlight></codeline>
<codeline lineno="112" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01diff__pow_3_01__Expr_00_01real_3_01__T_00_01__L794c9fc54d9ec3701b471ab4e63b09c2" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1diff__pow" kindref="compound">diff_pow</ref>&lt;_Expr,<sp/><ref refid="classreal" kindref="compound">real</ref>&lt;_T,<sp/>_L,<sp/>_R,<sp/>_E&gt;,<sp/>true&gt;&gt;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dExpr<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Variable, _Expr&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_outer<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer</ref>&lt;<ref refid="classdetail_1_1diff__pow" kindref="compound">diff_pow</ref>&lt;_Expr,<sp/><ref refid="classreal" kindref="compound">real</ref>&lt;_T,<sp/>_L-1,<sp/>_R,<sp/>_E&gt;,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">&gt;&gt;::squeezedType;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;binary_expression_wrapper&lt;binary_expression_wrapper&lt;real&lt;_T, _L, _R, _E&gt;</ref>,<sp/>_outer,<sp/>op_mul&gt;,<sp/>_dExpr,<sp/>op_mul&gt;&gt;::squeezedType;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Constant&gt;</highlight></codeline>
<codeline lineno="121" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01diff__pow_3_01__Expr_00_01__Constant_00_01true_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1diff__pow" kindref="compound">diff_pow</ref>&lt;_Expr,<sp/>_Constant,<sp/>true&gt;&gt;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dExpr<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Variable, _Expr&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_outer<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;diff_pow&lt;_Expr, binary_expression_wrapper&lt;_Constant, scalar_one&lt;typename _Constant::data_type&gt;</ref>,<sp/>op_sub&gt;,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">&gt;&gt;::squeezedType;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;binary_expression_wrapper&lt;binary_expression_wrapper&lt;_Constant, _outer, op_mul&gt;</ref>,<sp/>_dExpr,<sp/>op_mul&gt;&gt;::squeezedType;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//Implizite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//f(x)<sp/>=<sp/>g(x)^h(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//f&apos;(x)<sp/>=<sp/>f(x)*(h&apos;(x)*log(g(x))<sp/>+<sp/>h(x)*g&apos;(x)/g(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//f&apos;(x)<sp/>=<sp/>g(x)^h(x)*(h&apos;(x)*log(g(x))<sp/>+<sp/>h(x)*g&apos;(x)/g(x))<sp/>|*g(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//f&apos;(x)<sp/>=<sp/>g(x)^(h(x)-1)*(h&apos;(x)*log(g(x))*g(x)<sp/>+<sp/>h(x)*g&apos;(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>G,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>H&gt;</highlight></codeline>
<codeline lineno="135" refid="classdetail_1_1diff__wrapper_3_01Variable_00_01diff__pow_3_01G_00_01H_00_01false_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;Variable,<sp/><sp/><ref refid="classdetail_1_1diff__pow" kindref="compound">diff_pow</ref>&lt;G,<sp/>H,<sp/>false&gt;&gt;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dG<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;Variable, G&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dH<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;Variable, H&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_Hn<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;binary_expression_wrapper&lt;H, real&lt;typename H::data_type, 1, 0, 1&gt;</ref>,<sp/>op_sub&gt;&gt;::squeezedType;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1function__wrapper" kindref="compound">_Log</ref><sp/>=<sp/><ref refid="classdetail_1_1function__wrapper" kindref="compound">function_wrapper&lt;G, log_wrapper&gt;</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1diff__pow" kindref="compound">_Pow</ref><sp/>=<sp/><ref refid="classdetail_1_1diff__pow" kindref="compound">diff_pow&lt;G, _Hn, false&gt;</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_RHS1<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;binary_expression_wrapper&lt;typename squeezer&lt;binary_expression_wrapper&lt;_dH, _Log, op_mul&gt;</ref>&gt;::squeezedType,<sp/>G,<sp/>op_mul&gt;&gt;::squeezedType;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_RHS2<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;binary_expression_wrapper&lt;H, _dG, op_mul&gt;</ref>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_RHS<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;binary_expression_wrapper&lt;_RHS1, _RHS2, op_add&gt;</ref>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;binary_expression_wrapper&lt;_Pow, _RHS, op_mul&gt;</ref>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//f(x)<sp/>=<sp/>abs(g(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//f&apos;(x)<sp/>=<sp/>g&apos;(x)*sign(g(x))<sp/>=<sp/>g&apos;(x)*(g(x)/g(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr&gt;</highlight></codeline>
<codeline lineno="152" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01abs__wrapper_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1function__wrapper" kindref="compound">function_wrapper</ref>&lt;_Expr,<sp/><ref refid="structdetail_1_1abs__wrapper" kindref="compound">abs_wrapper</ref>&gt;&gt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dExpr<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; typename diff_wrapper&lt; _Variable, _Expr &gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1function__wrapper" kindref="compound">sign_expr</ref><sp/>=<sp/><ref refid="classdetail_1_1function__wrapper" kindref="compound">function_wrapper&lt;_Expr, sign_wrapper&gt;</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;binary_expression_wrapper&lt;_dExpr, sign_expr, op_mul&gt;</ref>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">};</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="comment">//template<sp/>&lt;typename<sp/>_Variable,<sp/>typename<sp/>_Expr&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//class<sp/>diff_wrapper&lt;_Variable,<sp/>function_wrapper&lt;_Expr,<sp/>sign_wrapper&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>_dExpr<sp/>=<sp/>typename<sp/>squeezer&lt;<sp/>typename<sp/>diff_wrapper&lt;<sp/>_Variable,<sp/>binary_expression_wrapper&lt;_Expr,<sp/>function_wrapper&lt;_Expr,<sp/>abs_wrapper&gt;,<sp/>op_div&gt;<sp/>&gt;::deriv_type<sp/>&gt;::squeezedType;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//public:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>deriv_type<sp/>=<sp/>_dExpr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//exponent<sp/>funktion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//(e^g(x))&apos;<sp/>=<sp/>e^g(x)*g(x)&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr&gt;</highlight></codeline>
<codeline lineno="173" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01exp__wrapper_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1function__wrapper" kindref="compound">function_wrapper</ref>&lt;_Expr,<sp/><ref refid="structdetail_1_1exp__wrapper" kindref="compound">exp_wrapper</ref>&gt;&gt;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dExpr<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; typename diff_wrapper&lt; _Variable, _Expr &gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; binary_expression_wrapper&lt; function_wrapper&lt; _Expr, exp_wrapper &gt;</ref>,<sp/>_dExpr,<sp/>op_mul<sp/>&gt;<sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//natural<sp/>logarithmus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//f(x)<sp/>=<sp/>log(g(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//log(g(x))&apos;<sp/>=<sp/>(1/g(x))*g(x)&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr&gt;</highlight></codeline>
<codeline lineno="184" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01log__wrapper_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1function__wrapper" kindref="compound">function_wrapper</ref>&lt;_Expr,<sp/><ref refid="structdetail_1_1log__wrapper" kindref="compound">log_wrapper</ref>&gt;&gt;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dExpr<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; typename diff_wrapper&lt; _Variable, _Expr &gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; binary_expression_wrapper&lt; _dExpr, _Expr, op_div &gt;</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//f(x)<sp/>=<sp/>sqrt(g(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//f&apos;(x)<sp/>=<sp/>(g&apos;(x)/(2*sqrt(g(x))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr&gt;</highlight></codeline>
<codeline lineno="195" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01sqrt__wrapper_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1function__wrapper" kindref="compound">function_wrapper</ref>&lt;_Expr,<sp/><ref refid="structdetail_1_1sqrt__wrapper" kindref="compound">sqrt_wrapper</ref>&gt;&gt;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>data_type<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr::data_type;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dExpr<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; typename diff_wrapper&lt; _Variable, _Expr &gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>denominator<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; binary_expression_wrapper&lt; real&lt; data_type, 2, 0, 1 &gt;</ref>,<sp/><ref refid="classdetail_1_1function__wrapper" kindref="compound">function_wrapper&lt; _Expr, sqrt_wrapper &gt;</ref>,<sp/>op_mul&gt;&gt;::squeezedType;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; binary_expression_wrapper&lt;_dExpr, denominator, op_div&gt;</ref>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//f(x)<sp/>=<sp/>cos(g(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//f&apos;(x)<sp/>=<sp/>g&apos;(x)*(-sin(g(x)))<sp/>=<sp/>-g&apos;(x)*sin(g(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr&gt;</highlight></codeline>
<codeline lineno="208" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01cos__wrapper_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1function__wrapper" kindref="compound">function_wrapper</ref>&lt;_Expr,<sp/><ref refid="structdetail_1_1cos__wrapper" kindref="compound">cos_wrapper</ref>&gt;&gt;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dExpr<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Variable, _Expr&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1negative" kindref="compound">deriv_type</ref><sp/>=<sp/><ref refid="classdetail_1_1negative" kindref="compound">negative&lt;typename squeezer&lt;binary_expression_wrapper&lt;_dExpr, function_wrapper&lt;_Expr, sin_wrapper&gt;</ref>,<sp/>op_mul&gt;&gt;::squeezedType&gt;;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">};</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//f(x)<sp/>=<sp/>sin(g(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//f&apos;(x)<sp/>=<sp/>g&apos;(x)*cos(g(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr&gt;</highlight></codeline>
<codeline lineno="219" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01sin__wrapper_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1function__wrapper" kindref="compound">function_wrapper</ref>&lt;_Expr,<sp/><ref refid="structdetail_1_1sin__wrapper" kindref="compound">sin_wrapper</ref>&gt;&gt;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dExpr<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Variable, _Expr&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;binary_expression_wrapper&lt;_dExpr, function_wrapper&lt;_Expr, cos_wrapper&gt;</ref>,<sp/>op_mul&gt;&gt;::squeezedType;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">};</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//f(x)<sp/>=<sp/>tan(g(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//f&apos;(x)<sp/>=<sp/>g&apos;(x)*sec^2(g(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr&gt;</highlight></codeline>
<codeline lineno="229" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01tan__wrapper_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1function__wrapper" kindref="compound">function_wrapper</ref>&lt;_Expr,<sp/><ref refid="structdetail_1_1tan__wrapper" kindref="compound">tan_wrapper</ref>&gt;&gt;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>data_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr::data_type;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dExpr<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Variable, _Expr&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;binary_expression_wrapper&lt;_dExpr, diff_pow&lt;function_wrapper&lt;_Expr, sec_wrapper&gt;</ref>,<sp/><ref refid="classreal" kindref="compound">real&lt;data_type, 2,0,1&gt;</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">&gt;,<sp/>op_mul&gt;&gt;::squeezedType;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">};</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//f(x)<sp/>=<sp/>sec(g(x))<sp/>=<sp/>1/cos(g(x))<sp/>=<sp/>cos(g(x))^-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//f&apos;(x)<sp/>=<sp/>g(x)&apos;tan(g(x))*sec(g(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr&gt;</highlight></codeline>
<codeline lineno="240" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01sec__wrapper_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1function__wrapper" kindref="compound">function_wrapper</ref>&lt;_Expr,<sp/><ref refid="structdetail_1_1sec__wrapper" kindref="compound">sec_wrapper</ref>&gt;&gt;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dExpr<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Variable, _Expr&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;binary_expression_wrapper&lt;_dExpr, binary_expression_wrapper&lt;function_wrapper&lt;_Expr, tan_wrapper&gt;</ref>,<sp/><ref refid="classdetail_1_1function__wrapper" kindref="compound">function_wrapper&lt;_Expr, sec_wrapper&gt;</ref>,<sp/>op_mul&gt;,op_mul&gt;&gt;::squeezedType;</highlight></codeline>
<codeline lineno="245"><highlight class="normal">};</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">//negativ<sp/>wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr&gt;</highlight></codeline>
<codeline lineno="249" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01negative_3_01__Expr_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1negative" kindref="compound">negative</ref>&lt;_Expr&gt;&gt;{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;negative&lt;typename squeezer&lt;typename diff_wrapper&lt;_Variable, _Expr&gt;::deriv_type</ref>&gt;::squeezedType&gt;&gt;::squeezedType;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">};</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//dx/dx<sp/>=<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Variable&gt;</highlight></codeline>
<codeline lineno="256" refid="classdetail_1_1diff__wrapper_3_01Variable_00_01Variable_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;Variable,<sp/>Variable&gt;</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>data_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Variable::data_type;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>fundamental_one_derivative&lt;<sp/>data_type<sp/>&gt;::type;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">};</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//real<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_L,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>_R,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>_Exp&gt;</highlight></codeline>
<codeline lineno="265" refid="classdetail_1_1diff__wrapper_3_01Variable_00_01real_3_01__T_00_01__L_00_01__R_00_01__Exp_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;Variable,<sp/><ref refid="classreal" kindref="compound">real</ref>&lt;_T,<sp/>_L,<sp/>_R,<sp/>_Exp&gt;&gt;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>data_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Variable::data_type;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>get_fundamental_zero&lt;<sp/>data_type,<sp/>_T<sp/>&gt;::type;</highlight></codeline>
<codeline lineno="270"><highlight class="normal">};</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//scalar_one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="274" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01scalar__one_3_01__T_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classscalar__one" kindref="compound">scalar_one</ref>&lt;_T&gt;&gt;</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>data_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable::data_type;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>get_fundamental_zero&lt;<sp/>data_type,<sp/>_T<sp/>&gt;::type;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">};</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//tensor_one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="283" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01tensor__one_3_01__T_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classtensor__one" kindref="compound">tensor_one</ref>&lt;_T&gt;&gt;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>data_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable::data_type;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>get_fundamental_zero&lt;<sp/>data_type,<sp/>_T<sp/>&gt;::type;</highlight></codeline>
<codeline lineno="288"><highlight class="normal">};</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//scalar_zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="292" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01scalar__zero_3_01__T_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classscalar__zero" kindref="compound">scalar_zero</ref>&lt;_T&gt;&gt;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>data_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable::data_type;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>get_fundamental_zero&lt;<sp/>data_type,<sp/>_T<sp/>&gt;::type;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">};</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//tensor_zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="301" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01tensor__zero_3_01__T_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classtensor__zero" kindref="compound">tensor_zero</ref>&lt;_T&gt;&gt;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>data_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable::data_type;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>get_fundamental_zero&lt;<sp/>data_type,<sp/>_T<sp/>&gt;::type;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">};</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//dconstant/dx<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_ID&gt;</highlight></codeline>
<codeline lineno="310" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01constant_3_01__T_00_01__ID_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classconstant" kindref="compound">constant</ref>&lt;_T,<sp/>_ID&gt;&gt;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>data_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable::data_type;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>get_fundamental_zero&lt;<sp/>data_type,<sp/>_T<sp/>&gt;::type;</highlight></codeline>
<codeline lineno="315"><highlight class="normal">};</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">//dx/dx<sp/>=<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_ID&gt;</highlight></codeline>
<codeline lineno="319" refid="classdetail_1_1diff__wrapper_3_01variable_3_01__T_00_01__ID_01_4_00_01variable_3_01__T_00_01__ID_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;<ref refid="classvariable" kindref="compound">variable</ref>&lt;_T,<sp/>_ID&gt;,<sp/><ref refid="classvariable" kindref="compound">variable</ref>&lt;_T,<sp/>_ID&gt;&gt;{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>fundamental_one_derivative&lt;<sp/>_T<sp/>&gt;::type;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">};</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//dy/dx<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T_LHS,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ID_LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T_RHS,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ID_RHS&gt;</highlight></codeline>
<codeline lineno="326" refid="classdetail_1_1diff__wrapper_3_01variable_3_01T__LHS_00_01ID__LHS_01_4_00_01variable_3_01T__RHS_00_01ID__RHS_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;<ref refid="classvariable" kindref="compound">variable</ref>&lt;T_LHS,<sp/>ID_LHS&gt;,<sp/><ref refid="classvariable" kindref="compound">variable</ref>&lt;T_RHS,<sp/>ID_RHS&gt;&gt;{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>get_fundamental_zero&lt;<sp/>T_LHS,<sp/>T_RHS<sp/>&gt;::type;</highlight></codeline>
<codeline lineno="329"><highlight class="normal">};</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">//define<sp/>derivative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">//dX/dx<sp/>--&gt;<sp/>0&lt;X::rank(),<sp/>X::dimension()&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">//dX/dX<sp/>=<sp/>dX_{ij}/dX_{kl}<sp/>=<sp/>outer&lt;I,<sp/>I,<sp/>&lt;1,2&gt;,<sp/>&lt;3,4&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">//II<sp/>:=<sp/>outer&lt;I,<sp/>I,<sp/>&lt;1,2&gt;,<sp/>&lt;3,4&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">//dX/dX<sp/>=<sp/>dX_{ijkl}/dX_{mnop}<sp/>=<sp/>outer&lt;II,<sp/>II,<sp/>&lt;1,2,3,4&gt;,<sp/>&lt;5,6,7,8&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">//<sp/>d(AiBj)/dXmn<sp/>=<sp/>D_{ijmn}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//<sp/>outer&lt;A,B,&lt;I&gt;,&lt;J&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">//<sp/>outer&lt;dA,<sp/>B,<sp/>&lt;1,3,4&gt;,<sp/>&lt;2&gt;&gt;<sp/>+<sp/>outer&lt;A,<sp/>dB,<sp/>&lt;1&gt;,<sp/>&lt;2,3,4&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">//<sp/>d(XijXkl)/dXmn<sp/>=<sp/>D_{ijklmn}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">//<sp/>outer&lt;X,X,&lt;I,J&gt;,&lt;K,L&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">//<sp/>outer&lt;dX,<sp/>X,<sp/>&lt;I,J,7,8&gt;,<sp/>&lt;K,L&gt;&gt;<sp/>+<sp/>outer&lt;X,<sp/>dX,<sp/>&lt;I,J&gt;,<sp/>&lt;K,L,7,8&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">//<sp/>outer&lt;X,X,&lt;ArgsLHS...&gt;,&lt;ArgsRHS...&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">//<sp/>RankOuter<sp/>=<sp/>sizeof...(ArgsLHS)<sp/>+<sp/>sizeof...(ArgsRHS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">//<sp/>RankArgument<sp/>=<sp/>X::rank()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//<sp/>RankResult<sp/>=<sp/>RankOuter<sp/>+<sp/>RankArgument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//outer<sp/>product</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">//derivative<sp/>w.r.t.<sp/>a<sp/>scalar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">//derivative<sp/>w.r.t.<sp/>a<sp/>tensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">//otimes(A,B)<sp/>=<sp/>outer&lt;&gt;(A,B)<sp/>+<sp/>outer&lt;&gt;(A,B)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_isVariableTensor,<sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_SeqLHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_SeqRHS&gt;</highlight></codeline>
<codeline lineno="358" refid="classdetail_1_1get__tensor__outer__product__differentiation" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1get__tensor__outer__product__differentiation" kindref="compound">get_tensor_outer_product_differentiation</ref></highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dL<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Variable, _LHS&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dR<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Variable, _RHS&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_lhs<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;tensor_outer_product_wrapper&lt;_dL, _RHS, _SeqLHS, _SeqRHS&gt;</ref>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_rhs<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;tensor_outer_product_wrapper&lt;_LHS, _dR, _SeqLHS, _SeqRHS&gt;</ref>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;binary_expression_wrapper&lt;_lhs, _rhs, op_add&gt;</ref>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="367"><highlight class="normal">};</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_SeqLHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_SeqRHS&gt;</highlight></codeline>
<codeline lineno="370" refid="classdetail_1_1get__tensor__outer__product__differentiation_3_01__Variable_00_01true_00_01__LHS_657c9b612feb6071885be885489bfaa6" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1get__tensor__outer__product__differentiation" kindref="compound">get_tensor_outer_product_differentiation</ref>&lt;_Variable,<sp/>true,<sp/>_LHS,<sp/>_RHS,<sp/>_SeqLHS,<sp/>_SeqRHS&gt;</highlight></codeline>
<codeline lineno="371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_lhs_data_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS::data_type;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_rhs_data_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS::data_type;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_var_data_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable::data_type;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__tensor__info" kindref="compound">_lhs_tensor_info</ref><sp/>=<sp/><ref refid="structdetail_1_1get__tensor__info" kindref="compound">get_tensor_info&lt;_lhs_data_type&gt;</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__tensor__info" kindref="compound">_rhs_tensor_info</ref><sp/>=<sp/><ref refid="structdetail_1_1get__tensor__info" kindref="compound">get_tensor_info&lt;_rhs_data_type&gt;</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__tensor__info" kindref="compound">_var_tensor_info</ref><sp/>=<sp/><ref refid="structdetail_1_1get__tensor__info" kindref="compound">get_tensor_info&lt;_var_data_type&gt;</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_RankLHS{_lhs_tensor_info::rank()};</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_RankRHS{_rhs_tensor_info::rank()};</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_RankOuter{_RankLHS<sp/>+<sp/>_RankRHS};</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_RankArgument{_var_tensor_info::rank()};</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_RankResult{_RankArgument<sp/>+<sp/>_RankOuter};</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_res_seq<sp/>=<sp/>tmech::detail::add_value_sequence_t&lt;tmech::detail::sequence_t&lt;_RankArgument-1&gt;,<sp/>_RankOuter+1&gt;;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_lhs_seq<sp/>=<sp/>tmech::detail::append_sequence_end_t&lt;_SeqLHS,<sp/>_res_seq&gt;;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_rhs_seq<sp/>=<sp/>tmech::detail::append_sequence_end_t&lt;_SeqRHS,<sp/>_res_seq&gt;;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dL<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Variable, _LHS&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dR<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Variable, _RHS&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_lhs<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;tensor_outer_product_wrapper&lt;_dL, _RHS, _lhs_seq, _SeqRHS&gt;</ref>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_rhs<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;tensor_outer_product_wrapper&lt;_LHS, _dR, _SeqLHS, _rhs_seq&gt;</ref>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;binary_expression_wrapper&lt;_lhs, _rhs, op_add&gt;</ref>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="396"><highlight class="normal">};</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_SeqLHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_SeqRHS&gt;</highlight></codeline>
<codeline lineno="399" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01tensor__outer__product__wrapper_3_01__LHS_00_0102425af87084a45a33915e727c34b601" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1tensor__outer__product__wrapper" kindref="compound">tensor_outer_product_wrapper</ref>&lt;_LHS,<sp/>_RHS,<sp/>_SeqLHS,<sp/>_SeqRHS&gt;&gt;</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1get__tensor__outer__product__differentiation" kindref="compound">get_tensor_outer_product_differentiation&lt;_Variable, is_tensor&lt;typename _Variable::data_type&gt;::value</ref>,<sp/>_LHS,<sp/>_RHS,<sp/>_SeqLHS,<sp/>_SeqRHS&gt;::type;</highlight></codeline>
<codeline lineno="403"><highlight class="normal">};</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">//inner<sp/>product</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">//(A_ikB_kj)&apos;mn<sp/>=<sp/>A_ikmn<sp/>B_kj<sp/>+<sp/>A_ik<sp/>B_kjmn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment">//inner&lt;2,1&gt;(A,B)&apos;<sp/>=<sp/>basis_change&lt;1,4,2,3&gt;(inner&lt;2,1&gt;(A&apos;,B))<sp/>+<sp/>inner&lt;2,1&gt;(A,B&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">//lhs<sp/>&lt;1,2&gt;<sp/>&lt;2&gt;<sp/>&lt;1,2,3,4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment">//rhs<sp/>&lt;1,2&gt;<sp/>&lt;1&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">//result<sp/>&lt;1,4,2,3&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="comment">//Input<sp/>&lt;1,2&gt;<sp/>&lt;3,4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="comment">//Number<sp/>of<sp/>free<sp/>indices<sp/>LHS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="comment">//Number<sp/>of<sp/>free<sp/>indices<sp/>RHS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">//&lt;1&gt;<sp/>+<sp/>&lt;1+ResltRank-1&gt;<sp/>+<sp/>&lt;2,3&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">//&lt;1,4,2,3&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">//(A_ijmnB_mnkl)&apos;qr<sp/>=<sp/>A_ijmnqr<sp/>B_mnkl<sp/>+<sp/>A_ijmn<sp/>B_mnklqr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment">//&lt;1,2&gt;<sp/>&lt;3,4&gt;<sp/>&lt;1,2,3,4,5,6&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="comment">//remove<sp/>contracting<sp/>indices<sp/>&lt;&lt;1,2,3,4,5,6&gt;,<sp/>&lt;3,4&gt;&gt;<sp/>--&gt;<sp/>&lt;1,2,5,6&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="comment">//add<sp/>contraction<sp/>indices<sp/>add<sp/>end<sp/>&lt;&lt;1,2,5,6&gt;,<sp/>&lt;3,4&gt;&gt;<sp/>--&gt;<sp/>&lt;1,2,5,6,3,4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment">//basis_change&lt;1,2,5,6,3,4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment">//<sp/>inner&lt;A,<sp/>B,<sp/>&lt;3,4&gt;,<sp/>&lt;1,2&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="comment">//<sp/>inner&lt;dA,<sp/>B,<sp/>&lt;3,4&gt;,<sp/>&lt;1,2&gt;&gt;<sp/>+<sp/>inner&lt;A,<sp/>dB,<sp/>&lt;3,4&gt;,<sp/>&lt;1,2&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_SeqLHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_SeqRHS&gt;</highlight></codeline>
<codeline lineno="427" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01tensor__inner__product__wrapper_3_01__LHS_00_011051eb27b66824b6886aa25fc1e90ec8" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1tensor__inner__product__wrapper" kindref="compound">tensor_inner_product_wrapper</ref>&lt;_LHS,<sp/>_RHS,<sp/>_SeqLHS,<sp/>_SeqRHS&gt;&gt;{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dL<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Variable, _LHS&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dR<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Variable, _RHS&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_lhs_data_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS::data_type;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_rhs_data_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS::data_type;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_var_data_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable::data_type;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__tensor__info" kindref="compound">_lhs_tensor_info</ref><sp/>=<sp/><ref refid="structdetail_1_1get__tensor__info" kindref="compound">get_tensor_info&lt;_lhs_data_type&gt;</ref>;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__tensor__info" kindref="compound">_rhs_tensor_info</ref><sp/>=<sp/><ref refid="structdetail_1_1get__tensor__info" kindref="compound">get_tensor_info&lt;_rhs_data_type&gt;</ref>;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__tensor__info" kindref="compound">_var_tensor_info</ref><sp/>=<sp/><ref refid="structdetail_1_1get__tensor__info" kindref="compound">get_tensor_info&lt;_var_data_type&gt;</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_InnerSizeLHS{_SeqLHS::size()};</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_InnerSizeRHS{_SeqRHS::size()};</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_RankLHS{_lhs_tensor_info::rank()};</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_RankRHS{_rhs_tensor_info::rank()};</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_RankArgument{_var_tensor_info::rank()};</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_ResultRank{_RankLHS<sp/>+<sp/>_RankRHS<sp/>+<sp/>_RankArgument<sp/>-<sp/>_InnerSizeLHS<sp/>-<sp/>_InnerSizeRHS};</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>lhs_seq<sp/>=<sp/>tmech::detail::add_value_sequence_t&lt;tmech::detail::sequence_t&lt;_RankLHS-_InnerSizeLHS-1&gt;,1&gt;;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>rhs_seq<sp/>=<sp/>tmech::detail::add_value_sequence_t&lt;tmech::detail::sequence_t&lt;_RankRHS-_InnerSizeRHS-1&gt;,<sp/>_ResultRank&gt;;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>result_seq<sp/>=<sp/>tmech::detail::add_value_sequence_t&lt;tmech::detail::sequence_t&lt;_RankArgument-1&gt;,<sp/>_RankLHS-_InnerSizeLHS+1&gt;;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>final_seq<sp/>=<sp/>tmech::detail::append_sequence_end_t&lt;tmech::detail::append_sequence_end_t&lt;lhs_seq,rhs_seq&gt;,result_seq&gt;;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_lhs<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;tensor_inner_product_wrapper&lt;_dL, _RHS, _SeqLHS, _SeqRHS&gt;</ref>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_rhs<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;tensor_inner_product_wrapper&lt;_LHS, _dR, _SeqLHS, _SeqRHS&gt;</ref>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;binary_expression_wrapper&lt;_lhs, _rhs, op_add&gt;</ref>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="454"><highlight class="normal">};</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">//trans(F)*F<sp/>=<sp/>inner&lt;2,1&gt;(otimesl(I,I)*F)<sp/>+<sp/>inner&lt;2,1&gt;(trans(F)*otimesu(I,I))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//basis<sp/><sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">//basis_change&lt;&lt;2,1&gt;&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">//dA^T/dA<sp/>=<sp/>basis_change&lt;&lt;2,1&gt;&gt;(dA_{ij}/dA_{kl})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>basis_change&lt;&lt;2,1&gt;&gt;(I_{ik}I_{jl})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_isVariableTensor,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Sequence&gt;</highlight></codeline>
<codeline lineno="462" refid="classdetail_1_1get__tensor__basis__change__differentiation" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1get__tensor__basis__change__differentiation" kindref="compound">get_tensor_basis_change_differentiation</ref></highlight></codeline>
<codeline lineno="463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dExpr<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Variable, _Expr&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;tensor_basis_change_wrapper&lt;_dExpr, _Sequence&gt;</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="467"><highlight class="normal">};</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Sequence&gt;</highlight></codeline>
<codeline lineno="470" refid="classdetail_1_1get__tensor__basis__change__differentiation_3_01__Variable_00_01true_00_01__Expr_00_01__Sequence_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1get__tensor__basis__change__differentiation" kindref="compound">get_tensor_basis_change_differentiation</ref>&lt;_Variable,<sp/>true,<sp/>_Expr,<sp/>_Sequence&gt;</highlight></codeline>
<codeline lineno="471"><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_expr_data_type<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr::data_type;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_var_data_type<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable::data_type;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__tensor__info" kindref="compound">_expr_tensor_info</ref><sp/>=<sp/><ref refid="structdetail_1_1get__tensor__info" kindref="compound">get_tensor_info&lt;_expr_data_type&gt;</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__tensor__info" kindref="compound">_var_tensor_info</ref><sp/><sp/>=<sp/><ref refid="structdetail_1_1get__tensor__info" kindref="compound">get_tensor_info&lt;_var_data_type&gt;</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_RankExpr{_expr_tensor_info::rank()};</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_RankArgument{_var_tensor_info::rank()};</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_RankResult{_RankArgument<sp/>+<sp/>_RankExpr};</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_res_seq<sp/><sp/>=<sp/>tmech::detail::add_value_sequence_t&lt;tmech::detail::sequence_t&lt;_RankArgument-1&gt;,<sp/>_RankResult-1&gt;;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_expr_seq<sp/>=<sp/>tmech::detail::append_sequence_end_t&lt;_Sequence,<sp/>_res_seq&gt;;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dExpr<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Variable, _Expr&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; tensor_basis_change_wrapper&lt;_dExpr, _expr_seq&gt;</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="488"><highlight class="normal">};</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Sequence&gt;</highlight></codeline>
<codeline lineno="491" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01tensor__basis__change__wrapper_3_01__Expr_00_01__Sequence_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1tensor__basis__change__wrapper" kindref="compound">tensor_basis_change_wrapper</ref>&lt;_Expr,<sp/>_Sequence&gt;&gt;</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1get__tensor__basis__change__differentiation" kindref="compound">get_tensor_basis_change_differentiation&lt;_Variable, is_tensor&lt;typename _Variable::data_type&gt;::value</ref>,<sp/>_Expr,<sp/>_Sequence&gt;::type;</highlight></codeline>
<codeline lineno="495"><highlight class="normal">};</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">//determinat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="comment">//det(X)&apos;<sp/>=<sp/>det(X)*trans(inv(X))<sp/>=<sp/>cof(X)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable&gt;</highlight></codeline>
<codeline lineno="501" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Variable_00_01det__wrapper_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1function__wrapper" kindref="compound">function_wrapper</ref>&lt;_Variable,<sp/><ref refid="structdetail_1_1det__wrapper" kindref="compound">det_wrapper</ref>&gt;&gt;</highlight></codeline>
<codeline lineno="502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; tensor_function_wrapper&lt;_Variable, cof_wrapper&gt;</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="505"><highlight class="normal">};</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="comment">//determinat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment">//det(A[X])&apos;<sp/>=<sp/>inner&lt;&lt;1,2&gt;,&lt;1,2&gt;&gt;(det(A[X])&apos;,A[X]&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr&gt;</highlight></codeline>
<codeline lineno="510" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01det__wrapper_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1function__wrapper" kindref="compound">function_wrapper</ref>&lt;_Expr,<sp/><ref refid="structdetail_1_1det__wrapper" kindref="compound">det_wrapper</ref>&gt;&gt;</highlight></codeline>
<codeline lineno="511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dExpr<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Variable, _Expr&gt;::deriv_type</ref>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_ddetExpr<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Expr, function_wrapper&lt;_Expr, det_wrapper&gt;</ref>&gt;::deriv_type&gt;::squeezedType;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;tensor_inner_product_wrapper&lt;_ddetExpr, _dExpr, tmech::sequence&lt;1,2&gt;</ref>,tmech::sequence&lt;1,2&gt;&gt;&gt;::squeezedType;</highlight></codeline>
<codeline lineno="516"><highlight class="normal">};</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="comment">//cofactor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment">//cof(X)&apos;<sp/>=<sp/>(det(X)*trans(inv(X)))&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>otimes(trans(inv(X)),<sp/>cof(X))<sp/>-<sp/>det(X)*basis_change&lt;2,1,3,4&gt;(otimesu(inv(X),inv(X)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable&gt;</highlight></codeline>
<codeline lineno="522" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01tensor__function__wrapper_3_01__Variable_00_01cof__wrapper_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1tensor__function__wrapper" kindref="compound">tensor_function_wrapper</ref>&lt;_Variable,<sp/><ref refid="structdetail_1_1cof__wrapper" kindref="compound">cof_wrapper</ref>&gt;&gt;</highlight></codeline>
<codeline lineno="523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1binary__expression__wrapper" kindref="compound">function</ref><sp/>=<sp/><ref refid="classdetail_1_1binary__expression__wrapper" kindref="compound">binary_expression_wrapper&lt;function_wrapper&lt;_Variable, det_wrapper&gt;</ref>,<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal"><sp/>(trans(<ref refid="classdetail_1_1inv__tensor" kindref="compound">inv_tensor&lt;_Variable&gt;</ref>())),<sp/>op_mul&gt;;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; typename diff_wrapper&lt;_Variable, function&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="527"><highlight class="normal">};</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="comment">//adjoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="comment">//adj(X)&apos;<sp/>=<sp/>trans(cof(X))&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable&gt;</highlight></codeline>
<codeline lineno="532" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01tensor__function__wrapper_3_01__Variable_00_01adj__wrapper_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1tensor__function__wrapper" kindref="compound">tensor_function_wrapper</ref>&lt;_Variable,<sp/><ref refid="structdetail_1_1adj__wrapper" kindref="compound">adj_wrapper</ref>&gt;&gt;</highlight></codeline>
<codeline lineno="533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>function<sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal"><sp/>(trans(<ref refid="classdetail_1_1tensor__function__wrapper" kindref="compound">tensor_function_wrapper&lt;_Variable, cof_wrapper&gt;</ref>()));</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; typename diff_wrapper&lt;_Variable, function&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="537"><highlight class="normal">};</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="comment">//trace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="comment">//trace(X)&apos;<sp/>=<sp/>I</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable&gt;</highlight></codeline>
<codeline lineno="542" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Variable_00_01trace__wrapper_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1function__wrapper" kindref="compound">function_wrapper</ref>&lt;_Variable,<sp/><ref refid="structdetail_1_1trace__wrapper" kindref="compound">trace_wrapper</ref>&gt;&gt;</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtensor__one" kindref="compound">deriv_type</ref><sp/>=<sp/><ref refid="classtensor__one" kindref="compound">tensor_one&lt;typename _Variable::data_type&gt;</ref>;</highlight></codeline>
<codeline lineno="546"><highlight class="normal">};</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="comment">//trace(A[X])&apos;<sp/>=<sp/>(A[X]:I)&apos;<sp/>=<sp/>partial(A[X]_{kl}*I_{kl})/partial<sp/>X_{ij}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr&gt;</highlight></codeline>
<codeline lineno="550" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01trace__wrapper_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1function__wrapper" kindref="compound">function_wrapper</ref>&lt;_Expr,<sp/><ref refid="structdetail_1_1trace__wrapper" kindref="compound">trace_wrapper</ref>&gt;&gt;</highlight></codeline>
<codeline lineno="551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtensor__one" kindref="compound">I</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classtensor__one" kindref="compound">tensor_one&lt;typename _Variable::data_type&gt;</ref>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dExpr<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; typename diff_wrapper&lt;_Variable, _Expr&gt;::deriv_type</ref><sp/>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt; tensor_inner_product_wrapper&lt;_dExpr, I, tmech::sequence&lt;1,2&gt;</ref>,<sp/>tmech::sequence&lt;1,2&gt;&gt;&gt;::squeezedType;</highlight></codeline>
<codeline lineno="556"><highlight class="normal">};</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">//inverse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment">//inv(X)′=-otimes(inv(X),inv(X))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="comment">//inv(X)_ik<sp/>X_kj<sp/>=<sp/>I_ij</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="comment">//inv(X)_ik/X_mn<sp/>X_kj<sp/>+<sp/>inv(X)_ik<sp/>X_kj/X_mn<sp/>=<sp/>0_ijmn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="comment">//inv(X)_ik/X_mn<sp/>=<sp/>-<sp/>inv(X)_ik<sp/>X_kj/X_mn<sp/>inv(X)_kj</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="comment">//inv(X)_ik/X_mn<sp/>=<sp/>-<sp/>otimesu(inv(X),<sp/>trans(inv(X)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Variable&gt;</highlight></codeline>
<codeline lineno="565" refid="classdetail_1_1diff__wrapper_3_01Variable_00_01inv__tensor_3_01Variable_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;Variable,<sp/><ref refid="classdetail_1_1inv__tensor" kindref="compound">inv_tensor</ref>&lt;Variable&gt;&gt;</highlight></codeline>
<codeline lineno="566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1negative" kindref="compound">deriv_type</ref><sp/>=<sp/><ref refid="classdetail_1_1negative" kindref="compound">negative&lt;tensor_outer_product_wrapper&lt;inv_tensor&lt;Variable&gt;</ref>,<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal"><sp/>(trans(<ref refid="classdetail_1_1inv__tensor" kindref="compound">inv_tensor&lt;Variable&gt;</ref>())),<sp/>tmech::sequence&lt;1,3&gt;,<sp/>tmech::sequence&lt;2,4&gt;&gt;&gt;;</highlight></codeline>
<codeline lineno="569"><highlight class="normal">};</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="comment">//inv(G(X))′=<sp/>-<sp/>inner&lt;&lt;3,4&gt;&lt;1,2&gt;&gt;(otimesu(inv(X),<sp/>inv(X)),<sp/>G(X)&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr&gt;</highlight></codeline>
<codeline lineno="573" refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01inv__tensor_3_01__Expr_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt;_Variable,<sp/><ref refid="classdetail_1_1inv__tensor" kindref="compound">inv_tensor</ref>&lt;_Expr&gt;&gt;</highlight></codeline>
<codeline lineno="574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dinvExpr<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Expr, inv_tensor&lt;_Expr&gt;</ref>&gt;::deriv_type&gt;::squeezedType;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_dExpr<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;typename diff_wrapper&lt;_Variable, _Expr&gt;::deriv_type</ref>&gt;::squeezedType;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1squeezer" kindref="compound">squeezer&lt;tensor_inner_product_wrapper&lt;_dinvExpr, _dExpr, tmech::sequence&lt;3,4&gt;</ref>,tmech::sequence&lt;1,2&gt;&gt;&gt;::squeezedType;</highlight></codeline>
<codeline lineno="579"><highlight class="normal">};</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="comment">//cross</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="comment">//dot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="comment">//isotropic<sp/>tensor<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="comment">//exp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="comment">//polar<sp/>decomposition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="comment">//norm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="comment">//pow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="comment">//n-th<sp/>derivative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="600" refid="classdetail_1_1diff__wrapper__n" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper__n" kindref="compound">diff_wrapper_n</ref></highlight></codeline>
<codeline lineno="601"><highlight class="normal">{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1diff__wrapper__n" kindref="compound">diff_wrapper_n</ref>&lt;N-1,<sp/>Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper&lt;Variable, T&gt;::deriv_type</ref>&gt;::deriv_type;</highlight></codeline>
<codeline lineno="604"><highlight class="normal">};</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="comment">//first<sp/>derivative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Variable,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="608" refid="classdetail_1_1diff__wrapper__n_3_011_00_01Variable_00_01T_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1diff__wrapper__n" kindref="compound">diff_wrapper_n</ref>&lt;1,<sp/>Variable,<sp/>T&gt;</highlight></codeline>
<codeline lineno="609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>deriv_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper&lt;Variable, T&gt;::deriv_type</ref>;</highlight></codeline>
<codeline lineno="612"><highlight class="normal">};</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Expression&gt;</highlight></codeline>
<codeline lineno="616" refid="classdetail_1_1derivative__wrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1derivative__wrapper" kindref="compound">derivative_wrapper</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvariable__base" kindref="compound">variable_base</ref>&lt;derivative_wrapper&lt;Expression&gt;&gt;</highlight></codeline>
<codeline lineno="617"><highlight class="normal">{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>expression<sp/>=<sp/>Expression;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>data_type<sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Expression::data_type;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdetail_1_1derivative__wrapper" kindref="compound">derivative_wrapper</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdetail_1_1derivative__wrapper" kindref="compound">derivative_wrapper</ref>(Expression<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>expr):</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_data(expr)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Data&gt;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>operator()(_Data<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>__data){</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_data(__data);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>get_expression(){</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_data;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/>print(std::ostream<sp/>&amp;<sp/>os)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_data.print(os);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>Expression<sp/>_data;</highlight></codeline>
<codeline lineno="643"><highlight class="normal">};</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>NAMESPACE<sp/>DETAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>DERIVATIVE_WRAPPER_BONES_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h"/>
  </compounddef>
</doxygen>
