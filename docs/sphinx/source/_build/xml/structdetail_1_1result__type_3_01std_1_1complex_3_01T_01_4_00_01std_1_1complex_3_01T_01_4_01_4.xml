<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="structdetail_1_1result__type_3_01std_1_1complex_3_01T_01_4_00_01std_1_1complex_3_01T_01_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>detail::result_type&lt; std::complex&lt; T &gt;, std::complex&lt; T &gt; &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structdetail_1_1result__type_3_01std_1_1complex_3_01T_01_4_00_01std_1_1complex_3_01T_01_4_01_4_1a7b45558eebf5a7df69ea8f266abed62d" prot="public" static="no">
        <type>std::complex&lt; T &gt;</type>
        <definition>using detail::result_type&lt; std::complex&lt; T &gt;, std::complex&lt; T &gt; &gt;::value_type =  std::complex&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>detail::result_type&lt; std::complex&lt; T &gt;, std::complex&lt; T &gt; &gt;::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/traits.h" line="261" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/traits.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structdetail_1_1result__type_3_01std_1_1complex_3_01T_01_4_00_01std_1_1complex_3_01T_01_4_01_4_1a8f1643589f3e54d75e7af948c5b1b6c7" prot="public" static="no">
        <type>value_type *</type>
        <definition>using detail::result_type&lt; std::complex&lt; T &gt;, std::complex&lt; T &gt; &gt;::pointer =  value_type*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <qualifiedname>detail::result_type&lt; std::complex&lt; T &gt;, std::complex&lt; T &gt; &gt;::pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/traits.h" line="262" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/traits.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structdetail_1_1result__type_3_01std_1_1complex_3_01T_01_4_00_01std_1_1complex_3_01T_01_4_01_4_1a2f2b7e461b94641840a435ffcd026ef5" prot="public" static="no">
        <type>const pointer</type>
        <definition>using detail::result_type&lt; std::complex&lt; T &gt;, std::complex&lt; T &gt; &gt;::const_pointer =  const pointer</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <qualifiedname>detail::result_type&lt; std::complex&lt; T &gt;, std::complex&lt; T &gt; &gt;::const_pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/traits.h" line="263" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/traits.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structdetail_1_1result__type_3_01std_1_1complex_3_01T_01_4_00_01std_1_1complex_3_01T_01_4_01_4_1a52efb9d0b0575a53b663373ca153a429" prot="public" static="no">
        <type>value_type &amp;</type>
        <definition>using detail::result_type&lt; std::complex&lt; T &gt;, std::complex&lt; T &gt; &gt;::expr_ref =  value_type&amp;</definition>
        <argsstring></argsstring>
        <name>expr_ref</name>
        <qualifiedname>detail::result_type&lt; std::complex&lt; T &gt;, std::complex&lt; T &gt; &gt;::expr_ref</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/traits.h" line="264" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/traits.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/traits.h" line="259" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/traits.h" bodystart="260" bodyend="265"/>
    <listofallmembers>
      <member refid="structdetail_1_1result__type_3_01std_1_1complex_3_01T_01_4_00_01std_1_1complex_3_01T_01_4_01_4_1a2f2b7e461b94641840a435ffcd026ef5" prot="public" virt="non-virtual"><scope>detail::result_type&lt; std::complex&lt; T &gt;, std::complex&lt; T &gt; &gt;</scope><name>const_pointer</name></member>
      <member refid="structdetail_1_1result__type_3_01std_1_1complex_3_01T_01_4_00_01std_1_1complex_3_01T_01_4_01_4_1a52efb9d0b0575a53b663373ca153a429" prot="public" virt="non-virtual"><scope>detail::result_type&lt; std::complex&lt; T &gt;, std::complex&lt; T &gt; &gt;</scope><name>expr_ref</name></member>
      <member refid="structdetail_1_1result__type_3_01std_1_1complex_3_01T_01_4_00_01std_1_1complex_3_01T_01_4_01_4_1a8f1643589f3e54d75e7af948c5b1b6c7" prot="public" virt="non-virtual"><scope>detail::result_type&lt; std::complex&lt; T &gt;, std::complex&lt; T &gt; &gt;</scope><name>pointer</name></member>
      <member refid="structdetail_1_1result__type_3_01std_1_1complex_3_01T_01_4_00_01std_1_1complex_3_01T_01_4_01_4_1a7b45558eebf5a7df69ea8f266abed62d" prot="public" virt="non-virtual"><scope>detail::result_type&lt; std::complex&lt; T &gt;, std::complex&lt; T &gt; &gt;</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
