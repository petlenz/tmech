<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01op__mul_01_4_01_4" kind="class" language="C++" prot="public">
    <compoundname>detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename _Variable</type>
      </param>
      <param>
        <type>typename _LHS</type>
      </param>
      <param>
        <type>typename _RHS</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01op__mul_01_4_01_4_1a1647c70472f04cc890d8f18c3e29b8df" prot="private" static="no">
        <type>typename <ref refid="classdetail_1_1squeezer" kindref="compound">squeezer</ref>&lt; typename <ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt; _Variable, _LHS &gt;::deriv_type &gt;::squeezedType</type>
        <definition>using detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;::_dL =  typename squeezer&lt;typename diff_wrapper&lt;_Variable, _LHS&gt;::deriv_type &gt;::squeezedType</definition>
        <argsstring></argsstring>
        <name>_dL</name>
        <qualifiedname>detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;::_dL</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" line="95" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01op__mul_01_4_01_4_1a0fd611e9e3980f24850f601854112912" prot="private" static="no">
        <type>typename <ref refid="classdetail_1_1squeezer" kindref="compound">squeezer</ref>&lt; typename <ref refid="classdetail_1_1diff__wrapper" kindref="compound">diff_wrapper</ref>&lt; _Variable, _RHS &gt;::deriv_type &gt;::squeezedType</type>
        <definition>using detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;::_dR =  typename squeezer&lt;typename diff_wrapper&lt;_Variable, _RHS&gt;::deriv_type &gt;::squeezedType</definition>
        <argsstring></argsstring>
        <name>_dR</name>
        <qualifiedname>detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;::_dR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" line="96" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01op__mul_01_4_01_4_1a1330b5ad93903129df85899d1e5e17df" prot="private" static="no">
        <type>typename <ref refid="classdetail_1_1squeezer" kindref="compound">squeezer</ref>&lt; <ref refid="classdetail_1_1binary__expression__wrapper" kindref="compound">binary_expression_wrapper</ref>&lt; _dL, _RHS, op_mul &gt; &gt;::squeezedType</type>
        <definition>using detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;::_LHS_New =  typename squeezer&lt; binary_expression_wrapper&lt;_dL, _RHS, op_mul&gt; &gt;::squeezedType</definition>
        <argsstring></argsstring>
        <name>_LHS_New</name>
        <qualifiedname>detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;::_LHS_New</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" line="97" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01op__mul_01_4_01_4_1a803fb891c264cede8082c868824a4be2" prot="private" static="no">
        <type>typename <ref refid="classdetail_1_1squeezer" kindref="compound">squeezer</ref>&lt; <ref refid="classdetail_1_1binary__expression__wrapper" kindref="compound">binary_expression_wrapper</ref>&lt; _LHS, _dR, op_mul &gt; &gt;::squeezedType</type>
        <definition>using detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;::_RHS_New =  typename squeezer&lt; binary_expression_wrapper&lt;_LHS, _dR, op_mul&gt; &gt;::squeezedType</definition>
        <argsstring></argsstring>
        <name>_RHS_New</name>
        <qualifiedname>detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;::_RHS_New</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" line="98" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01op__mul_01_4_01_4_1af82086a907abf7b93f97a08c380991dc" prot="private" static="no">
        <type>typename _LHS::data_type</type>
        <definition>using detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;::_lhs_data_type =  typename _LHS::data_type</definition>
        <argsstring></argsstring>
        <name>_lhs_data_type</name>
        <qualifiedname>detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;::_lhs_data_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" line="99" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01op__mul_01_4_01_4_1ad5dc404baf5c8d065304dad5da23f43a" prot="private" static="no">
        <type>typename _RHS::data_type</type>
        <definition>using detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;::_rhs_data_type =  typename _RHS::data_type</definition>
        <argsstring></argsstring>
        <name>_rhs_data_type</name>
        <qualifiedname>detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;::_rhs_data_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" line="100" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01op__mul_01_4_01_4_1a56ccefe87f9d1bc10b8ab17f2624500e" prot="private" static="no">
        <type>typename _Variable::data_type</type>
        <definition>using detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;::_variable_data_type =  typename _Variable::data_type</definition>
        <argsstring></argsstring>
        <name>_variable_data_type</name>
        <qualifiedname>detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;::_variable_data_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" line="101" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01op__mul_01_4_01_4_1a9e4562e15ff2fd8f241a6ea9527a3f7e" prot="public" static="no">
        <type>typename <ref refid="structdetail_1_1get__tensor__times__expression" kindref="compound">get_tensor_times_expression</ref>&lt; _Variable, _LHS, _RHS, <ref refid="structdetail_1_1is__tensor" kindref="compound">is_tensor</ref>&lt; _variable_data_type &gt;::value, <ref refid="structdetail_1_1is__tensor" kindref="compound">is_tensor</ref>&lt; _lhs_data_type &gt;::value, <ref refid="structdetail_1_1is__tensor" kindref="compound">is_tensor</ref>&lt; _rhs_data_type &gt;::value &gt;::deriv_type</type>
        <definition>using detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;::deriv_type =  typename get_tensor_times_expression&lt;_Variable, _LHS, _RHS, is_tensor&lt;_variable_data_type&gt;::value, is_tensor&lt;_lhs_data_type&gt;::value, is_tensor&lt;_rhs_data_type&gt;::value &gt;::deriv_type</definition>
        <argsstring></argsstring>
        <name>deriv_type</name>
        <qualifiedname>detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;::deriv_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" line="103" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" line="93" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" bodystart="94" bodyend="104"/>
    <listofallmembers>
      <member refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01op__mul_01_4_01_4_1a1647c70472f04cc890d8f18c3e29b8df" prot="private" virt="non-virtual"><scope>detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;</scope><name>_dL</name></member>
      <member refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01op__mul_01_4_01_4_1a0fd611e9e3980f24850f601854112912" prot="private" virt="non-virtual"><scope>detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;</scope><name>_dR</name></member>
      <member refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01op__mul_01_4_01_4_1af82086a907abf7b93f97a08c380991dc" prot="private" virt="non-virtual"><scope>detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;</scope><name>_lhs_data_type</name></member>
      <member refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01op__mul_01_4_01_4_1a1330b5ad93903129df85899d1e5e17df" prot="private" virt="non-virtual"><scope>detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;</scope><name>_LHS_New</name></member>
      <member refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01op__mul_01_4_01_4_1ad5dc404baf5c8d065304dad5da23f43a" prot="private" virt="non-virtual"><scope>detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;</scope><name>_rhs_data_type</name></member>
      <member refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01op__mul_01_4_01_4_1a803fb891c264cede8082c868824a4be2" prot="private" virt="non-virtual"><scope>detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;</scope><name>_RHS_New</name></member>
      <member refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01op__mul_01_4_01_4_1a56ccefe87f9d1bc10b8ab17f2624500e" prot="private" virt="non-virtual"><scope>detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;</scope><name>_variable_data_type</name></member>
      <member refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01op__mul_01_4_01_4_1a9e4562e15ff2fd8f241a6ea9527a3f7e" prot="public" virt="non-virtual"><scope>detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;</scope><name>deriv_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
