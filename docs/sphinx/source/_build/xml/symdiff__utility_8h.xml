<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="symdiff__utility_8h" kind="file" language="C++">
    <compoundname>symdiff_utility.h</compoundname>
    <includedby refid="tmech_8h" local="yes">/home/peter/SynologyDrive/Drive/tmech/include/tmech/tmech.h</includedby>
    <innerclass refid="structis__symdiff__type" prot="public">is_symdiff_type</innerclass>
    <innerclass refid="structis__symdiff__type_3_01variable__base_3_01__Derived_01_4_01_4" prot="public">is_symdiff_type&lt; variable_base&lt; _Derived &gt; &gt;</innerclass>
    <innerclass refid="structis__symdiff__type_3_01variable_3_01__T_00_01__VarID_01_4_01_4" prot="public">is_symdiff_type&lt; variable&lt; _T, _VarID &gt; &gt;</innerclass>
    <innerclass refid="structis__symdiff__type_3_01constant_3_01__T_00_01__ID_01_4_01_4" prot="public">is_symdiff_type&lt; constant&lt; _T, _ID &gt; &gt;</innerclass>
    <innerclass refid="structis__symdiff__type_3_01real_3_01__T_00_01__L_00_01__R_00_01__Exp_01_4_01_4" prot="public">is_symdiff_type&lt; real&lt; _T, _L, _R, _Exp &gt; &gt;</innerclass>
    <innerclass refid="structis__symdiff__type_3_01scalar__one_3_01__T_01_4_01_4" prot="public">is_symdiff_type&lt; scalar_one&lt; _T &gt; &gt;</innerclass>
    <innerclass refid="structis__symdiff__type_3_01scalar__zero_3_01__T_01_4_01_4" prot="public">is_symdiff_type&lt; scalar_zero&lt; _T &gt; &gt;</innerclass>
    <innerclass refid="structis__symdiff__type_3_01tensor__one_3_01__T_01_4_01_4" prot="public">is_symdiff_type&lt; tensor_one&lt; _T &gt; &gt;</innerclass>
    <innerclass refid="structis__symdiff__type_3_01tensor__zero_3_01__T_01_4_01_4" prot="public">is_symdiff_type&lt; tensor_zero&lt; _T &gt; &gt;</innerclass>
    <innerclass refid="structis__symdiff__type_3_01detail_1_1negative_3_01__Expr_01_4_01_4" prot="public">is_symdiff_type&lt; detail::negative&lt; _Expr &gt; &gt;</innerclass>
    <innerclass refid="structis__symdiff__type_3_01detail_1_1binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01__Op_01_4_01_4" prot="public">is_symdiff_type&lt; detail::binary_expression_wrapper&lt; _LHS, _RHS, _Op &gt; &gt;</innerclass>
    <innerclass refid="structis__symdiff__type_3_01detail_1_1tensor__outer__product__wrapper_3_01__LHS_00_01__RHS_00_016cc350c07c0b010d522894a8257a278b" prot="public">is_symdiff_type&lt; detail::tensor_outer_product_wrapper&lt; _LHS, _RHS, _SeqLHS, _SeqRHS &gt; &gt;</innerclass>
    <innerclass refid="structis__symdiff__type_3_01detail_1_1tensor__inner__product__wrapper_3_01__LHS_00_01__RHS_00_01f71bb0158860f538d02c56118a0bfae4" prot="public">is_symdiff_type&lt; detail::tensor_inner_product_wrapper&lt; _LHS, _RHS, _SeqLHS, _SeqRHS &gt; &gt;</innerclass>
    <innerclass refid="structis__symdiff__type_3_01detail_1_1tensor__basis__change__wrapper_3_01__Expr_00_01__Sequence_01_4_01_4" prot="public">is_symdiff_type&lt; detail::tensor_basis_change_wrapper&lt; _Expr, _Sequence &gt; &gt;</innerclass>
    <innerclass refid="structis__symdiff__type_3_01detail_1_1function__wrapper_3_01__Expr_00_01__Func_01_4_01_4" prot="public">is_symdiff_type&lt; detail::function_wrapper&lt; _Expr, _Func &gt; &gt;</innerclass>
    <innerclass refid="structis__symdiff__type_3_01detail_1_1diff__pow_3_01__Base_00_01__Exp_00_01__IsFundamental_01_4_01_4" prot="public">is_symdiff_type&lt; detail::diff_pow&lt; _Base, _Exp, _IsFundamental &gt; &gt;</innerclass>
    <innerclass refid="structis__symdiff__type_3_01detail_1_1inv__tensor_3_01__T_01_4_01_4" prot="public">is_symdiff_type&lt; detail::inv_tensor&lt; _T &gt; &gt;</innerclass>
    <innerclass refid="structis__symdiff__type_3_01detail_1_1tensor__function__wrapper_3_01__Expr_00_01__Func_01_4_01_4" prot="public">is_symdiff_type&lt; detail::tensor_function_wrapper&lt; _Expr, _Func &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__tensor" prot="public">detail::get_tensor</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__info" prot="public">detail::get_tensor_info</innerclass>
    <innerclass refid="structdetail_1_1get__value__type__detail_3_01__T_00_01false_01_4" prot="public">detail::get_value_type_detail&lt; _T, false &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__value__type__detail_3_01__T_00_01true_01_4" prot="public">detail::get_value_type_detail&lt; _T, true &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__value__type" prot="public">detail::get_value_type</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__type" prot="public">detail::get_tensor_type</innerclass>
    <innerclass refid="structdetail_1_1get__identity__tensor_3_01tmech_1_1tensor_3_01__T_00_01__Dim_00_01__Rank_01_4_01_4" prot="public">detail::get_identity_tensor&lt; tmech::tensor&lt; _T, _Dim, _Rank &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__zero__tensor_3_01tmech_1_1tensor_3_01__T_00_01__Dim_00_01__Rank_01_4_01_4" prot="public">detail::get_zero_tensor&lt; tmech::tensor&lt; _T, _Dim, _Rank &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1is__scalar" prot="public">detail::is_scalar</innerclass>
    <innerclass refid="structdetail_1_1is__tensor" prot="public">detail::is_tensor</innerclass>
    <innerclass refid="structdetail_1_1is__tensor_3_01tmech_1_1tensor_3_01__T_00_01__Dim_00_01__Rank_01_4_01_4" prot="public">detail::is_tensor&lt; tmech::tensor&lt; _T, _Dim, _Rank &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__one" prot="public">detail::get_tensor_one</innerclass>
    <innerclass refid="classdetail_1_1fundamental__tensor__one__derivative__detail_3_01__DataType_00_011ul_01_4" prot="public">detail::fundamental_tensor_one_derivative_detail&lt; _DataType, 1ul &gt;</innerclass>
    <innerclass refid="classdetail_1_1fundamental__tensor__one__derivative__detail_3_01__DataType_00_012ul_01_4" prot="public">detail::fundamental_tensor_one_derivative_detail&lt; _DataType, 2ul &gt;</innerclass>
    <innerclass refid="classdetail_1_1fundamental__tensor__one__derivative__detail_3_01__DataType_00_014ul_01_4" prot="public">detail::fundamental_tensor_one_derivative_detail&lt; _DataType, 4ul &gt;</innerclass>
    <innerclass refid="classdetail_1_1fundamental__one__derivative__detail_3_01__DataType_00_01false_01_4" prot="public">detail::fundamental_one_derivative_detail&lt; _DataType, false &gt;</innerclass>
    <innerclass refid="classdetail_1_1fundamental__one__derivative__detail_3_01__DataType_00_01true_01_4" prot="public">detail::fundamental_one_derivative_detail&lt; _DataType, true &gt;</innerclass>
    <innerclass refid="classdetail_1_1fundamental__one__derivative" prot="public">detail::fundamental_one_derivative</innerclass>
    <innerclass refid="structdetail_1_1get__fundamental__one__detail_3_01__Type_00_01false_01_4" prot="public">detail::get_fundamental_one_detail&lt; _Type, false &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__fundamental__one__detail_3_01__Type_00_01true_01_4" prot="public">detail::get_fundamental_one_detail&lt; _Type, true &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__fundamental__one" prot="public">detail::get_fundamental_one</innerclass>
    <innerclass refid="structdetail_1_1get__fundamental__zero__detail_3_01__LHS_00_01false_00_01__RHS_00_01false_01_4" prot="public">detail::get_fundamental_zero_detail&lt; _LHS, false, _RHS, false &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__fundamental__zero__detail_3_01__LHS_00_01true_00_01__RHS_00_01false_01_4" prot="public">detail::get_fundamental_zero_detail&lt; _LHS, true, _RHS, false &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__fundamental__zero__detail_3_01__LHS_00_01false_00_01__RHS_00_01true_01_4" prot="public">detail::get_fundamental_zero_detail&lt; _LHS, false, _RHS, true &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__fundamental__zero__detail_3_01__LHS_00_01true_00_01__RHS_00_01true_01_4" prot="public">detail::get_fundamental_zero_detail&lt; _LHS, true, _RHS, true &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__fundamental__zero" prot="public">detail::get_fundamental_zero</innerclass>
    <innerclass refid="structdetail_1_1get__zero__detail" prot="public">detail::get_zero_detail</innerclass>
    <innerclass refid="structdetail_1_1get__zero__detail_3_01__T_00_01true_01_4" prot="public">detail::get_zero_detail&lt; _T, true &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__zero" prot="public">detail::get_zero</innerclass>
    <innerclass refid="structdetail_1_1get__one__detail" prot="public">detail::get_one_detail</innerclass>
    <innerclass refid="structdetail_1_1get__one__detail_3_01__T_00_01true_01_4" prot="public">detail::get_one_detail&lt; _T, true &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__one" prot="public">detail::get_one</innerclass>
    <innerclass refid="structdetail_1_1print__operator_3_01tmech_1_1detail_1_1operator__add_01_4" prot="public">detail::print_operator&lt; tmech::detail::operator_add &gt;</innerclass>
    <innerclass refid="structdetail_1_1print__operator_3_01tmech_1_1detail_1_1operator__sub_01_4" prot="public">detail::print_operator&lt; tmech::detail::operator_sub &gt;</innerclass>
    <innerclass refid="structdetail_1_1print__operator_3_01tmech_1_1detail_1_1operator__mul_01_4" prot="public">detail::print_operator&lt; tmech::detail::operator_mul &gt;</innerclass>
    <innerclass refid="structdetail_1_1print__operator_3_01tmech_1_1detail_1_1operator__div_01_4" prot="public">detail::print_operator&lt; tmech::detail::operator_div &gt;</innerclass>
    <innernamespace refid="namespacedetail">detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>SYMDIFF_UTILITY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYMDIFF_UTILITY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="5" refid="structis__symdiff__type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__symdiff__type" kindref="compound">is_symdiff_type</ref></highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::false_type;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9"><highlight class="normal">};</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Derived&gt;</highlight></codeline>
<codeline lineno="12" refid="structis__symdiff__type_3_01variable__base_3_01__Derived_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__symdiff__type" kindref="compound">is_symdiff_type</ref>&lt;<ref refid="classvariable__base" kindref="compound">variable_base</ref>&lt;_Derived&gt;&gt;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">};</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_VarID&gt;</highlight></codeline>
<codeline lineno="19" refid="structis__symdiff__type_3_01variable_3_01__T_00_01__VarID_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__symdiff__type" kindref="compound">is_symdiff_type</ref>&lt;<ref refid="classvariable" kindref="compound">variable</ref>&lt;_T,<sp/>_VarID&gt;&gt;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_ID&gt;</highlight></codeline>
<codeline lineno="26" refid="structis__symdiff__type_3_01constant_3_01__T_00_01__ID_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__symdiff__type" kindref="compound">is_symdiff_type</ref>&lt;<ref refid="classconstant" kindref="compound">constant</ref>&lt;_T,<sp/>_ID&gt;&gt;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_L,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_R,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_Exp&gt;</highlight></codeline>
<codeline lineno="33" refid="structis__symdiff__type_3_01real_3_01__T_00_01__L_00_01__R_00_01__Exp_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__symdiff__type" kindref="compound">is_symdiff_type</ref>&lt;<ref refid="classreal" kindref="compound">real</ref>&lt;_T,<sp/>_L,<sp/>_R,<sp/>_Exp&gt;&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="40" refid="structis__symdiff__type_3_01scalar__one_3_01__T_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__symdiff__type" kindref="compound">is_symdiff_type</ref>&lt;<ref refid="classscalar__one" kindref="compound">scalar_one</ref>&lt;_T&gt;&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="47" refid="structis__symdiff__type_3_01scalar__zero_3_01__T_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__symdiff__type" kindref="compound">is_symdiff_type</ref>&lt;<ref refid="classscalar__zero" kindref="compound">scalar_zero</ref>&lt;_T&gt;&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="54" refid="structis__symdiff__type_3_01tensor__one_3_01__T_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__symdiff__type" kindref="compound">is_symdiff_type</ref>&lt;<ref refid="classtensor__one" kindref="compound">tensor_one</ref>&lt;_T&gt;&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="61" refid="structis__symdiff__type_3_01tensor__zero_3_01__T_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__symdiff__type" kindref="compound">is_symdiff_type</ref>&lt;<ref refid="classtensor__zero" kindref="compound">tensor_zero</ref>&lt;_T&gt;&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr&gt;</highlight></codeline>
<codeline lineno="68" refid="structis__symdiff__type_3_01detail_1_1negative_3_01__Expr_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__symdiff__type" kindref="compound">is_symdiff_type</ref>&lt;detail::negative&lt;_Expr&gt;&gt;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Op&gt;</highlight></codeline>
<codeline lineno="75" refid="structis__symdiff__type_3_01detail_1_1binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01__Op_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__symdiff__type" kindref="compound">is_symdiff_type</ref>&lt;detail::binary_expression_wrapper&lt;_LHS,<sp/>_RHS,<sp/>_Op&gt;&gt;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_SeqLHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_SeqRHS&gt;</highlight></codeline>
<codeline lineno="82" refid="structis__symdiff__type_3_01detail_1_1tensor__outer__product__wrapper_3_01__LHS_00_01__RHS_00_016cc350c07c0b010d522894a8257a278b" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__symdiff__type" kindref="compound">is_symdiff_type</ref>&lt;detail::tensor_outer_product_wrapper&lt;_LHS,<sp/>_RHS,<sp/>_SeqLHS,<sp/>_SeqRHS&gt;&gt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_SeqLHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_SeqRHS&gt;</highlight></codeline>
<codeline lineno="89" refid="structis__symdiff__type_3_01detail_1_1tensor__inner__product__wrapper_3_01__LHS_00_01__RHS_00_01f71bb0158860f538d02c56118a0bfae4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__symdiff__type" kindref="compound">is_symdiff_type</ref>&lt;detail::tensor_inner_product_wrapper&lt;_LHS,<sp/>_RHS,<sp/>_SeqLHS,<sp/>_SeqRHS&gt;&gt;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Sequence&gt;</highlight></codeline>
<codeline lineno="96" refid="structis__symdiff__type_3_01detail_1_1tensor__basis__change__wrapper_3_01__Expr_00_01__Sequence_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__symdiff__type" kindref="compound">is_symdiff_type</ref>&lt;detail::tensor_basis_change_wrapper&lt;_Expr,<sp/>_Sequence&gt;&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Func&gt;</highlight></codeline>
<codeline lineno="103" refid="structis__symdiff__type_3_01detail_1_1function__wrapper_3_01__Expr_00_01__Func_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__symdiff__type" kindref="compound">is_symdiff_type</ref>&lt;detail::function_wrapper&lt;_Expr,<sp/>_Func&gt;&gt;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Base,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Exp,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_IsFundamental&gt;</highlight></codeline>
<codeline lineno="110" refid="structis__symdiff__type_3_01detail_1_1diff__pow_3_01__Base_00_01__Exp_00_01__IsFundamental_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__symdiff__type" kindref="compound">is_symdiff_type</ref>&lt;detail::diff_pow&lt;_Base,<sp/>_Exp,<sp/>_IsFundamental&gt;&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="117" refid="structis__symdiff__type_3_01detail_1_1inv__tensor_3_01__T_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__symdiff__type" kindref="compound">is_symdiff_type</ref>&lt;detail::inv_tensor&lt;_T&gt;&gt;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Expr,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Func&gt;</highlight></codeline>
<codeline lineno="124" refid="structis__symdiff__type_3_01detail_1_1tensor__function__wrapper_3_01__Expr_00_01__Func_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__symdiff__type" kindref="compound">is_symdiff_type</ref>&lt;detail::tensor_function_wrapper&lt;_Expr,<sp/>_Func&gt;&gt;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Type,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>_Arguments&gt;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_update<sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(std::declval&lt;_Type&gt;().update(std::declval&lt;_Arguments&gt;()...));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Type,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>_Arguments&gt;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_reset<sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(std::declval&lt;_Type&gt;().reset(std::declval&lt;_Arguments&gt;()...));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_Dim,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_Rank&gt;</highlight></codeline>
<codeline lineno="142" refid="structdetail_1_1get__tensor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__tensor" kindref="compound">get_tensor</ref></highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtmech_1_1tensor" kindref="compound">type</ref><sp/>=<sp/><ref refid="classtmech_1_1tensor" kindref="compound">tmech::tensor&lt;_T, _Dim, _Rank&gt;</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tensor&gt;</highlight></codeline>
<codeline lineno="148" refid="structdetail_1_1get__tensor__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__tensor__info" kindref="compound">get_tensor_info</ref>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tensor::value_type;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rank(){</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Tensor::rank();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dimension(){</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Tensor::dimension();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal">};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_IsTensor&gt;</highlight></codeline>
<codeline lineno="162" refid="structdetail_1_1get__value__type__detail" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__value__type__detail" kindref="compound">get_value_type_detail</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="165" refid="structdetail_1_1get__value__type__detail_3_01__T_00_01false_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__value__type__detail" kindref="compound">get_value_type_detail</ref>&lt;_T,<sp/>false&gt;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/>_T;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="171" refid="structdetail_1_1get__value__type__detail_3_01__T_00_01true_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__value__type__detail" kindref="compound">get_value_type_detail</ref>&lt;_T,<sp/>true&gt;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>get_tensor_info&lt;_T&gt;::value_type;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="177" refid="structdetail_1_1get__value__type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__value__type" kindref="compound">get_value_type</ref></highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__value__type__detail" kindref="compound">get_value_type_detail&lt;_T, is_tensor&lt;_T&gt;::value</ref>&gt;::value_type;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tensor&gt;</highlight></codeline>
<codeline lineno="183" refid="structdetail_1_1get__tensor__type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__tensor__type" kindref="compound">get_tensor_type</ref></highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__tensor__info" kindref="compound">t_info</ref><sp/>=<sp/><ref refid="structdetail_1_1get__tensor__info" kindref="compound">get_tensor_info&lt;Tensor&gt;</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__tensor" kindref="compound">get_tensor</ref>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>t_info::value_type,<sp/>t_info::dimension(),<sp/>t_info::rank()&gt;::type;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">};</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__identity__tensor" kindref="compound">get_identity_tensor</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_Dim,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_Rank&gt;</highlight></codeline>
<codeline lineno="193" refid="structdetail_1_1get__identity__tensor_3_01tmech_1_1tensor_3_01__T_00_01__Dim_00_01__Rank_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__identity__tensor" kindref="compound">get_identity_tensor</ref>&lt;tmech::<ref refid="classtensor" kindref="compound">tensor</ref>&lt;_T,<sp/>_Dim,<sp/>_Rank&gt;&gt;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtmech_1_1tensor" kindref="compound">data_type</ref><sp/>=<sp/><ref refid="classtmech_1_1tensor" kindref="compound">tmech::tensor&lt;_T, _Dim, 2&gt;</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtmech_1_1eye" kindref="compound">type</ref><sp/>=<sp/><ref refid="classtmech_1_1eye" kindref="compound">tmech::eye&lt;_T, _Dim, 2&gt;</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">};</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__zero__tensor" kindref="compound">get_zero_tensor</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_Dim,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_Rank&gt;</highlight></codeline>
<codeline lineno="204" refid="structdetail_1_1get__zero__tensor_3_01tmech_1_1tensor_3_01__T_00_01__Dim_00_01__Rank_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__zero__tensor" kindref="compound">get_zero_tensor</ref>&lt;tmech::<ref refid="classtensor" kindref="compound">tensor</ref>&lt;_T,<sp/>_Dim,<sp/>_Rank&gt;&gt;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtmech_1_1zeros" kindref="compound">type</ref><sp/>=<sp/><ref refid="classtmech_1_1zeros" kindref="compound">tmech::zeros&lt;_T, _Dim, _Rank&gt;</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="211" refid="structdetail_1_1is__scalar" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1is__scalar" kindref="compound">is_scalar</ref></highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>std::is_fundamental_v&lt;_T&gt;;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">};</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="217" refid="structdetail_1_1is__tensor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1is__tensor" kindref="compound">is_tensor</ref></highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">};</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_Dim,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_Rank&gt;</highlight></codeline>
<codeline lineno="223" refid="structdetail_1_1is__tensor_3_01tmech_1_1tensor_3_01__T_00_01__Dim_00_01__Rank_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1is__tensor" kindref="compound">is_tensor</ref>&lt;tmech::<ref refid="classtensor" kindref="compound">tensor</ref>&lt;_T,<sp/>_Dim,<sp/>_Rank&gt;&gt;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor&gt;</highlight></codeline>
<codeline lineno="231" refid="structdetail_1_1get__tensor__one" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__tensor__one" kindref="compound">get_tensor_one</ref></highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__tensor__info" kindref="compound">t_info</ref><sp/>=<sp/><ref refid="structdetail_1_1get__tensor__info" kindref="compound">get_tensor_info&lt;_Tensor&gt;</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtmech_1_1eye" kindref="compound">type</ref><sp/>=<sp/><ref refid="classtmech_1_1eye" kindref="compound">tmech::eye</ref>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>t_info::value_type,<sp/>t_info::dimension(),<sp/>t_info::rank()&gt;;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">};</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_DataType,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_isTensor&gt;</highlight></codeline>
<codeline lineno="241" refid="classdetail_1_1fundamental__one__derivative__detail" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1fundamental__one__derivative__detail" kindref="compound">fundamental_one_derivative_detail</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_DataType,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_Rank&gt;</highlight></codeline>
<codeline lineno="244" refid="classdetail_1_1fundamental__tensor__one__derivative__detail" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1fundamental__tensor__one__derivative__detail" kindref="compound">fundamental_tensor_one_derivative_detail</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">//dX/dX<sp/>=<sp/>dX_{i}/dX_{j}<sp/>=<sp/>I</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_DataType&gt;</highlight></codeline>
<codeline lineno="248" refid="classdetail_1_1fundamental__tensor__one__derivative__detail_3_01__DataType_00_011ul_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1fundamental__tensor__one__derivative__detail" kindref="compound">fundamental_tensor_one_derivative_detail</ref>&lt;_DataType,<sp/>1ul&gt;</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtensor__one" kindref="compound">type</ref><sp/>=<sp/><ref refid="classtensor__one" kindref="compound">tensor_one&lt;_DataType&gt;</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">};</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//dX/dX<sp/>=<sp/>dX_{ij}/dX_{kl}<sp/>=<sp/>outer&lt;I,<sp/>I,<sp/>&lt;1,2&gt;,<sp/>&lt;3,4&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_DataType&gt;</highlight></codeline>
<codeline lineno="256" refid="classdetail_1_1fundamental__tensor__one__derivative__detail_3_01__DataType_00_012ul_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1fundamental__tensor__one__derivative__detail" kindref="compound">fundamental_tensor_one_derivative_detail</ref>&lt;_DataType,<sp/>2ul&gt;</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtensor__one" kindref="compound">I</ref><sp/>=<sp/><ref refid="classtensor__one" kindref="compound">tensor_one&lt;_DataType&gt;</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1tensor__outer__product__wrapper" kindref="compound">type</ref><sp/>=<sp/><ref refid="classdetail_1_1tensor__outer__product__wrapper" kindref="compound">tensor_outer_product_wrapper&lt;I, I, tmech::sequence&lt;1,3&gt;</ref>,<sp/>tmech::sequence&lt;2,4&gt;&gt;;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">};</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//dX/dX<sp/>=<sp/>dX_{ijkl}/dX_{mnop}<sp/>=<sp/>1,5,2,6,<sp/>3,7,4,8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_DataType&gt;</highlight></codeline>
<codeline lineno="265" refid="classdetail_1_1fundamental__tensor__one__derivative__detail_3_01__DataType_00_014ul_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1fundamental__tensor__one__derivative__detail" kindref="compound">fundamental_tensor_one_derivative_detail</ref>&lt;_DataType,<sp/>4ul&gt;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtensor__one" kindref="compound">I</ref><sp/>=<sp/><ref refid="classtensor__one" kindref="compound">tensor_one&lt;_DataType&gt;</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal"><sp/>(tmech::basis_change&lt;tmech::sequence&lt;1,5,2,6,3,7,4,8&gt;&gt;(tmech::otimes(tmech::otimes(<ref refid="classtensor__one" kindref="compound">I</ref>(),<ref refid="classtensor__one" kindref="compound">I</ref>()),<sp/>tmech::otimes(<ref refid="classtensor__one" kindref="compound">I</ref>(),<ref refid="classtensor__one" kindref="compound">I</ref>()))));</highlight></codeline>
<codeline lineno="270"><highlight class="normal">};</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//dx/dx<sp/>=<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_DataType&gt;</highlight></codeline>
<codeline lineno="275" refid="classdetail_1_1fundamental__one__derivative__detail_3_01__DataType_00_01false_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1fundamental__one__derivative__detail" kindref="compound">fundamental_one_derivative_detail</ref>&lt;_DataType,<sp/>false&gt;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classscalar__one" kindref="compound">type</ref><sp/>=<sp/><ref refid="classscalar__one" kindref="compound">scalar_one&lt;_DataType&gt;</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">};</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_DataType&gt;</highlight></codeline>
<codeline lineno="282" refid="classdetail_1_1fundamental__one__derivative__detail_3_01__DataType_00_01true_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1fundamental__one__derivative__detail" kindref="compound">fundamental_one_derivative_detail</ref>&lt;_DataType,<sp/>true&gt;</highlight></codeline>
<codeline lineno="283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1fundamental__tensor__one__derivative__detail" kindref="compound">fundamental_tensor_one_derivative_detail&lt;_DataType, get_tensor_info&lt;_DataType&gt;::rank</ref>()&gt;::type;</highlight></codeline>
<codeline lineno="286"><highlight class="normal">};</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_DataType&gt;</highlight></codeline>
<codeline lineno="289" refid="classdetail_1_1fundamental__one__derivative" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1fundamental__one__derivative" kindref="compound">fundamental_one_derivative</ref></highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1fundamental__one__derivative__detail" kindref="compound">fundamental_one_derivative_detail&lt;_DataType, is_tensor&lt;_DataType&gt;::value</ref>&gt;::type;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">};</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//dx/dx<sp/>=<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Type,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_isTensor&gt;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__fundamental__one__detail" kindref="compound">get_fundamental_one_detail</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Type&gt;</highlight></codeline>
<codeline lineno="301" refid="structdetail_1_1get__fundamental__one__detail_3_01__Type_00_01false_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__fundamental__one__detail" kindref="compound">get_fundamental_one_detail</ref>&lt;_Type,<sp/>false&gt;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//or<sp/>_RHS;<sp/>it<sp/>dosent<sp/>matter<sp/>both<sp/>are<sp/>the<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classscalar__one" kindref="compound">type</ref><sp/>=<sp/><ref refid="classscalar__one" kindref="compound">scalar_one&lt;_Type&gt;</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">};</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//dX/dX<sp/>=<sp/>I&lt;X::dimension(),<sp/>2*X::rank()&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Type&gt;</highlight></codeline>
<codeline lineno="309" refid="structdetail_1_1get__fundamental__one__detail_3_01__Type_00_01true_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__fundamental__one__detail" kindref="compound">get_fundamental_one_detail</ref>&lt;_Type,<sp/>true&gt;</highlight></codeline>
<codeline lineno="310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtensor__one" kindref="compound">type</ref><sp/>=<sp/><ref refid="classtensor__one" kindref="compound">tensor_one&lt;_Type&gt;</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//typename<sp/>fundamental_tensor_one_derivative&lt;_Type,<sp/>get_tensor_info&lt;_Type&gt;::rank()&gt;::type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal">};</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Type&gt;</highlight></codeline>
<codeline lineno="316" refid="structdetail_1_1get__fundamental__one" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__fundamental__one" kindref="compound">get_fundamental_one</ref></highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__fundamental__one__detail" kindref="compound">get_fundamental_one_detail&lt;_Type, is_tensor&lt;_Type&gt;::value</ref>&gt;::type;</highlight></codeline>
<codeline lineno="319"><highlight class="normal">};</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_is_LHS_Tensor,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_is_RHS_Tensor&gt;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__fundamental__zero__detail" kindref="compound">get_fundamental_zero_detail</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS&gt;</highlight></codeline>
<codeline lineno="328" refid="structdetail_1_1get__fundamental__zero__detail_3_01__LHS_00_01false_00_01__RHS_00_01false_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__fundamental__zero__detail" kindref="compound">get_fundamental_zero_detail</ref>&lt;_LHS,<sp/>false,<sp/>_RHS,<sp/>false&gt;</highlight></codeline>
<codeline lineno="329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//or<sp/>_RHS;<sp/>it<sp/>dosent<sp/>matter<sp/>both<sp/>are<sp/>the<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classscalar__zero" kindref="compound">type</ref><sp/>=<sp/><ref refid="classscalar__zero" kindref="compound">scalar_zero&lt;_LHS&gt;</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal">};</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS&gt;</highlight></codeline>
<codeline lineno="335" refid="structdetail_1_1get__fundamental__zero__detail_3_01__LHS_00_01true_00_01__RHS_00_01false_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__fundamental__zero__detail" kindref="compound">get_fundamental_zero_detail</ref>&lt;_LHS,<sp/>true,<sp/>_RHS,<sp/>false&gt;</highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtensor__zero" kindref="compound">type</ref><sp/>=<sp/><ref refid="classtensor__zero" kindref="compound">tensor_zero&lt;_LHS&gt;</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal">};</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS&gt;</highlight></codeline>
<codeline lineno="341" refid="structdetail_1_1get__fundamental__zero__detail_3_01__LHS_00_01false_00_01__RHS_00_01true_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__fundamental__zero__detail" kindref="compound">get_fundamental_zero_detail</ref>&lt;_LHS,<sp/>false,<sp/>_RHS,<sp/>true&gt;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtensor__zero" kindref="compound">type</ref><sp/>=<sp/><ref refid="classtensor__zero" kindref="compound">tensor_zero&lt;_RHS&gt;</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal">};</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS&gt;</highlight></codeline>
<codeline lineno="347" refid="structdetail_1_1get__fundamental__zero__detail_3_01__LHS_00_01true_00_01__RHS_00_01true_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__fundamental__zero__detail" kindref="compound">get_fundamental_zero_detail</ref>&lt;_LHS,<sp/>true,<sp/>_RHS,<sp/>true&gt;</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtensor__zero" kindref="compound">type</ref><sp/>=<sp/><ref refid="classtensor__zero" kindref="compound">tensor_zero</ref>&lt;<ref refid="classtmech_1_1tensor" kindref="compound">tmech::tensor</ref>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS::value_type,<sp/>_LHS::dimension(),<sp/>_LHS::rank()+_RHS::rank()&gt;&gt;;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">};</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS&gt;</highlight></codeline>
<codeline lineno="353" refid="structdetail_1_1get__fundamental__zero" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__fundamental__zero" kindref="compound">get_fundamental_zero</ref></highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__fundamental__zero__detail" kindref="compound">get_fundamental_zero_detail&lt;_LHS, is_tensor&lt;_LHS&gt;::value</ref>,<sp/>_RHS,<sp/><ref refid="structdetail_1_1is__tensor" kindref="compound">is_tensor&lt;_RHS&gt;::value</ref>&gt;::type;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">};</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_IsTensor&gt;</highlight></codeline>
<codeline lineno="360" refid="structdetail_1_1get__zero__detail" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__zero__detail" kindref="compound">get_zero_detail</ref></highlight></codeline>
<codeline lineno="361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classscalar__zero" kindref="compound">type</ref><sp/>=<sp/><ref refid="classscalar__zero" kindref="compound">scalar_zero&lt;_T&gt;</ref>;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">};</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="366" refid="structdetail_1_1get__zero__detail_3_01__T_00_01true_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__zero__detail" kindref="compound">get_zero_detail</ref>&lt;_T,<sp/>true&gt;</highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtensor__zero" kindref="compound">type</ref><sp/>=<sp/><ref refid="classtensor__zero" kindref="compound">tensor_zero&lt;_T&gt;</ref>;</highlight></codeline>
<codeline lineno="369"><highlight class="normal">};</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="372" refid="structdetail_1_1get__zero" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__zero" kindref="compound">get_zero</ref></highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__zero__detail" kindref="compound">get_zero_detail&lt;_T, is_tensor&lt;_T&gt;::value</ref>&gt;::type;</highlight></codeline>
<codeline lineno="375"><highlight class="normal">};</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_IsTensor&gt;</highlight></codeline>
<codeline lineno="379" refid="structdetail_1_1get__one__detail" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__one__detail" kindref="compound">get_one_detail</ref></highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classscalar__one" kindref="compound">type</ref><sp/>=<sp/><ref refid="classscalar__one" kindref="compound">scalar_one&lt;_T&gt;</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal">};</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="385" refid="structdetail_1_1get__one__detail_3_01__T_00_01true_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__one__detail" kindref="compound">get_one_detail</ref>&lt;_T,<sp/>true&gt;</highlight></codeline>
<codeline lineno="386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtensor__one" kindref="compound">type</ref><sp/>=<sp/><ref refid="classtensor__one" kindref="compound">tensor_one&lt;_T&gt;</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal">};</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="391" refid="structdetail_1_1get__one" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__one" kindref="compound">get_one</ref></highlight></codeline>
<codeline lineno="392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__one__detail" kindref="compound">get_one_detail&lt;_T, is_tensor&lt;_T&gt;::value</ref>&gt;::type;</highlight></codeline>
<codeline lineno="394"><highlight class="normal">};</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1print__operator" kindref="compound">print_operator</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="401" refid="structdetail_1_1print__operator_3_01tmech_1_1detail_1_1operator__add_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1print__operator" kindref="compound">print_operator</ref>&lt;tmech::<ref refid="structdetail_1_1operator__add" kindref="compound">detail::operator_add</ref>&gt;{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>print(){</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal">};</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="408" refid="structdetail_1_1print__operator_3_01tmech_1_1detail_1_1operator__sub_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1print__operator" kindref="compound">print_operator</ref>&lt;tmech::<ref refid="structdetail_1_1operator__sub" kindref="compound">detail::operator_sub</ref>&gt;{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>print(){</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal">};</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="415" refid="structdetail_1_1print__operator_3_01tmech_1_1detail_1_1operator__mul_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1print__operator" kindref="compound">print_operator</ref>&lt;tmech::<ref refid="structdetail_1_1operator__mul" kindref="compound">detail::operator_mul</ref>&gt;{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>print(){</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal">};</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="422" refid="structdetail_1_1print__operator_3_01tmech_1_1detail_1_1operator__div_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1print__operator" kindref="compound">print_operator</ref>&lt;tmech::<ref refid="structdetail_1_1operator__div" kindref="compound">detail::operator_div</ref>&gt;{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>print(){</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal">};</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>NAMESPACE<sp/>DETAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>SYMDIFF_UTILITY_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/symdiff_utility.h"/>
  </compounddef>
</doxygen>
