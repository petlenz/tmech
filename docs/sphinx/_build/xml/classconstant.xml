<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classconstant" kind="class" language="C++" prot="public">
    <compoundname>constant</compoundname>
    <basecompoundref refid="classvariable__base" prot="public" virt="non-virtual">variable_base&lt; constant&lt; _T, _ID &gt; &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename _T</type>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>_ID</declname>
        <defname>_ID</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classconstant_1a7dbcaf1365dd8118831372b9d71bbb40" prot="public" static="no">
        <type>_T</type>
        <definition>using constant&lt; _T, _ID &gt;::data_type =  _T</definition>
        <argsstring></argsstring>
        <name>data_type</name>
        <qualifiedname>constant::data_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" line="9" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classconstant_1a82cc77e691750b0e7fd73e293c7cf2a9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class variable_base&lt; constant&lt; _T, _ID &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>variable_base&lt; constant&lt; _T, _ID &gt; &gt;</name>
        <qualifiedname>constant::variable_base&lt; constant&lt; _T, _ID &gt; &gt;</qualifiedname>
        <param>
          <type><ref refid="classvariable__base" kindref="compound">variable_base</ref>&lt; <ref refid="classconstant" kindref="compound">constant</ref>&lt; _T, _ID &gt; &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" line="50" column="13" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classconstant_1abfb05915affcce151b7b7fcc08257593" prot="private" static="yes" mutable="no">
        <type>std::string</type>
        <definition>std::string constant&lt; _T, _ID &gt;::_name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <qualifiedname>constant::_name</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" line="42" column="24" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classconstant_1ab63ac79e76ae03ad9533133bad0f1fd9" prot="private" static="yes" mutable="no">
        <type>data_type</type>
        <definition>_T constant&lt; _T, _ID &gt;::_data</definition>
        <argsstring></argsstring>
        <name>_data</name>
        <qualifiedname>constant::_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" line="43" column="22" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classconstant_1a851fcad664b78b66b673ac710d73de33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>constant&lt; _T, _ID &gt;::constant</definition>
        <argsstring>()</argsstring>
        <name>constant</name>
        <qualifiedname>constant::constant</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" line="11" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_meat.h" bodystart="5" bodyend="5"/>
      </memberdef>
      <memberdef kind="function" id="classconstant_1a395dd107c7b9fc82195acc56104679b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>constant&lt; _T, _ID &gt;::constant</definition>
        <argsstring>(data_type const &amp;__data)</argsstring>
        <name>constant</name>
        <qualifiedname>constant::constant</qualifiedname>
        <param>
          <type>data_type const &amp;</type>
          <declname>__data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" line="13" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_meat.h" bodystart="8" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="classconstant_1a19011290359cddcb0ec1e1c93db75c65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>constant&lt; _T, _ID &gt;::constant</definition>
        <argsstring>(std::string const &amp;__name)</argsstring>
        <name>constant</name>
        <qualifiedname>constant::constant</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>__name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" line="15" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_meat.h" bodystart="13" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classconstant_1a2d2c5701de3778f0fc46b9d52a4be0ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>constant&lt; _T, _ID &gt;::constant</definition>
        <argsstring>(data_type const &amp;__data, std::string const &amp;__name)</argsstring>
        <name>constant</name>
        <qualifiedname>constant::constant</qualifiedname>
        <param>
          <type>data_type const &amp;</type>
          <declname>__data</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>__name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" line="17" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_meat.h" bodystart="18" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classconstant_1ab3e550e8412ba4a333509dd123ac5732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>constant&lt; _T, _ID &gt;::~constant</definition>
        <argsstring>()</argsstring>
        <name>~constant</name>
        <qualifiedname>constant::~constant</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" line="19" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_meat.h" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classconstant_1a531e94b168fbd41d7583826cbc81dcf0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Type</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto constant&lt; _T, _ID &gt;::operator=</definition>
        <argsstring>(_Type const &amp;__data)</argsstring>
        <name>operator=</name>
        <qualifiedname>constant::operator=</qualifiedname>
        <param>
          <type>_Type const &amp;</type>
          <declname>__data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" line="22" column="27" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_meat.h" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classconstant_1a9ddf5fcdb751d80fd84f9cb69755a134" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Data</type>
          </param>
        </templateparamlist>
        <type>constexpr auto const &amp;</type>
        <definition>constexpr auto const  &amp; constant&lt; _T, _ID &gt;::operator()</definition>
        <argsstring>(Data const &amp;__data) const</argsstring>
        <name>operator()</name>
        <qualifiedname>constant::operator()</qualifiedname>
        <param>
          <type>Data const &amp;</type>
          <declname>__data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" line="26" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classconstant_1a2a78ea28bede30fa02c25aefcaebd265" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::ostream &amp;</type>
        <definition>constexpr std::ostream &amp; constant&lt; _T, _ID &gt;::print</definition>
        <argsstring>(std::ostream &amp;os) const</argsstring>
        <name>print</name>
        <qualifiedname>constant::print</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" line="28" column="35" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_meat.h" bodystart="39" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classconstant_1a9c3b68b88878f6083606b556587a9f0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Data</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto constant&lt; _T, _ID &gt;::value</definition>
        <argsstring>(_Data)=delete</argsstring>
        <name>value</name>
        <qualifiedname>constant::value</qualifiedname>
        <param>
          <type>_Data</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" line="31" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classconstant_1a4857a2fd4fda437394f3740d0241ed1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Data</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto constant&lt; _T, _ID &gt;::update</definition>
        <argsstring>(_Data)=delete</argsstring>
        <name>update</name>
        <qualifiedname>constant::update</qualifiedname>
        <param>
          <type>_Data</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" line="34" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classconstant_1a2c1f77a20b4763b554bba36b44956825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto constant&lt; _T, _ID &gt;::reset</definition>
        <argsstring>()=delete</argsstring>
        <name>reset</name>
        <qualifiedname>constant::reset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" line="36" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classconstant_1a9ddf5fcdb751d80fd84f9cb69755a134" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Data</type>
          </param>
        </templateparamlist>
        <type>constexpr auto const &amp;</type>
        <definition>constexpr auto const  &amp; constant&lt; _T, _ID &gt;::operator()</definition>
        <argsstring>(Data const &amp;__data) const</argsstring>
        <name>operator()</name>
        <qualifiedname>constant::operator()</qualifiedname>
        <param>
          <type>Data const &amp;</type>
          <declname>__data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_meat.h" line="34" column="38" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_meat.h" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classconstant_1ad5d1344e97648afa51233cb10ed8fd78" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Data</type>
          </param>
        </templateparamlist>
        <type>constexpr auto const &amp;</type>
        <definition>constexpr auto const  &amp; constant&lt; _T, _ID &gt;::get_value</definition>
        <argsstring>(_Data const &amp;x) const</argsstring>
        <name>get_value</name>
        <qualifiedname>constant::get_value</qualifiedname>
        <param>
          <type>_Data const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_meat.h" line="50" column="38" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_meat.h" bodystart="50" bodyend="52"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classconstant_1ad5d1344e97648afa51233cb10ed8fd78" prot="private" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Data</type>
          </param>
        </templateparamlist>
        <type>constexpr auto const &amp;</type>
        <definition>constexpr auto const  &amp; constant&lt; _T, _ID &gt;::get_value</definition>
        <argsstring>(_Data const &amp;x) const</argsstring>
        <name>get_value</name>
        <qualifiedname>constant::get_value</qualifiedname>
        <param>
          <type>_Data const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" line="40" column="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>constant&lt; _T, _ID &gt;</label>
        <link refid="classconstant"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>variable_base&lt; constant&lt; _T, _ID &gt; &gt;</label>
        <link refid="classvariable__base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>constant&lt; _T, _ID &gt;</label>
        <link refid="classconstant"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>variable_base&lt; constant&lt; _T, _ID &gt; &gt;</label>
        <link refid="classvariable__base"/>
      </node>
    </collaborationgraph>
    <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" line="5" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/constant_bones.h" bodystart="6" bodyend="44"/>
    <listofallmembers>
      <member refid="classconstant_1ab63ac79e76ae03ad9533133bad0f1fd9" prot="private" virt="non-virtual"><scope>constant</scope><name>_data</name></member>
      <member refid="classconstant_1abfb05915affcce151b7b7fcc08257593" prot="private" virt="non-virtual"><scope>constant</scope><name>_name</name></member>
      <member refid="classvariable__base_1a30d0635dfb734e22c329677f7beb9d4f" prot="protected" virt="non-virtual"><scope>constant</scope><name>_update</name></member>
      <member refid="classconstant_1a851fcad664b78b66b673ac710d73de33" prot="public" virt="non-virtual"><scope>constant</scope><name>constant</name></member>
      <member refid="classconstant_1a395dd107c7b9fc82195acc56104679b8" prot="public" virt="non-virtual"><scope>constant</scope><name>constant</name></member>
      <member refid="classconstant_1a19011290359cddcb0ec1e1c93db75c65" prot="public" virt="non-virtual"><scope>constant</scope><name>constant</name></member>
      <member refid="classconstant_1a2d2c5701de3778f0fc46b9d52a4be0ae" prot="public" virt="non-virtual"><scope>constant</scope><name>constant</name></member>
      <member refid="classvariable__base_1a08062ec90dcff407477c4281a2949c06" prot="public" virt="non-virtual"><scope>constant</scope><name>convert</name></member>
      <member refid="classconstant_1a7dbcaf1365dd8118831372b9d71bbb40" prot="public" virt="non-virtual"><scope>constant</scope><name>data_type</name></member>
      <member refid="classconstant_1ad5d1344e97648afa51233cb10ed8fd78" prot="private" virt="non-virtual"><scope>constant</scope><name>get_value</name></member>
      <member refid="classconstant_1ad5d1344e97648afa51233cb10ed8fd78" prot="public" virt="non-virtual"><scope>constant</scope><name>get_value</name></member>
      <member refid="classconstant_1a9ddf5fcdb751d80fd84f9cb69755a134" prot="public" virt="non-virtual"><scope>constant</scope><name>operator()</name></member>
      <member refid="classconstant_1a9ddf5fcdb751d80fd84f9cb69755a134" prot="public" virt="non-virtual"><scope>constant</scope><name>operator()</name></member>
      <member refid="classvariable__base_1af7bb3cfe845189131467ba47a6ff9896" prot="public" virt="non-virtual" ambiguityscope="variable_base&lt; constant&lt; _T, _ID &gt; &gt;::"><scope>constant</scope><name>operator()</name></member>
      <member refid="classvariable__base_1a1bce76f282394521dece5e217c3acbea" prot="public" virt="non-virtual"><scope>constant</scope><name>operator-</name></member>
      <member refid="classconstant_1a531e94b168fbd41d7583826cbc81dcf0" prot="public" virt="non-virtual"><scope>constant</scope><name>operator=</name></member>
      <member refid="classconstant_1a2a78ea28bede30fa02c25aefcaebd265" prot="public" virt="non-virtual"><scope>constant</scope><name>print</name></member>
      <member refid="classconstant_1a2c1f77a20b4763b554bba36b44956825" prot="public" virt="non-virtual"><scope>constant</scope><name>reset</name></member>
      <member refid="classconstant_1a4857a2fd4fda437394f3740d0241ed1f" prot="public" virt="non-virtual"><scope>constant</scope><name>update</name></member>
      <member refid="classvariable__base_1a76d5b56fe2476b728e4b6d873d4cd801" prot="public" virt="non-virtual" ambiguityscope="variable_base&lt; constant&lt; _T, _ID &gt; &gt;::"><scope>constant</scope><name>update</name></member>
      <member refid="classconstant_1a9c3b68b88878f6083606b556587a9f0d" prot="public" virt="non-virtual"><scope>constant</scope><name>value</name></member>
      <member refid="classvariable__base_1a03e782ff9786edabe13abfc2adef95e5" prot="public" virt="non-virtual" ambiguityscope="variable_base&lt; constant&lt; _T, _ID &gt; &gt;::"><scope>constant</scope><name>value</name></member>
      <member refid="classvariable__base_1a00c523e7c5d602121591ca8dc8d0accd" prot="public" virt="non-virtual"><scope>constant</scope><name>variable_base</name></member>
      <member refid="classconstant_1a82cc77e691750b0e7fd73e293c7cf2a9" prot="private" virt="non-virtual"><scope>constant</scope><name>variable_base&lt; constant&lt; _T, _ID &gt; &gt;</name></member>
      <member refid="classconstant_1ab3e550e8412ba4a333509dd123ac5732" prot="public" virt="non-virtual"><scope>constant</scope><name>~constant</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
