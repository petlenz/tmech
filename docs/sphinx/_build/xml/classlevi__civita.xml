<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classlevi__civita" kind="class" language="C++" prot="public">
    <compoundname>levi_civita</compoundname>
    <basecompoundref refid="classtensor__base" prot="public" virt="non-virtual">tensor_base&lt; levi_civita&lt; T, Dim &gt; &gt;</basecompoundref>
    <includes local="no">levi_civita_symbol_bones.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>Dim</declname>
        <defname>Dim</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Constructors</header>
      <memberdef kind="function" id="classlevi__civita_1a614b030c18684538d266caba416a68b7" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr levi_civita&lt; T, Dim &gt;::levi_civita</definition>
        <argsstring>()</argsstring>
        <name>levi_civita</name>
        <qualifiedname>levi_civita::levi_civita</qualifiedname>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/levi_civita_symbol_bones.h" line="36" column="15" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/levi_civita_symbol_meat.h" bodystart="27" bodyend="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Data</header>
      <memberdef kind="function" id="classlevi__civita_1a2a9a301babd15b21459d609b6bbe7d6a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>DIM</declname>
            <defname>DIM</defname>
            <defval>Dim</defval>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;(DIM == 2)&gt;::type</defval>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto levi_civita&lt; T, Dim &gt;::operator()</definition>
        <argsstring>(size_type const i, size_type const j) const</argsstring>
        <name>operator()</name>
        <qualifiedname>levi_civita::operator()</qualifiedname>
        <param>
          <type>size_type const</type>
          <declname>i</declname>
        </param>
        <param>
          <type>size_type const</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Returns the element at the specified position in the expression. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index specifying the position in the tensor expression. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>Index specifying the position in the tensor expression. Indices must be unsigned integers, the number of indices must be equal to the rank of the expression. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/levi_civita_symbol_bones.h" line="43" column="27" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/levi_civita_symbol_meat.h" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classlevi__civita_1a67d94ceaf8b13471984251d8068ff746" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>DIM</declname>
            <defname>DIM</defname>
            <defval>Dim</defval>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;(DIM == 3)&gt;::type</defval>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto levi_civita&lt; T, Dim &gt;::operator()</definition>
        <argsstring>(size_type const i, size_type const j, size_type const k) const</argsstring>
        <name>operator()</name>
        <qualifiedname>levi_civita::operator()</qualifiedname>
        <param>
          <type>size_type const</type>
          <declname>i</declname>
        </param>
        <param>
          <type>size_type const</type>
          <declname>j</declname>
        </param>
        <param>
          <type>size_type const</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Returns the element at the specified position in the expression. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index specifying the position in the tensor expression. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>Index specifying the position in the tensor expression. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>Index specifying the position in the tensor expression. Indices must be unsigned integers, the number of indices must be equal to the rank of the expression. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/levi_civita_symbol_bones.h" line="46" column="27" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/levi_civita_symbol_meat.h" bodystart="74" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classlevi__civita_1a3ece051d07ed4a4bf3569ae638584422" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>DIM</declname>
            <defname>DIM</defname>
            <defval>Dim</defval>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;(DIM == 4)&gt;::type</defval>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto levi_civita&lt; T, Dim &gt;::operator()</definition>
        <argsstring>(size_type const i, size_type const j, size_type const k, size_type const l) const</argsstring>
        <name>operator()</name>
        <qualifiedname>levi_civita::operator()</qualifiedname>
        <param>
          <type>size_type const</type>
          <declname>i</declname>
        </param>
        <param>
          <type>size_type const</type>
          <declname>j</declname>
        </param>
        <param>
          <type>size_type const</type>
          <declname>k</declname>
        </param>
        <param>
          <type>size_type const</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Returns the element at the specified position in the expression. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index specifying the position in the tensor expression. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>Index specifying the position in the tensor expression. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>Index specifying the position in the tensor expression. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Index specifying the position in the tensor expression. Indices must be unsigned integers, the number of indices must be equal to the rank of the expression. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/levi_civita_symbol_bones.h" line="49" column="27" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/levi_civita_symbol_meat.h" bodystart="90" bodyend="98"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Dimension and rank</header>
      <memberdef kind="function" id="classlevi__civita_1a04c5d220d26bf2519e2885e9f59b77b9" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto levi_civita&lt; T, Dim &gt;::rank</definition>
        <argsstring>()</argsstring>
        <name>rank</name>
        <qualifiedname>levi_civita::rank</qualifiedname>
        <briefdescription>
<para>Returns the rank. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/levi_civita_symbol_bones.h" line="38" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/levi_civita_symbol_meat.h" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classlevi__civita_1ae2683e2f8c873dabd74496f7f40cd334" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto levi_civita&lt; T, Dim &gt;::dimension</definition>
        <argsstring>()</argsstring>
        <name>dimension</name>
        <qualifiedname>levi_civita::dimension</qualifiedname>
        <briefdescription>
<para>Returns the dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/levi_civita_symbol_bones.h" line="40" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/levi_civita_symbol_meat.h" bodystart="45" bodyend="47"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classlevi__civita_1a33c74c8b446a0674344e7024ec03c319" prot="public" static="no">
        <type>T</type>
        <definition>using levi_civita&lt; T, Dim &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>levi_civita::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/levi_civita_symbol_bones.h" line="30" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/levi_civita_symbol_bones.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlevi__civita_1a0b0d118ff44657b6c6091ea76e30eee3" prot="public" static="no">
        <type>std::size_t</type>
        <definition>using levi_civita&lt; T, Dim &gt;::size_type =  std::size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>levi_civita::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/levi_civita_symbol_bones.h" line="31" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/levi_civita_symbol_bones.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Levi-Civita symbol. See <ulink url="https://en.wikipedia.org/wiki/Levi-Civita_symbol">https://en.wikipedia.org/wiki/Levi-Civita_symbol</ulink> for more details. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the holding elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Dim</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimension of the Levi-Civita symbol. Only supported Dim=2,3,4. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>levi_civita&lt; T, Dim &gt;</label>
        <link refid="classlevi__civita"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tensor_base&lt; levi_civita&lt; T, Dim &gt; &gt;</label>
        <link refid="classtensor__base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>levi_civita&lt; T, Dim &gt;</label>
        <link refid="classlevi__civita"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tensor_base&lt; levi_civita&lt; T, Dim &gt; &gt;</label>
        <link refid="classtensor__base"/>
      </node>
    </collaborationgraph>
    <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/levi_civita_symbol_bones.h" line="27" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/levi_civita_symbol_bones.h" bodystart="28" bodyend="50"/>
    <listofallmembers>
      <member refid="classtensor__base_1ad3589a7250ab005ef2c3276cca2e525b" prot="protected" virt="non-virtual"><scope>levi_civita</scope><name>_is_init</name></member>
      <member refid="classtensor__base_1ac3424b59bec904bf6eaec3d3969c44ee" prot="public" virt="non-virtual"><scope>levi_civita</scope><name>convert</name></member>
      <member refid="classtensor__base_1a385cf61f63ebb826ceb8b454111268a8" prot="public" virt="non-virtual"><scope>levi_civita</scope><name>convert</name></member>
      <member refid="classtensor__base_1ac3424b59bec904bf6eaec3d3969c44ee" prot="public" virt="non-virtual"><scope>levi_civita</scope><name>convert</name></member>
      <member refid="classtensor__base_1a385cf61f63ebb826ceb8b454111268a8" prot="public" virt="non-virtual"><scope>levi_civita</scope><name>convert</name></member>
      <member refid="classlevi__civita_1ae2683e2f8c873dabd74496f7f40cd334" prot="public" virt="non-virtual"><scope>levi_civita</scope><name>dimension</name></member>
      <member refid="classlevi__civita_1a614b030c18684538d266caba416a68b7" prot="public" virt="non-virtual"><scope>levi_civita</scope><name>levi_civita</name></member>
      <member refid="classlevi__civita_1a2a9a301babd15b21459d609b6bbe7d6a" prot="public" virt="non-virtual"><scope>levi_civita</scope><name>operator()</name></member>
      <member refid="classlevi__civita_1a67d94ceaf8b13471984251d8068ff746" prot="public" virt="non-virtual"><scope>levi_civita</scope><name>operator()</name></member>
      <member refid="classlevi__civita_1a3ece051d07ed4a4bf3569ae638584422" prot="public" virt="non-virtual"><scope>levi_civita</scope><name>operator()</name></member>
      <member refid="classtensor__base_1ad81a18a37838d7fb4f0cc8285db684ae" prot="public" virt="non-virtual"><scope>levi_civita</scope><name>operator-</name></member>
      <member refid="classtensor__base_1ad81a18a37838d7fb4f0cc8285db684ae" prot="public" virt="non-virtual"><scope>levi_civita</scope><name>operator-</name></member>
      <member refid="classlevi__civita_1a04c5d220d26bf2519e2885e9f59b77b9" prot="public" virt="non-virtual"><scope>levi_civita</scope><name>rank</name></member>
      <member refid="classtensor__base_1a869aa22037b95b0024b6e5731a61c90f" prot="public" virt="non-virtual"><scope>levi_civita</scope><name>size</name></member>
      <member refid="classtensor__base_1a869aa22037b95b0024b6e5731a61c90f" prot="public" virt="non-virtual"><scope>levi_civita</scope><name>size</name></member>
      <member refid="classlevi__civita_1a0b0d118ff44657b6c6091ea76e30eee3" prot="public" virt="non-virtual"><scope>levi_civita</scope><name>size_type</name></member>
      <member refid="classtensor__base_1aa5c232cd2dc1e0126a906b4c25cfdcf5" prot="public" virt="non-virtual"><scope>levi_civita</scope><name>tensor_base</name></member>
      <member refid="classtensor__base_1abf742a0335034d3c8d2574e9ea4d6f3d" prot="public" virt="non-virtual"><scope>levi_civita</scope><name>tensor_base</name></member>
      <member refid="classtensor__base_1aa5c232cd2dc1e0126a906b4c25cfdcf5" prot="public" virt="non-virtual"><scope>levi_civita</scope><name>tensor_base</name></member>
      <member refid="classtensor__base_1abf742a0335034d3c8d2574e9ea4d6f3d" prot="public" virt="non-virtual"><scope>levi_civita</scope><name>tensor_base</name></member>
      <member refid="classlevi__civita_1a33c74c8b446a0674344e7024ec03c319" prot="public" virt="non-virtual"><scope>levi_civita</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
