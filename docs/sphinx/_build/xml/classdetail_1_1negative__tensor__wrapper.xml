<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classdetail_1_1negative__tensor__wrapper" kind="class" language="C++" prot="public">
    <compoundname>detail::negative_tensor_wrapper</compoundname>
    <basecompoundref refid="classtensor__base" prot="public" virt="non-virtual">tensor_base&lt; negative_tensor_wrapper&lt; Tensor &gt; &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename Tensor</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Constructors</header>
      <memberdef kind="function" id="classdetail_1_1negative__tensor__wrapper_1af391bab4fdd8a8bee7f4875c425111e3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr detail::negative_tensor_wrapper&lt; Tensor &gt;::negative_tensor_wrapper</definition>
        <argsstring>(data_type_tensor const &amp;data)</argsstring>
        <name>negative_tensor_wrapper</name>
        <qualifiedname>detail::negative_tensor_wrapper::negative_tensor_wrapper</qualifiedname>
        <param>
          <type>data_type_tensor const &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_bones.h" line="28" column="15" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_meat.h" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1negative__tensor__wrapper_1ab58ffcce73421166d5e07d99e572258f" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr detail::negative_tensor_wrapper&lt; Tensor &gt;::negative_tensor_wrapper</definition>
        <argsstring>(negative_tensor_wrapper const &amp;data)</argsstring>
        <name>negative_tensor_wrapper</name>
        <qualifiedname>detail::negative_tensor_wrapper::negative_tensor_wrapper</qualifiedname>
        <param>
          <type><ref refid="classdetail_1_1negative__tensor__wrapper" kindref="compound">negative_tensor_wrapper</ref> const &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_bones.h" line="30" column="15" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_meat.h" bodystart="35" bodyend="37"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Data</header>
      <memberdef kind="function" id="classdetail_1_1negative__tensor__wrapper_1af4baddf4a39d6da65e9b3304425a27f3" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Indices</declname>
            <defname>Indices</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto detail::negative_tensor_wrapper&lt; Tensor &gt;::operator()</definition>
        <argsstring>(Indices ... indices) const</argsstring>
        <name>operator()</name>
        <qualifiedname>detail::negative_tensor_wrapper::operator()</qualifiedname>
        <param>
          <type>Indices ...</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
<para>Returns the element at the specified position in the expression. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indicies</parametername>
</parameternamelist>
<parameterdescription>
<para>a list of indices specifying the position in the tensor expression. Indices must be unsigned integers, the number of indices must be equal to the rank of the expression. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_bones.h" line="33" column="27" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_meat.h" bodystart="50" bodyend="52"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Evaluation of tensor expression</header>
      <memberdef kind="function" id="classdetail_1_1negative__tensor__wrapper_1a50818011fba9619df4cc619ed7aed696" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::negative_tensor_wrapper&lt; Tensor &gt;::evaluate</definition>
        <argsstring>()</argsstring>
        <name>evaluate</name>
        <qualifiedname>detail::negative_tensor_wrapper::evaluate</qualifiedname>
        <briefdescription>
<para>Evaluates the underlying left and right hand side tensor expression. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_bones.h" line="39" column="27" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_meat.h" bodystart="83" bodyend="91"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Dimension and rank</header>
      <memberdef kind="function" id="classdetail_1_1negative__tensor__wrapper_1aaa7ce1b9bb5ba0d67e7a77c30aeacb4b" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::negative_tensor_wrapper&lt; Tensor &gt;::dimension</definition>
        <argsstring>()</argsstring>
        <name>dimension</name>
        <qualifiedname>detail::negative_tensor_wrapper::dimension</qualifiedname>
        <briefdescription>
<para>Returns the dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_bones.h" line="35" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_meat.h" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1negative__tensor__wrapper_1aa2be762f2b63f2bd770b5cc5016d838a" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::negative_tensor_wrapper&lt; Tensor &gt;::rank</definition>
        <argsstring>()</argsstring>
        <name>rank</name>
        <qualifiedname>detail::negative_tensor_wrapper::rank</qualifiedname>
        <briefdescription>
<para>Returns the rank. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_bones.h" line="37" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_meat.h" bodystart="71" bodyend="73"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classdetail_1_1negative__tensor__wrapper_1a1e4910b028414c8303ace94bb1f1e6b8" prot="private" static="no">
        <type>typename std::remove_const&lt; typename std::remove_reference&lt; Tensor &gt;::type &gt;::type</type>
        <definition>using detail::negative_tensor_wrapper&lt; Tensor &gt;::data_type_tensor =  typename std::remove_const&lt;typename std::remove_reference&lt;Tensor&gt;::type&gt;::type</definition>
        <argsstring></argsstring>
        <name>data_type_tensor</name>
        <qualifiedname>detail::negative_tensor_wrapper::data_type_tensor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_bones.h" line="23" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_bones.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classdetail_1_1negative__tensor__wrapper_1a26465162403a17b2492eeb896e7cba19" prot="public" static="no">
        <type>typename data_type_tensor::value_type</type>
        <definition>using detail::negative_tensor_wrapper&lt; Tensor &gt;::value_type =  typename data_type_tensor::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>detail::negative_tensor_wrapper::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_bones.h" line="25" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_bones.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classdetail_1_1negative__tensor__wrapper_1ab0c5f3549ad6ac0da6c204af31429883" prot="public" static="no">
        <type>std::size_t</type>
        <definition>using detail::negative_tensor_wrapper&lt; Tensor &gt;::size_type =  std::size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>detail::negative_tensor_wrapper::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_bones.h" line="26" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_bones.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdetail_1_1negative__tensor__wrapper_1a7dc778dc2d422786ea168d331ecdee87" prot="private" static="no" mutable="no">
        <type>Tensor</type>
        <definition>Tensor detail::negative_tensor_wrapper&lt; Tensor &gt;::_data</definition>
        <argsstring></argsstring>
        <name>_data</name>
        <qualifiedname>detail::negative_tensor_wrapper::_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_bones.h" line="42" column="12" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_bones.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>detail::negative_tensor_wrapper&lt; Tensor &gt;</label>
        <link refid="classdetail_1_1negative__tensor__wrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tensor_base&lt; negative_tensor_wrapper&lt; Tensor &gt; &gt;</label>
        <link refid="classtensor__base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>detail::negative_tensor_wrapper&lt; Tensor &gt;</label>
        <link refid="classdetail_1_1negative__tensor__wrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tensor_base&lt; negative_tensor_wrapper&lt; Tensor &gt; &gt;</label>
        <link refid="classtensor__base"/>
      </node>
    </collaborationgraph>
    <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_bones.h" line="21" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/negative_tensor_wrapper_bones.h" bodystart="22" bodyend="43"/>
    <listofallmembers>
      <member refid="classdetail_1_1negative__tensor__wrapper_1a7dc778dc2d422786ea168d331ecdee87" prot="private" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>_data</name></member>
      <member refid="classtensor__base_1ad3589a7250ab005ef2c3276cca2e525b" prot="protected" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>_is_init</name></member>
      <member refid="classtensor__base_1ac3424b59bec904bf6eaec3d3969c44ee" prot="public" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>convert</name></member>
      <member refid="classtensor__base_1a385cf61f63ebb826ceb8b454111268a8" prot="public" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>convert</name></member>
      <member refid="classtensor__base_1ac3424b59bec904bf6eaec3d3969c44ee" prot="public" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>convert</name></member>
      <member refid="classtensor__base_1a385cf61f63ebb826ceb8b454111268a8" prot="public" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>convert</name></member>
      <member refid="classdetail_1_1negative__tensor__wrapper_1a1e4910b028414c8303ace94bb1f1e6b8" prot="private" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>data_type_tensor</name></member>
      <member refid="classdetail_1_1negative__tensor__wrapper_1aaa7ce1b9bb5ba0d67e7a77c30aeacb4b" prot="public" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>dimension</name></member>
      <member refid="classdetail_1_1negative__tensor__wrapper_1a50818011fba9619df4cc619ed7aed696" prot="public" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>evaluate</name></member>
      <member refid="classdetail_1_1negative__tensor__wrapper_1af391bab4fdd8a8bee7f4875c425111e3" prot="public" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>negative_tensor_wrapper</name></member>
      <member refid="classdetail_1_1negative__tensor__wrapper_1ab58ffcce73421166d5e07d99e572258f" prot="public" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>negative_tensor_wrapper</name></member>
      <member refid="classdetail_1_1negative__tensor__wrapper_1af4baddf4a39d6da65e9b3304425a27f3" prot="public" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>operator()</name></member>
      <member refid="classtensor__base_1ad81a18a37838d7fb4f0cc8285db684ae" prot="public" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>operator-</name></member>
      <member refid="classtensor__base_1ad81a18a37838d7fb4f0cc8285db684ae" prot="public" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>operator-</name></member>
      <member refid="classdetail_1_1negative__tensor__wrapper_1aa2be762f2b63f2bd770b5cc5016d838a" prot="public" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>rank</name></member>
      <member refid="classtensor__base_1a869aa22037b95b0024b6e5731a61c90f" prot="public" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>size</name></member>
      <member refid="classtensor__base_1a869aa22037b95b0024b6e5731a61c90f" prot="public" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>size</name></member>
      <member refid="classdetail_1_1negative__tensor__wrapper_1ab0c5f3549ad6ac0da6c204af31429883" prot="public" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>size_type</name></member>
      <member refid="classtensor__base_1aa5c232cd2dc1e0126a906b4c25cfdcf5" prot="public" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>tensor_base</name></member>
      <member refid="classtensor__base_1abf742a0335034d3c8d2574e9ea4d6f3d" prot="public" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>tensor_base</name></member>
      <member refid="classtensor__base_1aa5c232cd2dc1e0126a906b4c25cfdcf5" prot="public" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>tensor_base</name></member>
      <member refid="classtensor__base_1abf742a0335034d3c8d2574e9ea4d6f3d" prot="public" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>tensor_base</name></member>
      <member refid="classdetail_1_1negative__tensor__wrapper_1a26465162403a17b2492eeb896e7cba19" prot="public" virt="non-virtual"><scope>detail::negative_tensor_wrapper</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
