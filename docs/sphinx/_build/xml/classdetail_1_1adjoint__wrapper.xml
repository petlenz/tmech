<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classdetail_1_1adjoint__wrapper" kind="class" language="C++" prot="public">
    <compoundname>detail::adjoint_wrapper</compoundname>
    <basecompoundref refid="classtensor__base" prot="public" virt="non-virtual">tensor_base&lt; adjoint_wrapper&lt; _Tensor &gt; &gt;</basecompoundref>
    <includes local="no">adjoint_wrapper_bones.h</includes>
    <templateparamlist>
      <param>
        <type>typename _Tensor</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Constructors</header>
      <memberdef kind="function" id="classdetail_1_1adjoint__wrapper_1ad4227d990bc28de667e48f551408081f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::adjoint_wrapper&lt; _Tensor &gt;::adjoint_wrapper</definition>
        <argsstring>(data_type_tensor const &amp;data)</argsstring>
        <name>adjoint_wrapper</name>
        <qualifiedname>detail::adjoint_wrapper::adjoint_wrapper</qualifiedname>
        <param>
          <type>data_type_tensor const &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor expression, from which the adjoint is computed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" line="37" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_meat.h" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1adjoint__wrapper_1a968e0c965be079439b5313e9d6b15732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::adjoint_wrapper&lt; _Tensor &gt;::adjoint_wrapper</definition>
        <argsstring>(adjoint_wrapper const &amp;data)</argsstring>
        <name>adjoint_wrapper</name>
        <qualifiedname>detail::adjoint_wrapper::adjoint_wrapper</qualifiedname>
        <param>
          <type><ref refid="classdetail_1_1adjoint__wrapper" kindref="compound">adjoint_wrapper</ref> const &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A adjoint_wrapper. Note, that only the underlying tensor expression in copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" line="39" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_meat.h" bodystart="39" bodyend="42"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Data</header>
      <memberdef kind="function" id="classdetail_1_1adjoint__wrapper_1af9c91d86f729b97f912dfd9b525269e0" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::adjoint_wrapper&lt; _Tensor &gt;::operator()</definition>
        <argsstring>(size_type const i, size_type const j) const</argsstring>
        <name>operator()</name>
        <qualifiedname>detail::adjoint_wrapper::operator()</qualifiedname>
        <param>
          <type>size_type const</type>
          <declname>i</declname>
        </param>
        <param>
          <type>size_type const</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Returns a constant reference of the element at the specified position in the adjoint tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index specifying the position in the tensor expression. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>Index specifying the position in the tensor expression. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" line="41" column="27" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_meat.h" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1adjoint__wrapper_1a98270006eb1dbb350d556c0eadc6356a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::adjoint_wrapper&lt; _Tensor &gt;::raw_data</definition>
        <argsstring>() const</argsstring>
        <name>raw_data</name>
        <qualifiedname>detail::adjoint_wrapper::raw_data</qualifiedname>
        <briefdescription>
<para>Memory access to the data contained in the numerical_differentiation_backward_sym_wrapper. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Read pointer to the underlying memory. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" line="50" column="27" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_meat.h" bodystart="63" bodyend="65"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Evaluation of expression</header>
      <memberdef kind="function" id="classdetail_1_1adjoint__wrapper_1ac353a0795c3bea4ec2633dde48f6b498" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Result</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto detail::adjoint_wrapper&lt; _Tensor &gt;::evaluate</definition>
        <argsstring>(_Result &amp;result)</argsstring>
        <name>evaluate</name>
        <qualifiedname>detail::adjoint_wrapper::evaluate</qualifiedname>
        <param>
          <type>_Result &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Uses result as container for the computation. The finial result is saved in result. No internal memory is used. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>External tensor to save the result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" line="48" column="27" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_meat.h" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1adjoint__wrapper_1ac26a6d707dbfa9d87225cd0e029c049e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::adjoint_wrapper&lt; _Tensor &gt;::evaluate</definition>
        <argsstring>()</argsstring>
        <name>evaluate</name>
        <qualifiedname>detail::adjoint_wrapper::evaluate</qualifiedname>
        <briefdescription>
<para>Internal memory is used to compute the result. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" line="52" column="27" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_meat.h" bodystart="112" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1adjoint__wrapper_1a169a246f231fa2d37b641045acb7003b" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Result</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto detail::adjoint_wrapper&lt; _Tensor &gt;::evaluate_imp</definition>
        <argsstring>(_Result &amp;result)</argsstring>
        <name>evaluate_imp</name>
        <qualifiedname>detail::adjoint_wrapper::evaluate_imp</qualifiedname>
        <param>
          <type>_Result &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Implementation of the evaluation function. The final result is computed and saved in result. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>External or internal tensor to save the result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" line="56" column="27" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_meat.h" bodystart="124" bodyend="143"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Dimension and rank</header>
      <memberdef kind="function" id="classdetail_1_1adjoint__wrapper_1a8bb6081ea18578bf95b252fb161f3daa" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::adjoint_wrapper&lt; _Tensor &gt;::dimension</definition>
        <argsstring>()</argsstring>
        <name>dimension</name>
        <qualifiedname>detail::adjoint_wrapper::dimension</qualifiedname>
        <briefdescription>
<para>Returns the dimension. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>dimension </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" line="43" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_meat.h" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1adjoint__wrapper_1abb11af2ea28a3079a1fd84b1335592e3" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::adjoint_wrapper&lt; _Tensor &gt;::rank</definition>
        <argsstring>()</argsstring>
        <name>rank</name>
        <qualifiedname>detail::adjoint_wrapper::rank</qualifiedname>
        <briefdescription>
<para>Returns the rank. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>rank </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" line="45" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_meat.h" bodystart="86" bodyend="88"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Evaluation implementation</header>
      <memberdef kind="function" id="classdetail_1_1adjoint__wrapper_1aa2daa3247157efa2689ee208401c5a54" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::adjoint_wrapper&lt; _Tensor &gt;::evaluate_details</definition>
        <argsstring>(value_type *result, value_type const *data)</argsstring>
        <name>evaluate_details</name>
        <qualifiedname>detail::adjoint_wrapper::evaluate_details</qualifiedname>
        <param>
          <type>value_type *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>value_type const *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Computation of the adjoint of _data_basis. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the result memory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data memory. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" line="58" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_meat.h" bodystart="157" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1adjoint__wrapper_1a0e63b102807dd1789a5745e8cb5054f1" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::adjoint_wrapper&lt; _Tensor &gt;::adjoint_details_22</definition>
        <argsstring>(value_type *result, value_type const A11, value_type const A12, value_type const A21, value_type const A22)</argsstring>
        <name>adjoint_details_22</name>
        <qualifiedname>detail::adjoint_wrapper::adjoint_details_22</qualifiedname>
        <param>
          <type>value_type *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A11</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A12</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A21</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A22</declname>
        </param>
        <briefdescription>
<para>Adjoint computation of a second order tensor in 2D. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the result memory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A11</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor coefficient </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A12</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor coefficient </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A21</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor coefficient </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A22</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor coefficient </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" line="60" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_meat.h" bodystart="188" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1adjoint__wrapper_1a6851d90bafcee075078b711b27151111" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::adjoint_wrapper&lt; _Tensor &gt;::adjoint_details_33</definition>
        <argsstring>(value_type *result, value_type const A11, value_type const A12, value_type const A13, value_type const A21, value_type const A22, value_type const A23, value_type const A31, value_type const A32, value_type const A33)</argsstring>
        <name>adjoint_details_33</name>
        <qualifiedname>detail::adjoint_wrapper::adjoint_details_33</qualifiedname>
        <param>
          <type>value_type *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A11</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A12</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A13</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A21</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A22</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A23</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A31</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A32</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A33</declname>
        </param>
        <briefdescription>
<para>Adjoint computation of a second-order tensor in 3D. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the result memory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A11</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor coefficient </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A12</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor coefficient </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A13</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor coefficient </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A21</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor coefficient </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A22</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor coefficient </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A23</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor coefficient </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A31</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor coefficient </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A32</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor coefficient </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A33</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor coefficient </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" line="64" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_meat.h" bodystart="213" bodyend="228"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classdetail_1_1adjoint__wrapper_1ab6d63a00a32a19339a8494720bd4a597" prot="private" static="no">
        <type>typename std::remove_const&lt; typename std::remove_reference&lt; _Tensor &gt;::type &gt;::type</type>
        <definition>using detail::adjoint_wrapper&lt; _Tensor &gt;::data_type_tensor =  typename std::remove_const&lt;typename std::remove_reference&lt;_Tensor&gt;::type&gt;::type</definition>
        <argsstring></argsstring>
        <name>data_type_tensor</name>
        <qualifiedname>detail::adjoint_wrapper::data_type_tensor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" line="32" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classdetail_1_1adjoint__wrapper_1ae703ae9aa3856ddc5d9546a369ea586d" prot="public" static="no">
        <type>typename data_type_tensor::value_type</type>
        <definition>using detail::adjoint_wrapper&lt; _Tensor &gt;::value_type =  typename data_type_tensor::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>detail::adjoint_wrapper::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" line="34" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classdetail_1_1adjoint__wrapper_1a2fbbc1ff694bd578133091d58b285aab" prot="public" static="no">
        <type>std::size_t</type>
        <definition>using detail::adjoint_wrapper&lt; _Tensor &gt;::size_type =  std::size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>detail::adjoint_wrapper::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" line="35" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdetail_1_1adjoint__wrapper_1a22f4110d6a37261abb811e14ac68684a" prot="private" static="no" mutable="no">
        <type><ref refid="classtensor" kindref="compound">tensor</ref>&lt; value_type, <ref refid="classdetail_1_1adjoint__wrapper_1a8bb6081ea18578bf95b252fb161f3daa" kindref="member">dimension</ref>(), <ref refid="classdetail_1_1adjoint__wrapper_1abb11af2ea28a3079a1fd84b1335592e3" kindref="member">rank</ref>()&gt;</type>
        <definition>tensor&lt;value_type, dimension(), rank()&gt; detail::adjoint_wrapper&lt; _Tensor &gt;::_data</definition>
        <argsstring></argsstring>
        <name>_data</name>
        <qualifiedname>detail::adjoint_wrapper::_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" line="68" column="12" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdetail_1_1adjoint__wrapper_1a57ca6fdd57db906e36c316d5d54c685d" prot="private" static="no" mutable="no">
        <type>_Tensor</type>
        <definition>_Tensor detail::adjoint_wrapper&lt; _Tensor &gt;::_data_basis</definition>
        <argsstring></argsstring>
        <name>_data_basis</name>
        <qualifiedname>detail::adjoint_wrapper::_data_basis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" line="69" column="13" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for the computation of the adjoint of a second-order tensor. </para>
    </briefdescription>
    <detaileddescription>
<para><formula id="0">\[ \SecondT{A}^{-1} = \frac{1}{\text{det}(\SecondT{A})}\text{adj}(\SecondT{A}) \]</formula></para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of the tensor expression. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>detail::adjoint_wrapper&lt; _Tensor &gt;</label>
        <link refid="classdetail_1_1adjoint__wrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tensor_base&lt; adjoint_wrapper&lt; _Tensor &gt; &gt;</label>
        <link refid="classtensor__base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>detail::adjoint_wrapper&lt; _Tensor &gt;</label>
        <link refid="classdetail_1_1adjoint__wrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tensor_base&lt; adjoint_wrapper&lt; _Tensor &gt; &gt;</label>
        <link refid="classtensor__base"/>
      </node>
    </collaborationgraph>
    <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" line="30" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/adjoint_wrapper_bones.h" bodystart="31" bodyend="70"/>
    <listofallmembers>
      <member refid="classdetail_1_1adjoint__wrapper_1a22f4110d6a37261abb811e14ac68684a" prot="private" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>_data</name></member>
      <member refid="classdetail_1_1adjoint__wrapper_1a57ca6fdd57db906e36c316d5d54c685d" prot="private" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>_data_basis</name></member>
      <member refid="classtensor__base_1ad3589a7250ab005ef2c3276cca2e525b" prot="protected" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>_is_init</name></member>
      <member refid="classdetail_1_1adjoint__wrapper_1a0e63b102807dd1789a5745e8cb5054f1" prot="private" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>adjoint_details_22</name></member>
      <member refid="classdetail_1_1adjoint__wrapper_1a6851d90bafcee075078b711b27151111" prot="private" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>adjoint_details_33</name></member>
      <member refid="classdetail_1_1adjoint__wrapper_1ad4227d990bc28de667e48f551408081f" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>adjoint_wrapper</name></member>
      <member refid="classdetail_1_1adjoint__wrapper_1a968e0c965be079439b5313e9d6b15732" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>adjoint_wrapper</name></member>
      <member refid="classtensor__base_1ac3424b59bec904bf6eaec3d3969c44ee" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>convert</name></member>
      <member refid="classtensor__base_1a385cf61f63ebb826ceb8b454111268a8" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>convert</name></member>
      <member refid="classtensor__base_1ac3424b59bec904bf6eaec3d3969c44ee" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>convert</name></member>
      <member refid="classtensor__base_1a385cf61f63ebb826ceb8b454111268a8" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>convert</name></member>
      <member refid="classdetail_1_1adjoint__wrapper_1ab6d63a00a32a19339a8494720bd4a597" prot="private" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>data_type_tensor</name></member>
      <member refid="classdetail_1_1adjoint__wrapper_1a8bb6081ea18578bf95b252fb161f3daa" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>dimension</name></member>
      <member refid="classdetail_1_1adjoint__wrapper_1ac353a0795c3bea4ec2633dde48f6b498" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>evaluate</name></member>
      <member refid="classdetail_1_1adjoint__wrapper_1ac26a6d707dbfa9d87225cd0e029c049e" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>evaluate</name></member>
      <member refid="classdetail_1_1adjoint__wrapper_1aa2daa3247157efa2689ee208401c5a54" prot="private" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>evaluate_details</name></member>
      <member refid="classdetail_1_1adjoint__wrapper_1a169a246f231fa2d37b641045acb7003b" prot="private" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>evaluate_imp</name></member>
      <member refid="classdetail_1_1adjoint__wrapper_1af9c91d86f729b97f912dfd9b525269e0" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>operator()</name></member>
      <member refid="classtensor__base_1ad81a18a37838d7fb4f0cc8285db684ae" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>operator-</name></member>
      <member refid="classtensor__base_1ad81a18a37838d7fb4f0cc8285db684ae" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>operator-</name></member>
      <member refid="classdetail_1_1adjoint__wrapper_1abb11af2ea28a3079a1fd84b1335592e3" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>rank</name></member>
      <member refid="classdetail_1_1adjoint__wrapper_1a98270006eb1dbb350d556c0eadc6356a" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>raw_data</name></member>
      <member refid="classtensor__base_1a869aa22037b95b0024b6e5731a61c90f" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>size</name></member>
      <member refid="classtensor__base_1a869aa22037b95b0024b6e5731a61c90f" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>size</name></member>
      <member refid="classdetail_1_1adjoint__wrapper_1a2fbbc1ff694bd578133091d58b285aab" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>size_type</name></member>
      <member refid="classtensor__base_1aa5c232cd2dc1e0126a906b4c25cfdcf5" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>tensor_base</name></member>
      <member refid="classtensor__base_1abf742a0335034d3c8d2574e9ea4d6f3d" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>tensor_base</name></member>
      <member refid="classtensor__base_1aa5c232cd2dc1e0126a906b4c25cfdcf5" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>tensor_base</name></member>
      <member refid="classtensor__base_1abf742a0335034d3c8d2574e9ea4d6f3d" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>tensor_base</name></member>
      <member refid="classdetail_1_1adjoint__wrapper_1ae703ae9aa3856ddc5d9546a369ea586d" prot="public" virt="non-virtual"><scope>detail::adjoint_wrapper</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
