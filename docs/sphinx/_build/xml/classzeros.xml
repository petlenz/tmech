<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classzeros" kind="class" language="C++" prot="public">
    <compoundname>zeros</compoundname>
    <basecompoundref refid="classtensor__base" prot="public" virt="non-virtual">tensor_base&lt; zeros&lt; T, Dim, Rank &gt; &gt;</basecompoundref>
    <includes local="no">zero_tensor_bones.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>Dim</declname>
        <defname>Dim</defname>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>Rank</declname>
        <defname>Rank</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Constructors</header>
      <memberdef kind="function" id="classzeros_1ab592808641c3cdd2ff5ed468990f22c5" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr zeros&lt; T, Dim, Rank &gt;::zeros</definition>
        <argsstring>()</argsstring>
        <name>zeros</name>
        <qualifiedname>zeros::zeros</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/zero_tensor_bones.h" line="34" column="15" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/zero_tensor_meat.h" bodystart="27" bodyend="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Data</header>
      <memberdef kind="function" id="classzeros_1a9154a2d1b335701d1b64a2c46fb37112" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Indices</declname>
            <defname>Indices</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto zeros&lt; T, Dim, Rank &gt;::operator()</definition>
        <argsstring>(const Indices...) const</argsstring>
        <name>operator()</name>
        <qualifiedname>zeros::operator()</qualifiedname>
        <param>
          <type>const</type>
          <declname>Indices...</declname>
        </param>
        <briefdescription>
<para>Returns a zeros. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indicies</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of indices specifying the position in the tensor expression. Indices must be unsigned integers, the number of indices must be equal to the rank of the expression. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/zero_tensor_bones.h" line="37" column="27" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/zero_tensor_meat.h" bodystart="42" bodyend="44"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Dimension and rank</header>
      <memberdef kind="function" id="classzeros_1adfbaaf7879bed865009fb77b3542fac2" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto zeros&lt; T, Dim, Rank &gt;::rank</definition>
        <argsstring>()</argsstring>
        <name>rank</name>
        <qualifiedname>zeros::rank</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the rank. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/zero_tensor_bones.h" line="39" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/zero_tensor_meat.h" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classzeros_1aeaf1524d88ce6df817857ed02840c304" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto zeros&lt; T, Dim, Rank &gt;::dimension</definition>
        <argsstring>()</argsstring>
        <name>dimension</name>
        <qualifiedname>zeros::dimension</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the dimension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/zero_tensor_bones.h" line="41" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/zero_tensor_meat.h" bodystart="56" bodyend="58"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classzeros_1ac3b3f996991842a3263ceb8a82da2c34" prot="public" static="no">
        <type>T</type>
        <definition>using zeros&lt; T, Dim, Rank &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>zeros::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/zero_tensor_bones.h" line="31" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/zero_tensor_bones.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classzeros_1a9d263e4c84c6e75721098340426a59a2" prot="public" static="no">
        <type>std::size_t</type>
        <definition>using zeros&lt; T, Dim, Rank &gt;::size_type =  std::size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>zeros::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/zero_tensor_bones.h" line="32" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/zero_tensor_bones.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Wrapper for a tensor, which contains only zeros. No memory is initialised. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the tensor holding the elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Dim</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimension of the underlying physical problem. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Rank</parametername>
</parameternamelist>
<parameterdescription>
<para>Rank of the tensor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>tensor_base&lt; zeros&lt; T, Dim, Rank &gt; &gt;</label>
        <link refid="classtensor__base"/>
      </node>
      <node id="1">
        <label>zeros&lt; T, Dim, Rank &gt;</label>
        <link refid="classzeros"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>tensor_base&lt; zeros&lt; T, Dim, Rank &gt; &gt;</label>
        <link refid="classtensor__base"/>
      </node>
      <node id="1">
        <label>zeros&lt; T, Dim, Rank &gt;</label>
        <link refid="classzeros"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/zero_tensor_bones.h" line="28" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/zero_tensor_bones.h" bodystart="29" bodyend="42"/>
    <listofallmembers>
      <member refid="classtensor__base_1ad3589a7250ab005ef2c3276cca2e525b" prot="protected" virt="non-virtual"><scope>zeros</scope><name>_is_init</name></member>
      <member refid="classtensor__base_1ac3424b59bec904bf6eaec3d3969c44ee" prot="public" virt="non-virtual"><scope>zeros</scope><name>convert</name></member>
      <member refid="classtensor__base_1a385cf61f63ebb826ceb8b454111268a8" prot="public" virt="non-virtual"><scope>zeros</scope><name>convert</name></member>
      <member refid="classtensor__base_1ac3424b59bec904bf6eaec3d3969c44ee" prot="public" virt="non-virtual"><scope>zeros</scope><name>convert</name></member>
      <member refid="classtensor__base_1a385cf61f63ebb826ceb8b454111268a8" prot="public" virt="non-virtual"><scope>zeros</scope><name>convert</name></member>
      <member refid="classzeros_1aeaf1524d88ce6df817857ed02840c304" prot="public" virt="non-virtual"><scope>zeros</scope><name>dimension</name></member>
      <member refid="classzeros_1a9154a2d1b335701d1b64a2c46fb37112" prot="public" virt="non-virtual"><scope>zeros</scope><name>operator()</name></member>
      <member refid="classtensor__base_1ad81a18a37838d7fb4f0cc8285db684ae" prot="public" virt="non-virtual"><scope>zeros</scope><name>operator-</name></member>
      <member refid="classtensor__base_1ad81a18a37838d7fb4f0cc8285db684ae" prot="public" virt="non-virtual"><scope>zeros</scope><name>operator-</name></member>
      <member refid="classzeros_1adfbaaf7879bed865009fb77b3542fac2" prot="public" virt="non-virtual"><scope>zeros</scope><name>rank</name></member>
      <member refid="classtensor__base_1a869aa22037b95b0024b6e5731a61c90f" prot="public" virt="non-virtual"><scope>zeros</scope><name>size</name></member>
      <member refid="classtensor__base_1a869aa22037b95b0024b6e5731a61c90f" prot="public" virt="non-virtual"><scope>zeros</scope><name>size</name></member>
      <member refid="classzeros_1a9d263e4c84c6e75721098340426a59a2" prot="public" virt="non-virtual"><scope>zeros</scope><name>size_type</name></member>
      <member refid="classtensor__base_1aa5c232cd2dc1e0126a906b4c25cfdcf5" prot="public" virt="non-virtual"><scope>zeros</scope><name>tensor_base</name></member>
      <member refid="classtensor__base_1abf742a0335034d3c8d2574e9ea4d6f3d" prot="public" virt="non-virtual"><scope>zeros</scope><name>tensor_base</name></member>
      <member refid="classtensor__base_1aa5c232cd2dc1e0126a906b4c25cfdcf5" prot="public" virt="non-virtual"><scope>zeros</scope><name>tensor_base</name></member>
      <member refid="classtensor__base_1abf742a0335034d3c8d2574e9ea4d6f3d" prot="public" virt="non-virtual"><scope>zeros</scope><name>tensor_base</name></member>
      <member refid="classzeros_1ac3b3f996991842a3263ceb8a82da2c34" prot="public" virt="non-virtual"><scope>zeros</scope><name>value_type</name></member>
      <member refid="classzeros_1ab592808641c3cdd2ff5ed468990f22c5" prot="public" virt="non-virtual"><scope>zeros</scope><name>zeros</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
