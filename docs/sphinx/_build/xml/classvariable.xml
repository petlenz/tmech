<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classvariable" kind="class" language="C++" prot="public">
    <compoundname>variable</compoundname>
    <basecompoundref refid="classvariable__base" prot="public" virt="non-virtual">variable_base&lt; variable&lt; T, VarID &gt; &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>VarID</declname>
        <defname>VarID</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classvariable_1a922f86047de9a8547f050d48f2c71c70" prot="public" static="no">
        <type>T</type>
        <definition>using variable&lt; T, VarID &gt;::data_type =  T</definition>
        <argsstring></argsstring>
        <name>data_type</name>
        <qualifiedname>variable::data_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" line="23" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classvariable_1ac858b236941bdb2548e6e198e51f64b6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class variable_base&lt; variable&lt; T, VarID &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>variable_base&lt; variable&lt; T, VarID &gt; &gt;</name>
        <qualifiedname>variable::variable_base&lt; variable&lt; T, VarID &gt; &gt;</qualifiedname>
        <param>
          <type><ref refid="classvariable__base" kindref="compound">variable_base</ref>&lt; <ref refid="classvariable" kindref="compound">variable</ref>&lt; T, VarID &gt; &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" line="81" column="22" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classvariable_1a02af063a7ae3f682593fcb5d852b441f" prot="private" static="yes" mutable="no">
        <type>std::string</type>
        <definition>std::string variable&lt; T, VarID &gt;::_var_name</definition>
        <argsstring></argsstring>
        <name>_var_name</name>
        <qualifiedname>variable::_var_name</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" line="77" column="24" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvariable_1ab4eb29ff5d23a2f67b5fbdf2d519ceef" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr variable&lt; T, VarID &gt;::variable</definition>
        <argsstring>()</argsstring>
        <name>variable</name>
        <qualifiedname>variable::variable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" line="25" column="15" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classvariable_1a52c1b19e9435de3846806aca5b819e74" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr variable&lt; T, VarID &gt;::variable</definition>
        <argsstring>(std::string const &amp;var_name)</argsstring>
        <name>variable</name>
        <qualifiedname>variable::variable</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>var_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" line="27" column="15" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classvariable_1a30cdafcdd34d08b7bc74973ddefecea8" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr variable&lt; T, VarID &gt;::variable</definition>
        <argsstring>(std::string &amp;&amp;var_name)</argsstring>
        <name>variable</name>
        <qualifiedname>variable::variable</qualifiedname>
        <param>
          <type>std::string &amp;&amp;</type>
          <declname>var_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" line="31" column="15" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classvariable_1acaafc603df44bfea14e62f6a9cd8a92e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>variable&lt; T, VarID &gt;::~variable</definition>
        <argsstring>()</argsstring>
        <name>~variable</name>
        <qualifiedname>variable::~variable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" line="35" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classvariable_1a47031f9204b7e9d1eccb0465c769ad30" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Data</type>
          </param>
          <param>
            <type>typename std::enable_if_t&lt; std::tuple_size_v&lt; Data &gt; !=0 &gt; *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>constexpr auto const &amp;</type>
        <definition>constexpr auto const  &amp; variable&lt; T, VarID &gt;::operator()</definition>
        <argsstring>(Data const &amp;x) const</argsstring>
        <name>operator()</name>
        <qualifiedname>variable::operator()</qualifiedname>
        <param>
          <type>Data const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" line="38" column="33" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classvariable_1a102ed7f62e2d7ea28781a47e4deba902" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto variable&lt; T, VarID &gt;::get_string</definition>
        <argsstring>() const</argsstring>
        <name>get_string</name>
        <qualifiedname>variable::get_string</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" line="46" column="27" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" bodystart="46" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classvariable_1ad4ca3ea4bf29893d6df143e6dd554223" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::ostream &amp;</type>
        <definition>constexpr std::ostream &amp; variable&lt; T, VarID &gt;::print</definition>
        <argsstring>(std::ostream &amp;os) const</argsstring>
        <name>print</name>
        <qualifiedname>variable::print</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" line="54" column="35" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" bodystart="54" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classvariable_1a3a82cc95da388542172b2ffa1950fb0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Data</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto variable&lt; T, VarID &gt;::value</definition>
        <argsstring>(_Data)=delete</argsstring>
        <name>value</name>
        <qualifiedname>variable::value</qualifiedname>
        <param>
          <type>_Data</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" line="64" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvariable_1aa76eb62eaea0e3df5d4232043e0a8865" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Data</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto variable&lt; T, VarID &gt;::update</definition>
        <argsstring>(_Data)=delete</argsstring>
        <name>update</name>
        <qualifiedname>variable::update</qualifiedname>
        <param>
          <type>_Data</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" line="67" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvariable_1a882b131f31f27afca4bfbd4784c4ccd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto variable&lt; T, VarID &gt;::reset</definition>
        <argsstring>()=delete</argsstring>
        <name>reset</name>
        <qualifiedname>variable::reset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" line="69" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classvariable_1a79d8613d9a16401ae59d225633704e94" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>static constexpr auto variable&lt; T, VarID &gt;::get_ID</definition>
        <argsstring>()</argsstring>
        <name>get_ID</name>
        <qualifiedname>variable::get_ID</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" line="42" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" bodystart="42" bodyend="44"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classvariable_1a807516ce3ac24783b8bfe8529c56e81e" prot="private" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Data</type>
          </param>
          <param>
            <type>typename std::enable_if_t&lt; std::tuple_size_v&lt; _Data &gt; !=0 &gt; *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>constexpr auto const &amp;</type>
        <definition>constexpr auto const  &amp; variable&lt; T, VarID &gt;::get_value</definition>
        <argsstring>(_Data const &amp;__data) const</argsstring>
        <name>get_value</name>
        <qualifiedname>variable::get_value</qualifiedname>
        <param>
          <type>_Data const &amp;</type>
          <declname>__data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" line="73" column="33" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" bodystart="73" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>variable&lt; T, VarID &gt;</label>
        <link refid="classvariable"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>variable_base&lt; variable&lt; T, VarID &gt; &gt;</label>
        <link refid="classvariable__base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>variable&lt; T, VarID &gt;</label>
        <link refid="classvariable"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>variable_base&lt; variable&lt; T, VarID &gt; &gt;</label>
        <link refid="classvariable__base"/>
      </node>
    </collaborationgraph>
    <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" line="19" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/variable_bones.h" bodystart="20" bodyend="78"/>
    <listofallmembers>
      <member refid="classvariable__base_1a30d0635dfb734e22c329677f7beb9d4f" prot="protected" virt="non-virtual"><scope>variable</scope><name>_update</name></member>
      <member refid="classvariable_1a02af063a7ae3f682593fcb5d852b441f" prot="private" virt="non-virtual"><scope>variable</scope><name>_var_name</name></member>
      <member refid="classvariable__base_1a08062ec90dcff407477c4281a2949c06" prot="public" virt="non-virtual"><scope>variable</scope><name>convert</name></member>
      <member refid="classvariable_1a922f86047de9a8547f050d48f2c71c70" prot="public" virt="non-virtual"><scope>variable</scope><name>data_type</name></member>
      <member refid="classvariable_1a79d8613d9a16401ae59d225633704e94" prot="public" virt="non-virtual"><scope>variable</scope><name>get_ID</name></member>
      <member refid="classvariable_1a102ed7f62e2d7ea28781a47e4deba902" prot="public" virt="non-virtual"><scope>variable</scope><name>get_string</name></member>
      <member refid="classvariable_1a807516ce3ac24783b8bfe8529c56e81e" prot="private" virt="non-virtual"><scope>variable</scope><name>get_value</name></member>
      <member refid="classvariable_1a47031f9204b7e9d1eccb0465c769ad30" prot="public" virt="non-virtual"><scope>variable</scope><name>operator()</name></member>
      <member refid="classvariable__base_1af7bb3cfe845189131467ba47a6ff9896" prot="public" virt="non-virtual" ambiguityscope="variable_base&lt; variable&lt; T, VarID &gt; &gt;::"><scope>variable</scope><name>operator()</name></member>
      <member refid="classvariable__base_1a1bce76f282394521dece5e217c3acbea" prot="public" virt="non-virtual"><scope>variable</scope><name>operator-</name></member>
      <member refid="classvariable_1ad4ca3ea4bf29893d6df143e6dd554223" prot="public" virt="non-virtual"><scope>variable</scope><name>print</name></member>
      <member refid="classvariable_1a882b131f31f27afca4bfbd4784c4ccd8" prot="public" virt="non-virtual"><scope>variable</scope><name>reset</name></member>
      <member refid="classvariable_1aa76eb62eaea0e3df5d4232043e0a8865" prot="public" virt="non-virtual"><scope>variable</scope><name>update</name></member>
      <member refid="classvariable__base_1a76d5b56fe2476b728e4b6d873d4cd801" prot="public" virt="non-virtual" ambiguityscope="variable_base&lt; variable&lt; T, VarID &gt; &gt;::"><scope>variable</scope><name>update</name></member>
      <member refid="classvariable_1a3a82cc95da388542172b2ffa1950fb0f" prot="public" virt="non-virtual"><scope>variable</scope><name>value</name></member>
      <member refid="classvariable__base_1a03e782ff9786edabe13abfc2adef95e5" prot="public" virt="non-virtual" ambiguityscope="variable_base&lt; variable&lt; T, VarID &gt; &gt;::"><scope>variable</scope><name>value</name></member>
      <member refid="classvariable_1ab4eb29ff5d23a2f67b5fbdf2d519ceef" prot="public" virt="non-virtual"><scope>variable</scope><name>variable</name></member>
      <member refid="classvariable_1a52c1b19e9435de3846806aca5b819e74" prot="public" virt="non-virtual"><scope>variable</scope><name>variable</name></member>
      <member refid="classvariable_1a30cdafcdd34d08b7bc74973ddefecea8" prot="public" virt="non-virtual"><scope>variable</scope><name>variable</name></member>
      <member refid="classvariable__base_1a00c523e7c5d602121591ca8dc8d0accd" prot="public" virt="non-virtual"><scope>variable</scope><name>variable_base</name></member>
      <member refid="classvariable_1ac858b236941bdb2548e6e198e51f64b6" prot="private" virt="non-virtual"><scope>variable</scope><name>variable_base&lt; variable&lt; T, VarID &gt; &gt;</name></member>
      <member refid="classvariable_1acaafc603df44bfea14e62f6a9cd8a92e" prot="public" virt="non-virtual"><scope>variable</scope><name>~variable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
