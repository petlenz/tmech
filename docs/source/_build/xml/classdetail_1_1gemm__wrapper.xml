<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classdetail_1_1gemm__wrapper" kind="class" language="C++" prot="public">
    <compoundname>detail::gemm_wrapper</compoundname>
    <templateparamlist>
      <param>
        <type>typename LHS</type>
      </param>
      <param>
        <type>typename RHS</type>
      </param>
      <param>
        <type>typename RESULT</type>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>RowsLHS</declname>
        <defname>RowsLHS</defname>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>ColumnsLHS</declname>
        <defname>ColumnsLHS</defname>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>RowsRHS</declname>
        <defname>RowsRHS</defname>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>ColumnsRHS</declname>
        <defname>ColumnsRHS</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classdetail_1_1gemm__wrapper_1a0df0592cc9d536a2acfb90a73722f3d1" prot="public" static="no">
        <type>std::size_t</type>
        <definition>using detail::gemm_wrapper&lt; LHS, RHS, RESULT, RowsLHS, ColumnsLHS, RowsRHS, ColumnsRHS &gt;::size_type =  std::size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>detail::gemm_wrapper::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/gemm_wrapper_bones.h" line="24" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/gemm_wrapper_bones.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classdetail_1_1gemm__wrapper_1a5e5b5d7e799b8b32c85689d9d87c5678" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>static constexpr void detail::gemm_wrapper&lt; LHS, RHS, RESULT, RowsLHS, ColumnsLHS, RowsRHS, ColumnsRHS &gt;::evaluate</definition>
        <argsstring>(LHS const *__lhs, RHS const *__rhs, RESULT const *__result)</argsstring>
        <name>evaluate</name>
        <qualifiedname>detail::gemm_wrapper::evaluate</qualifiedname>
        <param>
          <type>LHS const *</type>
          <declname>__lhs</declname>
        </param>
        <param>
          <type>RHS const *</type>
          <declname>__rhs</declname>
        </param>
        <param>
          <type>RESULT const *</type>
          <declname>__result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/gemm_wrapper_bones.h" line="26" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/gemm_wrapper_bones.h" bodystart="26" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1gemm__wrapper_1abc9066d3b741e188b7bbf89ebb4468e2" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>static constexpr auto detail::gemm_wrapper&lt; LHS, RHS, RESULT, RowsLHS, ColumnsLHS, RowsRHS, ColumnsRHS &gt;::gemm</definition>
        <argsstring>(LHS const *const __lhs, RHS const *const __rhs, RESULT const *const __result)</argsstring>
        <name>gemm</name>
        <qualifiedname>detail::gemm_wrapper::gemm</qualifiedname>
        <param>
          <type>LHS const *const</type>
          <declname>__lhs</declname>
        </param>
        <param>
          <type>RHS const *const</type>
          <declname>__rhs</declname>
        </param>
        <param>
          <type>RESULT const *const</type>
          <declname>__result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/gemm_wrapper_bones.h" line="105" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/gemm_wrapper_bones.h" bodystart="105" bodyend="115"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/gemm_wrapper_bones.h" line="21" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/gemm_wrapper_bones.h" bodystart="22" bodyend="1438"/>
    <listofallmembers>
      <member refid="classdetail_1_1gemm__wrapper_1a5e5b5d7e799b8b32c85689d9d87c5678" prot="public" virt="non-virtual"><scope>detail::gemm_wrapper</scope><name>evaluate</name></member>
      <member refid="classdetail_1_1gemm__wrapper_1abc9066d3b741e188b7bbf89ebb4468e2" prot="public" virt="non-virtual"><scope>detail::gemm_wrapper</scope><name>gemm</name></member>
      <member refid="classdetail_1_1gemm__wrapper_1a0df0592cc9d536a2acfb90a73722f3d1" prot="public" virt="non-virtual"><scope>detail::gemm_wrapper</scope><name>size_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
