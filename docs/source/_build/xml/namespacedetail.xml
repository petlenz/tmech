<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="namespacedetail" kind="namespace" language="C++">
    <compoundname>detail</compoundname>
    <innerclass refid="classdetail_1_1abs__tensor__wrapper" prot="public">detail::abs_tensor_wrapper</innerclass>
    <innerclass refid="structdetail_1_1abs__wrapper" prot="public">detail::abs_wrapper</innerclass>
    <innerclass refid="structdetail_1_1acos__wrapper" prot="public">detail::acos_wrapper</innerclass>
    <innerclass refid="structdetail_1_1add__real__constant" prot="public">detail::add_real_constant</innerclass>
    <innerclass refid="structdetail_1_1add__real__constant_3_01real_3_01__T_00_01__L__LHS_00_01__R__LHS_00_01__E_01_4_0b303c5521d8be36cf5939c80dbcadf5a" prot="public">detail::add_real_constant&lt; real&lt; _T, _L_LHS, _R_LHS, _E &gt;, real&lt; _T, _L_RHS, _R_RHS, _E &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1add__value__sequence" prot="public">detail::add_value_sequence</innerclass>
    <innerclass refid="structdetail_1_1add__value__sequence_3_01sequence_3_01Args_8_8_8_01_4_00_01Value_01_4" prot="public">detail::add_value_sequence&lt; sequence&lt; Args... &gt;, Value &gt;</innerclass>
    <innerclass refid="structdetail_1_1add__value__sequence__h" prot="public">detail::add_value_sequence_h</innerclass>
    <innerclass refid="structdetail_1_1add__value__sequence__h_3_01sequence_3_01ArgsResult_8_8_8_01_4_00_01sequence_3_0066720045c9d3e0e07659529368fb2ec" prot="public">detail::add_value_sequence_h&lt; sequence&lt; ArgsResult... &gt;, sequence&lt; FirstInput, ArgsInput... &gt;, Value &gt;</innerclass>
    <innerclass refid="structdetail_1_1adj__wrapper" prot="public">detail::adj_wrapper</innerclass>
    <innerclass refid="classdetail_1_1adjoint__wrapper" prot="public">detail::adjoint_wrapper</innerclass>
    <innerclass refid="structdetail_1_1append__sequence__end" prot="public">detail::append_sequence_end</innerclass>
    <innerclass refid="structdetail_1_1append__sequence__end__h" prot="public">detail::append_sequence_end_h</innerclass>
    <innerclass refid="structdetail_1_1append__sequence__end__h_3_01sequence_3_01Numbers_8_8_8_01_4_00_01sequence_3_01First_00_01Args_8_8_8_01_4_01_4" prot="public">detail::append_sequence_end_h&lt; sequence&lt; Numbers... &gt;, sequence&lt; First, Args... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1append__sequence__end__h_3_01sequence_3_01Numbers_8_8_8_01_4_00_01sequence_3_4_01_4" prot="public">detail::append_sequence_end_h&lt; sequence&lt; Numbers... &gt;, sequence&lt;&gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1append__sequence__end__h_3_01sequence_3_4_00_01sequence_3_01First_00_01Args_8_8_8_01_4_01_4" prot="public">detail::append_sequence_end_h&lt; sequence&lt;&gt;, sequence&lt; First, Args... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1asin__wrapper" prot="public">detail::asin_wrapper</innerclass>
    <innerclass refid="classdetail_1_1basis__change__wrapper" prot="public">detail::basis_change_wrapper</innerclass>
    <innerclass refid="structdetail_1_1basis__pair" prot="public">detail::basis_pair</innerclass>
    <innerclass refid="structdetail_1_1basis__pair__loop" prot="public">detail::basis_pair_loop</innerclass>
    <innerclass refid="structdetail_1_1basis__pair__loop__h" prot="public">detail::basis_pair_loop_h</innerclass>
    <innerclass refid="structdetail_1_1basis__pair__loop__h_3_01Result_00_01Dim_00_01End_00_01End_01_4" prot="public">detail::basis_pair_loop_h&lt; Result, Dim, End, End &gt;</innerclass>
    <innerclass refid="structdetail_1_1basis__pair__loop__h_3_01void_00_01Dim_00_01End_00_01Start_01_4" prot="public">detail::basis_pair_loop_h&lt; void, Dim, End, Start &gt;</innerclass>
    <innerclass refid="classdetail_1_1binary__expression__wrapper" prot="public">detail::binary_expression_wrapper</innerclass>
    <innerclass refid="structdetail_1_1bubble__sort__sequence__swap__h" prot="public">detail::bubble_sort_sequence_swap_h</innerclass>
    <innerclass refid="structdetail_1_1bubble__sort__sequence__swap__h_3_01__First_00_01__Second_00_01false_01_4" prot="public">detail::bubble_sort_sequence_swap_h&lt; _First, _Second, false &gt;</innerclass>
    <innerclass refid="structdetail_1_1change__value__at__position" prot="public">detail::change_value_at_position</innerclass>
    <innerclass refid="structdetail_1_1change__value__at__position__h" prot="public">detail::change_value_at_position_h</innerclass>
    <innerclass refid="structdetail_1_1change__value__at__position__h_3_01sequence_3_01Result_8_8_8_01_4_00_01sequence_06530e380916ee95c7995f9d85128daf" prot="public">detail::change_value_at_position_h&lt; sequence&lt; Result... &gt;, sequence&lt; First, Args... &gt;, IDX, Positions, Value &gt;</innerclass>
    <innerclass refid="structdetail_1_1change__value__at__position__h_3_01sequence_3_01Result_8_8_8_01_4_00_01sequence_fabd6cf233db036c355dfd369207251b" prot="public">detail::change_value_at_position_h&lt; sequence&lt; Result... &gt;, sequence&lt; First, Args... &gt;, Positions, Positions, Value &gt;</innerclass>
    <innerclass refid="structdetail_1_1change__values__at__positions" prot="public">detail::change_values_at_positions</innerclass>
    <innerclass refid="structdetail_1_1change__values__at__positions_3_01Input_00_01sequence_3_01FirstPos_00_01Position6064f1333584cacc2eb88a104b451125" prot="public">detail::change_values_at_positions&lt; Input, sequence&lt; FirstPos, Position... &gt;, sequence&lt; FirstValue, Value... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1check__duplicated__in__sequence" prot="public">detail::check_duplicated_in_sequence</innerclass>
    <innerclass refid="structdetail_1_1check__duplicated__in__sequence_3_01sequence_3_01First_00_01ArgsInput_8_8_8_01_4_01_4" prot="public">detail::check_duplicated_in_sequence&lt; sequence&lt; First, ArgsInput... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1check__duplicated__in__sequence__h" prot="public">detail::check_duplicated_in_sequence_h</innerclass>
    <innerclass refid="structdetail_1_1check__duplicated__in__sequence__h_3_01false_00_01sequence_3_01First_00_01ArgsIn6eec65dafa325949056ae9ff75eff1f5" prot="public">detail::check_duplicated_in_sequence_h&lt; false, sequence&lt; First, ArgsInput... &gt;, Sequence &gt;</innerclass>
    <innerclass refid="structdetail_1_1check__duplicated__value__in__sequence" prot="public">detail::check_duplicated_value_in_sequence</innerclass>
    <innerclass refid="structdetail_1_1cof__wrapper" prot="public">detail::cof_wrapper</innerclass>
    <innerclass refid="classdetail_1_1cofactor__wrapper" prot="public">detail::cofactor_wrapper</innerclass>
    <innerclass refid="structdetail_1_1compare__almost__equal" prot="public">detail::compare_almost_equal</innerclass>
    <innerclass refid="structdetail_1_1compare__lambda" prot="public">detail::compare_lambda</innerclass>
    <innerclass refid="structdetail_1_1convert__tensor__to__voigt__wrapper" prot="public">detail::convert_tensor_to_voigt_wrapper</innerclass>
    <innerclass refid="structdetail_1_1cos__wrapper" prot="public">detail::cos_wrapper</innerclass>
    <innerclass refid="structdetail_1_1counter__index__sequence" prot="public">detail::counter_index_sequence</innerclass>
    <innerclass refid="structdetail_1_1counter__index__sequence__h" prot="public">detail::counter_index_sequence_h</innerclass>
    <innerclass refid="structdetail_1_1counter__index__sequence__h_3_01Counter_00_01sequence_3_01First_00_01Args_8_8_8_01_4_00_01ValueToCheck_01_4" prot="public">detail::counter_index_sequence_h&lt; Counter, sequence&lt; First, Args... &gt;, ValueToCheck &gt;</innerclass>
    <innerclass refid="structdetail_1_1counter__index__sequence__h_3_01Counter_00_01sequence_3_01ValueToCheck_00_01Args035fefc13ce96cccc896f17fe1bc64cc" prot="public">detail::counter_index_sequence_h&lt; Counter, sequence&lt; ValueToCheck, Args... &gt;, ValueToCheck &gt;</innerclass>
    <innerclass refid="classdetail_1_1cross__product__wrapper" prot="public">detail::cross_product_wrapper</innerclass>
    <innerclass refid="classdetail_1_1derivative__wrapper" prot="public">detail::derivative_wrapper</innerclass>
    <innerclass refid="structdetail_1_1det__wrapper" prot="public">detail::det_wrapper</innerclass>
    <innerclass refid="classdetail_1_1deviatoric__wrapper" prot="public">detail::deviatoric_wrapper</innerclass>
    <innerclass refid="classdetail_1_1diff__pow" prot="public">detail::diff_pow</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper" prot="public">detail::diff_wrapper</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01OP_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, OP &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01op__mul_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01constant_3_01__T_00_01__ID_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, constant&lt; _T, _ID &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01diff__pow_3_01__Expr_00_01__Constant_00_01true_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, diff_pow&lt; _Expr, _Constant, true &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01diff__pow_3_01__Expr_00_01real_3_01__T_00_01__L794c9fc54d9ec3701b471ab4e63b09c2" prot="public">detail::diff_wrapper&lt; _Variable, diff_pow&lt; _Expr, real&lt; _T, _L, _R, _E &gt;, true &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01abs__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Expr, abs_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01cos__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Expr, cos_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01det__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Expr, det_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01exp__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Expr, exp_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01log__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Expr, log_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01sec__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Expr, sec_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01sin__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Expr, sin_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01sqrt__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Expr, sqrt_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01tan__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Expr, tan_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Expr_00_01trace__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Expr, trace_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Variable_00_01det__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Variable, det_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01function__wrapper_3_01__Variable_00_01trace__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, function_wrapper&lt; _Variable, trace_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01inv__tensor_3_01__Expr_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, inv_tensor&lt; _Expr &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01negative_3_01__Expr_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, negative&lt; _Expr &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01scalar__one_3_01__T_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, scalar_one&lt; _T &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01scalar__zero_3_01__T_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, scalar_zero&lt; _T &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01tensor__basis__change__wrapper_3_01__Expr_00_01__Sequence_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, tensor_basis_change_wrapper&lt; _Expr, _Sequence &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01tensor__function__wrapper_3_01__Variable_00_01adj__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, tensor_function_wrapper&lt; _Variable, adj_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01tensor__function__wrapper_3_01__Variable_00_01cof__wrapper_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, tensor_function_wrapper&lt; _Variable, cof_wrapper &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01tensor__inner__product__wrapper_3_01__LHS_00_011051eb27b66824b6886aa25fc1e90ec8" prot="public">detail::diff_wrapper&lt; _Variable, tensor_inner_product_wrapper&lt; _LHS, _RHS, _SeqLHS, _SeqRHS &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01tensor__one_3_01__T_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, tensor_one&lt; _T &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01tensor__outer__product__wrapper_3_01__LHS_00_0102425af87084a45a33915e727c34b601" prot="public">detail::diff_wrapper&lt; _Variable, tensor_outer_product_wrapper&lt; _LHS, _RHS, _SeqLHS, _SeqRHS &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01__Variable_00_01tensor__zero_3_01__T_01_4_01_4" prot="public">detail::diff_wrapper&lt; _Variable, tensor_zero&lt; _T &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01Variable_00_01binary__expression__wrapper_3_01LHS_00_01RHS_00_01op__div_01_4_01_4" prot="public">detail::diff_wrapper&lt; Variable, binary_expression_wrapper&lt; LHS, RHS, op_div &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01Variable_00_01diff__pow_3_01G_00_01H_00_01false_01_4_01_4" prot="public">detail::diff_wrapper&lt; Variable, diff_pow&lt; G, H, false &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01Variable_00_01inv__tensor_3_01Variable_01_4_01_4" prot="public">detail::diff_wrapper&lt; Variable, inv_tensor&lt; Variable &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01Variable_00_01real_3_01__T_00_01__L_00_01__R_00_01__Exp_01_4_01_4" prot="public">detail::diff_wrapper&lt; Variable, real&lt; _T, _L, _R, _Exp &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01Variable_00_01Variable_01_4" prot="public">detail::diff_wrapper&lt; Variable, Variable &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01variable_3_01__T_00_01__ID_01_4_00_01variable_3_01__T_00_01__ID_01_4_01_4" prot="public">detail::diff_wrapper&lt; variable&lt; _T, _ID &gt;, variable&lt; _T, _ID &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper_3_01variable_3_01T__LHS_00_01ID__LHS_01_4_00_01variable_3_01T__RHS_00_01ID__RHS_01_4_01_4" prot="public">detail::diff_wrapper&lt; variable&lt; T_LHS, ID_LHS &gt;, variable&lt; T_RHS, ID_RHS &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper__n" prot="public">detail::diff_wrapper_n</innerclass>
    <innerclass refid="classdetail_1_1diff__wrapper__n_3_011_00_01Variable_00_01T_01_4" prot="public">detail::diff_wrapper_n&lt; 1, Variable, T &gt;</innerclass>
    <innerclass refid="classdetail_1_1dot__wrapper" prot="public">detail::dot_wrapper</innerclass>
    <innerclass refid="classdetail_1_1eigen__decomposition__basis__wrapper" prot="public">detail::eigen_decomposition_basis_wrapper</innerclass>
    <innerclass refid="classdetail_1_1eigen__decomposition__values__wrapper" prot="public">detail::eigen_decomposition_values_wrapper</innerclass>
    <innerclass refid="classdetail_1_1eigen__decomposition__vectors__wrapper" prot="public">detail::eigen_decomposition_vectors_wrapper</innerclass>
    <innerclass refid="classdetail_1_1eigen__decomposition__wrapper" prot="public">detail::eigen_decomposition_wrapper</innerclass>
    <innerclass refid="structdetail_1_1element__type" prot="public">detail::element_type</innerclass>
    <innerclass refid="structdetail_1_1element__type_3_01std_1_1complex_3_01__T_01_4_01_4" prot="public">detail::element_type&lt; std::complex&lt; _T &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1eval__tensor__wrapper" prot="public">detail::eval_tensor_wrapper</innerclass>
    <innerclass refid="structdetail_1_1exp" prot="public">detail::exp</innerclass>
    <innerclass refid="classdetail_1_1exp__derivative__tensor__wrapper" prot="public">detail::exp_derivative_tensor_wrapper</innerclass>
    <innerclass refid="classdetail_1_1exp__tensor__wrapper" prot="public">detail::exp_tensor_wrapper</innerclass>
    <innerclass refid="structdetail_1_1exp__wrapper" prot="public">detail::exp_wrapper</innerclass>
    <innerclass refid="structdetail_1_1find__in__sequence" prot="public">detail::find_in_sequence</innerclass>
    <innerclass refid="structdetail_1_1find__in__sequence_3_01sequence_3_01First_00_01Args_8_8_8_01_4_00_01ValueToCheck_01_4" prot="public">detail::find_in_sequence&lt; sequence&lt; First, Args... &gt;, ValueToCheck &gt;</innerclass>
    <innerclass refid="structdetail_1_1find__in__sequence_3_01sequence_3_01ValueToCheck_00_01Args_8_8_8_01_4_00_01ValueToCheck_01_4" prot="public">detail::find_in_sequence&lt; sequence&lt; ValueToCheck, Args... &gt;, ValueToCheck &gt;</innerclass>
    <innerclass refid="structdetail_1_1find__in__sequence__h" prot="public">detail::find_in_sequence_h</innerclass>
    <innerclass refid="structdetail_1_1find__in__sequence__h_3_01Result_00_01sequence_3_01First_00_01Args_8_8_8_01_4_00_01ValueToCheck_01_4" prot="public">detail::find_in_sequence_h&lt; Result, sequence&lt; First, Args... &gt;, ValueToCheck &gt;</innerclass>
    <innerclass refid="structdetail_1_1find__in__sequence__h_3_01Result_00_01sequence_3_01ValueToCheck_00_01Args_8_8_8_01_4_00_01ValueToCheck_01_4" prot="public">detail::find_in_sequence_h&lt; Result, sequence&lt; ValueToCheck, Args... &gt;, ValueToCheck &gt;</innerclass>
    <innerclass refid="classdetail_1_1function__wrapper" prot="public">detail::function_wrapper</innerclass>
    <innerclass refid="classdetail_1_1fundamental__one__derivative" prot="public">detail::fundamental_one_derivative</innerclass>
    <innerclass refid="classdetail_1_1fundamental__one__derivative__detail" prot="public">detail::fundamental_one_derivative_detail</innerclass>
    <innerclass refid="classdetail_1_1fundamental__one__derivative__detail_3_01__DataType_00_01false_01_4" prot="public">detail::fundamental_one_derivative_detail&lt; _DataType, false &gt;</innerclass>
    <innerclass refid="classdetail_1_1fundamental__one__derivative__detail_3_01__DataType_00_01true_01_4" prot="public">detail::fundamental_one_derivative_detail&lt; _DataType, true &gt;</innerclass>
    <innerclass refid="classdetail_1_1fundamental__tensor__one__derivative__detail" prot="public">detail::fundamental_tensor_one_derivative_detail</innerclass>
    <innerclass refid="classdetail_1_1fundamental__tensor__one__derivative__detail_3_01__DataType_00_011ul_01_4" prot="public">detail::fundamental_tensor_one_derivative_detail&lt; _DataType, 1ul &gt;</innerclass>
    <innerclass refid="classdetail_1_1fundamental__tensor__one__derivative__detail_3_01__DataType_00_012ul_01_4" prot="public">detail::fundamental_tensor_one_derivative_detail&lt; _DataType, 2ul &gt;</innerclass>
    <innerclass refid="classdetail_1_1fundamental__tensor__one__derivative__detail_3_01__DataType_00_014ul_01_4" prot="public">detail::fundamental_tensor_one_derivative_detail&lt; _DataType, 4ul &gt;</innerclass>
    <innerclass refid="classdetail_1_1gemm__wrapper" prot="public">detail::gemm_wrapper</innerclass>
    <innerclass refid="classdetail_1_1general__lu__solver" prot="public">detail::general_lu_solver</innerclass>
    <innerclass refid="classdetail_1_1general__newton__raphson__solver" prot="public">detail::general_newton_raphson_solver</innerclass>
    <innerclass refid="structdetail_1_1get__complex__entry__type" prot="public">detail::get_complex_entry_type</innerclass>
    <innerclass refid="structdetail_1_1get__complex__entry__type_3_01std_1_1complex_3_01T_01_4_01_4" prot="public">detail::get_complex_entry_type&lt; std::complex&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__fundamental__one" prot="public">detail::get_fundamental_one</innerclass>
    <innerclass refid="structdetail_1_1get__fundamental__one__detail" prot="public">detail::get_fundamental_one_detail</innerclass>
    <innerclass refid="structdetail_1_1get__fundamental__one__detail_3_01__Type_00_01false_01_4" prot="public">detail::get_fundamental_one_detail&lt; _Type, false &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__fundamental__one__detail_3_01__Type_00_01true_01_4" prot="public">detail::get_fundamental_one_detail&lt; _Type, true &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__fundamental__zero" prot="public">detail::get_fundamental_zero</innerclass>
    <innerclass refid="structdetail_1_1get__fundamental__zero__detail" prot="public">detail::get_fundamental_zero_detail</innerclass>
    <innerclass refid="structdetail_1_1get__fundamental__zero__detail_3_01__LHS_00_01false_00_01__RHS_00_01false_01_4" prot="public">detail::get_fundamental_zero_detail&lt; _LHS, false, _RHS, false &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__fundamental__zero__detail_3_01__LHS_00_01false_00_01__RHS_00_01true_01_4" prot="public">detail::get_fundamental_zero_detail&lt; _LHS, false, _RHS, true &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__fundamental__zero__detail_3_01__LHS_00_01true_00_01__RHS_00_01false_01_4" prot="public">detail::get_fundamental_zero_detail&lt; _LHS, true, _RHS, false &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__fundamental__zero__detail_3_01__LHS_00_01true_00_01__RHS_00_01true_01_4" prot="public">detail::get_fundamental_zero_detail&lt; _LHS, true, _RHS, true &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__identity__tensor" prot="public">detail::get_identity_tensor</innerclass>
    <innerclass refid="structdetail_1_1get__identity__tensor_3_01tmech_1_1tensor_3_01__T_00_01__Dim_00_01__Rank_01_4_01_4" prot="public">detail::get_identity_tensor&lt; tmech::tensor&lt; _T, _Dim, _Rank &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__one" prot="public">detail::get_one</innerclass>
    <innerclass refid="structdetail_1_1get__one__detail" prot="public">detail::get_one_detail</innerclass>
    <innerclass refid="structdetail_1_1get__one__detail_3_01__T_00_01true_01_4" prot="public">detail::get_one_detail&lt; _T, true &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__rank__result" prot="public">detail::get_rank_result</innerclass>
    <innerclass refid="structdetail_1_1get__rank__result_3_01Function_00_01Direction_00_01true_01_4" prot="public">detail::get_rank_result&lt; Function, Direction, true &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__sequence__detail" prot="public">detail::get_sequence_detail</innerclass>
    <innerclass refid="structdetail_1_1get__sequence__detail_3_01End_00_01End_01_4" prot="public">detail::get_sequence_detail&lt; End, End &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__sequence__iter__start__detail" prot="public">detail::get_sequence_iter_start_detail</innerclass>
    <innerclass refid="structdetail_1_1get__sequence__iter__start__detail_3_01Start_00_01Start_00_01End_01_4" prot="public">detail::get_sequence_iter_start_detail&lt; Start, Start, End &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__tensor" prot="public">detail::get_tensor</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__array__index" prot="public">detail::get_tensor_array_index</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__array__size" prot="public">detail::get_tensor_array_size</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__array__size_3_010_00_01Last_01_4" prot="public">detail::get_tensor_array_size&lt; 0, Last &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__array__type" prot="public">detail::get_tensor_array_type</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__array__type_3_01T_00_01Size_00_01false_01_4" prot="public">detail::get_tensor_array_type&lt; T, Size, false &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__array__type_3_01T_00_01Size_00_01true_01_4" prot="public">detail::get_tensor_array_type&lt; T, Size, true &gt;</innerclass>
    <innerclass refid="classdetail_1_1get__tensor__basis__change__differentiation" prot="public">detail::get_tensor_basis_change_differentiation</innerclass>
    <innerclass refid="classdetail_1_1get__tensor__basis__change__differentiation_3_01__Variable_00_01true_00_01__Expr_00_01__Sequence_01_4" prot="public">detail::get_tensor_basis_change_differentiation&lt; _Variable, true, _Expr, _Sequence &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__index" prot="public">detail::get_tensor_index</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__index_3_01Dim_00_01Index_00_01Index_01_4" prot="public">detail::get_tensor_index&lt; Dim, Index, Index &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__info" prot="public">detail::get_tensor_info</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__one" prot="public">detail::get_tensor_one</innerclass>
    <innerclass refid="classdetail_1_1get__tensor__outer__product__differentiation" prot="public">detail::get_tensor_outer_product_differentiation</innerclass>
    <innerclass refid="classdetail_1_1get__tensor__outer__product__differentiation_3_01__Variable_00_01true_00_01__LHS_657c9b612feb6071885be885489bfaa6" prot="public">detail::get_tensor_outer_product_differentiation&lt; _Variable, true, _LHS, _RHS, _SeqLHS, _SeqRHS &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__size" prot="public">detail::get_tensor_size</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__size_3_01DIM_00_01RANK_00_01RANK_01_4" prot="public">detail::get_tensor_size&lt; DIM, RANK, RANK &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__times__expression" prot="public">detail::get_tensor_times_expression</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__times__expression_3_01Variable_00_01LHS_00_01RHS_00_01true_00_01false_00_01true_01_4" prot="public">detail::get_tensor_times_expression&lt; Variable, LHS, RHS, true, false, true &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__times__expression_3_01Variable_00_01LHS_00_01RHS_00_01true_00_01true_00_01false_01_4" prot="public">detail::get_tensor_times_expression&lt; Variable, LHS, RHS, true, true, false &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__type" prot="public">detail::get_tensor_type</innerclass>
    <innerclass refid="structdetail_1_1get__value__type" prot="public">detail::get_value_type</innerclass>
    <innerclass refid="structdetail_1_1get__value__type__detail" prot="public">detail::get_value_type_detail</innerclass>
    <innerclass refid="structdetail_1_1get__value__type__detail_3_01__T_00_01false_01_4" prot="public">detail::get_value_type_detail&lt; _T, false &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__value__type__detail_3_01__T_00_01true_01_4" prot="public">detail::get_value_type_detail&lt; _T, true &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__zero" prot="public">detail::get_zero</innerclass>
    <innerclass refid="structdetail_1_1get__zero__detail" prot="public">detail::get_zero_detail</innerclass>
    <innerclass refid="structdetail_1_1get__zero__detail_3_01__T_00_01true_01_4" prot="public">detail::get_zero_detail&lt; _T, true &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__zero__tensor" prot="public">detail::get_zero_tensor</innerclass>
    <innerclass refid="structdetail_1_1get__zero__tensor_3_01tmech_1_1tensor_3_01__T_00_01__Dim_00_01__Rank_01_4_01_4" prot="public">detail::get_zero_tensor&lt; tmech::tensor&lt; _T, _Dim, _Rank &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1inner__product__wrapper" prot="public">detail::inner_product_wrapper</innerclass>
    <innerclass refid="classdetail_1_1inv__tensor" prot="public">detail::inv_tensor</innerclass>
    <innerclass refid="classdetail_1_1inverse__wrapper" prot="public">detail::inverse_wrapper</innerclass>
    <innerclass refid="structdetail_1_1is__complex__t" prot="public">detail::is_complex_t</innerclass>
    <innerclass refid="structdetail_1_1is__complex__t_3_01std_1_1complex_3_01T_01_4_01_4" prot="public">detail::is_complex_t&lt; std::complex&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1is__scalar" prot="public">detail::is_scalar</innerclass>
    <innerclass refid="structdetail_1_1is__tensor" prot="public">detail::is_tensor</innerclass>
    <innerclass refid="structdetail_1_1is__tensor_3_01tmech_1_1tensor_3_01__T_00_01__Dim_00_01__Rank_01_4_01_4" prot="public">detail::is_tensor&lt; tmech::tensor&lt; _T, _Dim, _Rank &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1isotropic__tensor__function" prot="public">detail::isotropic_tensor_function</innerclass>
    <innerclass refid="structdetail_1_1log" prot="public">detail::log</innerclass>
    <innerclass refid="structdetail_1_1log10__wrapper" prot="public">detail::log10_wrapper</innerclass>
    <innerclass refid="structdetail_1_1log2__wrapper" prot="public">detail::log2_wrapper</innerclass>
    <innerclass refid="structdetail_1_1log__wrapper" prot="public">detail::log_wrapper</innerclass>
    <innerclass refid="structdetail_1_1make__outer__sequence" prot="public">detail::make_outer_sequence</innerclass>
    <innerclass refid="structdetail_1_1make__outer__sequence_3_01false_00_01Size_00_01Index_00_01sequence_3_01ArgsInner2ea34c33ed31cf71d4a1608b01b4635c" prot="public">detail::make_outer_sequence&lt; false, Size, Index, sequence&lt; ArgsInner... &gt;, ArgsOuter... &gt;</innerclass>
    <innerclass refid="structdetail_1_1make__outer__sequence_3_01false_00_01Size_00_01Size_00_01sequence_3_01ArgsInner_bdcb049414d9adaec1b7e15542689498" prot="public">detail::make_outer_sequence&lt; false, Size, Size, sequence&lt; ArgsInner... &gt;, ArgsOuter... &gt;</innerclass>
    <innerclass refid="structdetail_1_1make__outer__sequence_3_01true_00_01Size_00_01Index_00_01sequence_3_01ArgsInner_d117f2fb4f95bd45eb02f04ea59d7775" prot="public">detail::make_outer_sequence&lt; true, Size, Index, sequence&lt; ArgsInner... &gt;, ArgsOuter... &gt;</innerclass>
    <innerclass refid="structdetail_1_1make__outer__sequence__find" prot="public">detail::make_outer_sequence_find</innerclass>
    <innerclass refid="structdetail_1_1make__outer__sequence__find_3_01Index_00_01First_00_01ArgsInner_8_8_8_01_4" prot="public">detail::make_outer_sequence_find&lt; Index, First, ArgsInner... &gt;</innerclass>
    <innerclass refid="structdetail_1_1make__outer__sequence__find_3_01Index_00_01Index_01_4" prot="public">detail::make_outer_sequence_find&lt; Index, Index &gt;</innerclass>
    <innerclass refid="structdetail_1_1make__outer__sequence__find_3_01Index_00_01Index_00_01ArgsInner_8_8_8_01_4" prot="public">detail::make_outer_sequence_find&lt; Index, Index, ArgsInner... &gt;</innerclass>
    <innerclass refid="structdetail_1_1make__outer__sequence__find_3_01Index_00_01Last_01_4" prot="public">detail::make_outer_sequence_find&lt; Index, Last &gt;</innerclass>
    <innerclass refid="structdetail_1_1make__outer__sequence__test" prot="public">detail::make_outer_sequence_test</innerclass>
    <innerclass refid="structdetail_1_1make__outer__sequence__test_3_01Size_00_01Index_00_01sequence_3_01ArgsInner_8_8_8_01_4_01_4" prot="public">detail::make_outer_sequence_test&lt; Size, Index, sequence&lt; ArgsInner... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1meta__inner__product" prot="public">detail::meta_inner_product</innerclass>
    <innerclass refid="structdetail_1_1min__value__squence" prot="public">detail::min_value_squence</innerclass>
    <innerclass refid="structdetail_1_1min__value__squence_3_01sequence_3_01Args_8_8_8_01_4_00_01Value_01_4" prot="public">detail::min_value_squence&lt; sequence&lt; Args... &gt;, Value &gt;</innerclass>
    <innerclass refid="structdetail_1_1min__value__squence__h" prot="public">detail::min_value_squence_h</innerclass>
    <innerclass refid="structdetail_1_1min__value__squence__h_3_01sequence_3_01ArgsResult_8_8_8_01_4_00_01sequence_3_01a668e9c32054fcf0022c007284d162e9" prot="public">detail::min_value_squence_h&lt; sequence&lt; ArgsResult... &gt;, sequence&lt; FirstInput, ArgsInput... &gt;, Value &gt;</innerclass>
    <innerclass refid="classdetail_1_1negative" prot="public">detail::negative</innerclass>
    <innerclass refid="structdetail_1_1negative__part" prot="public">detail::negative_part</innerclass>
    <innerclass refid="classdetail_1_1negative__tensor__wrapper" prot="public">detail::negative_tensor_wrapper</innerclass>
    <innerclass refid="structdetail_1_1num__diff__get__data__type__result" prot="public">detail::num_diff_get_data_type_result</innerclass>
    <innerclass refid="structdetail_1_1num__diff__get__data__type__result_3_01Function_00_01Direction_00_01true_01_4" prot="public">detail::num_diff_get_data_type_result&lt; Function, Direction, true &gt;</innerclass>
    <innerclass refid="structdetail_1_1num__diff__get__function" prot="public">detail::num_diff_get_function</innerclass>
    <innerclass refid="structdetail_1_1num__diff__get__function_3_01std_1_1reference__wrapper_3_01T_01_4_01_4" prot="public">detail::num_diff_get_function&lt; std::reference_wrapper&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1numdiff__central" prot="public">detail::numdiff_central</innerclass>
    <innerclass refid="classdetail_1_1numdiff__central__symmetric" prot="public">detail::numdiff_central_symmetric</innerclass>
    <innerclass refid="classdetail_1_1numdiff__central__symmetric_3_01std_1_1tuple_3_01SymDirection_8_8_8_01_4_00_01std84efcbf9cc48cb14a06adcdc68f5eda7" prot="public">detail::numdiff_central_symmetric&lt; std::tuple&lt; SymDirection... &gt;, std::tuple&lt; SymResult... &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1numerical__differentiation__central__sym__wrapper" prot="public">detail::numerical_differentiation_central_sym_wrapper</innerclass>
    <innerclass refid="classdetail_1_1numerical__differentiation__central__wrapper" prot="public">detail::numerical_differentiation_central_wrapper</innerclass>
    <innerclass refid="structdetail_1_1operator__add" prot="public">detail::operator_add</innerclass>
    <innerclass refid="structdetail_1_1operator__div" prot="public">detail::operator_div</innerclass>
    <innerclass refid="structdetail_1_1operator__mul" prot="public">detail::operator_mul</innerclass>
    <innerclass refid="structdetail_1_1operator__sub" prot="public">detail::operator_sub</innerclass>
    <innerclass refid="classdetail_1_1outer__product__wrapper" prot="public">detail::outer_product_wrapper</innerclass>
    <innerclass refid="classdetail_1_1polar__decomposition__dR__wrapper" prot="public">detail::polar_decomposition_dR_wrapper</innerclass>
    <innerclass refid="classdetail_1_1polar__decomposition__dU__wrapper" prot="public">detail::polar_decomposition_dU_wrapper</innerclass>
    <innerclass refid="classdetail_1_1polar__decomposition__dV__wrapper" prot="public">detail::polar_decomposition_dV_wrapper</innerclass>
    <innerclass refid="classdetail_1_1polar__decomposition__R__wrapper" prot="public">detail::polar_decomposition_R_wrapper</innerclass>
    <innerclass refid="classdetail_1_1polar__decomposition__U__wrapper" prot="public">detail::polar_decomposition_U_wrapper</innerclass>
    <innerclass refid="classdetail_1_1polar__decomposition__V__wrapper" prot="public">detail::polar_decomposition_V_wrapper</innerclass>
    <innerclass refid="classdetail_1_1polar__decomposition__wrapper" prot="public">detail::polar_decomposition_wrapper</innerclass>
    <innerclass refid="classdetail_1_1positive__negative__decomposition__dneg__wrapper" prot="public">detail::positive_negative_decomposition_dneg_wrapper</innerclass>
    <innerclass refid="classdetail_1_1positive__negative__decomposition__dpos__wrapper" prot="public">detail::positive_negative_decomposition_dpos_wrapper</innerclass>
    <innerclass refid="classdetail_1_1positive__negative__decomposition__neg__wrapper" prot="public">detail::positive_negative_decomposition_neg_wrapper</innerclass>
    <innerclass refid="classdetail_1_1positive__negative__decomposition__pos__wrapper" prot="public">detail::positive_negative_decomposition_pos_wrapper</innerclass>
    <innerclass refid="classdetail_1_1positive__negative__decomposition__wrapper" prot="public">detail::positive_negative_decomposition_wrapper</innerclass>
    <innerclass refid="structdetail_1_1positive__part" prot="public">detail::positive_part</innerclass>
    <innerclass refid="classdetail_1_1pow__tensor__wrapper" prot="public">detail::pow_tensor_wrapper</innerclass>
    <innerclass refid="structdetail_1_1print__operator" prot="public">detail::print_operator</innerclass>
    <innerclass refid="structdetail_1_1print__operator_3_01tmech_1_1detail_1_1operator__add_01_4" prot="public">detail::print_operator&lt; tmech::detail::operator_add &gt;</innerclass>
    <innerclass refid="structdetail_1_1print__operator_3_01tmech_1_1detail_1_1operator__div_01_4" prot="public">detail::print_operator&lt; tmech::detail::operator_div &gt;</innerclass>
    <innerclass refid="structdetail_1_1print__operator_3_01tmech_1_1detail_1_1operator__mul_01_4" prot="public">detail::print_operator&lt; tmech::detail::operator_mul &gt;</innerclass>
    <innerclass refid="structdetail_1_1print__operator_3_01tmech_1_1detail_1_1operator__sub_01_4" prot="public">detail::print_operator&lt; tmech::detail::operator_sub &gt;</innerclass>
    <innerclass refid="structdetail_1_1result__expression__type" prot="public">detail::result_expression_type</innerclass>
    <innerclass refid="structdetail_1_1result__expression__type_3_01tmech_1_1tensor_3_01T_00_01Dim_00_01Rank_01_4_01_4" prot="public">detail::result_expression_type&lt; tmech::tensor&lt; T, Dim, Rank &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1result__type" prot="public">detail::result_type</innerclass>
    <innerclass refid="structdetail_1_1result__type_3_01__T_00_01__T_01_4" prot="public">detail::result_type&lt; _T, _T &gt;</innerclass>
    <innerclass refid="structdetail_1_1result__type_3_01double_00_01float_01_4" prot="public">detail::result_type&lt; double, float &gt;</innerclass>
    <innerclass refid="structdetail_1_1result__type_3_01double_00_01int_01_4" prot="public">detail::result_type&lt; double, int &gt;</innerclass>
    <innerclass refid="structdetail_1_1result__type_3_01double_00_01long_01int_01_4" prot="public">detail::result_type&lt; double, long int &gt;</innerclass>
    <innerclass refid="structdetail_1_1result__type_3_01double_00_01std_1_1complex_3_01T_01_4_01_4" prot="public">detail::result_type&lt; double, std::complex&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1result__type_3_01double_00_01std_1_1size__t_01_4" prot="public">detail::result_type&lt; double, std::size_t &gt;</innerclass>
    <innerclass refid="structdetail_1_1result__type_3_01float_00_01double_01_4" prot="public">detail::result_type&lt; float, double &gt;</innerclass>
    <innerclass refid="structdetail_1_1result__type_3_01float_00_01int_01_4" prot="public">detail::result_type&lt; float, int &gt;</innerclass>
    <innerclass refid="structdetail_1_1result__type_3_01float_00_01std_1_1complex_3_01T_01_4_01_4" prot="public">detail::result_type&lt; float, std::complex&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1result__type_3_01int_00_01double_01_4" prot="public">detail::result_type&lt; int, double &gt;</innerclass>
    <innerclass refid="structdetail_1_1result__type_3_01int_00_01float_01_4" prot="public">detail::result_type&lt; int, float &gt;</innerclass>
    <innerclass refid="structdetail_1_1result__type_3_01long_01int_00_01double_01_4" prot="public">detail::result_type&lt; long int, double &gt;</innerclass>
    <innerclass refid="structdetail_1_1result__type_3_01std_1_1complex_3_01double_01_4_00_01std_1_1complex_3_01float_01_4_01_4" prot="public">detail::result_type&lt; std::complex&lt; double &gt;, std::complex&lt; float &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1result__type_3_01std_1_1complex_3_01float_01_4_00_01std_1_1complex_3_01double_01_4_01_4" prot="public">detail::result_type&lt; std::complex&lt; float &gt;, std::complex&lt; double &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1result__type_3_01std_1_1complex_3_01T_01_4_00_01double_01_4" prot="public">detail::result_type&lt; std::complex&lt; T &gt;, double &gt;</innerclass>
    <innerclass refid="structdetail_1_1result__type_3_01std_1_1complex_3_01T_01_4_00_01float_01_4" prot="public">detail::result_type&lt; std::complex&lt; T &gt;, float &gt;</innerclass>
    <innerclass refid="structdetail_1_1result__type_3_01std_1_1complex_3_01T_01_4_00_01std_1_1complex_3_01T_01_4_01_4" prot="public">detail::result_type&lt; std::complex&lt; T &gt;, std::complex&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1result__type_3_01std_1_1size__t_00_01double_01_4" prot="public">detail::result_type&lt; std::size_t, double &gt;</innerclass>
    <innerclass refid="structdetail_1_1result__type__tensor__expression" prot="public">detail::result_type_tensor_expression</innerclass>
    <innerclass refid="structdetail_1_1result__type__tensor__expression_3_01__LHS_00_01__RHS_00_01false_00_01true_01_4" prot="public">detail::result_type_tensor_expression&lt; _LHS, _RHS, false, true &gt;</innerclass>
    <innerclass refid="structdetail_1_1result__type__tensor__expression_3_01__LHS_00_01__RHS_00_01true_00_01false_01_4" prot="public">detail::result_type_tensor_expression&lt; _LHS, _RHS, true, false &gt;</innerclass>
    <innerclass refid="structdetail_1_1return__data__type__inner__product" prot="public">detail::return_data_type_inner_product</innerclass>
    <innerclass refid="structdetail_1_1return__data__type__inner__product_3_01__T_00_01__Dim_00_010_01_4" prot="public">detail::return_data_type_inner_product&lt; _T, _Dim, 0 &gt;</innerclass>
    <innerclass refid="structdetail_1_1reverse__sequence" prot="public">detail::reverse_sequence</innerclass>
    <innerclass refid="structdetail_1_1reverse__sequence__h" prot="public">detail::reverse_sequence_h</innerclass>
    <innerclass refid="structdetail_1_1reverse__sequence__h_3_01sequence_3_01Numbers_8_8_8_01_4_00_01sequence_3_01First_00_01Args_8_8_8_01_4_01_4" prot="public">detail::reverse_sequence_h&lt; sequence&lt; Numbers... &gt;, sequence&lt; First, Args... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1reverse__sequence__h_3_01void_00_01sequence_3_01First_00_01Args_8_8_8_01_4_01_4" prot="public">detail::reverse_sequence_h&lt; void, sequence&lt; First, Args... &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1scalar" prot="public">detail::scalar</innerclass>
    <innerclass refid="structdetail_1_1sec__wrapper" prot="public">detail::sec_wrapper</innerclass>
    <innerclass refid="structdetail_1_1seq__gen" prot="public">detail::seq_gen</innerclass>
    <innerclass refid="structdetail_1_1seq__gen_3_01Start_00_01End_00_01Ns_8_8_8_01_4" prot="public">detail::seq_gen&lt; Start, End, Ns... &gt;</innerclass>
    <innerclass refid="structdetail_1_1seq__gen_3_01Start_00_01Start_00_01Ns_8_8_8_01_4" prot="public">detail::seq_gen&lt; Start, Start, Ns... &gt;</innerclass>
    <innerclass refid="structdetail_1_1seq__gen__transpose" prot="public">detail::seq_gen_transpose</innerclass>
    <innerclass refid="structdetail_1_1seq__gen__transpose_3_010_00_011_00_01Ns_8_8_8_01_4" prot="public">detail::seq_gen_transpose&lt; 0, 1, Ns... &gt;</innerclass>
    <innerclass refid="structdetail_1_1seq__gen__transpose_3_01Start_00_01End_00_01Ns_8_8_8_01_4" prot="public">detail::seq_gen_transpose&lt; Start, End, Ns... &gt;</innerclass>
    <innerclass refid="structdetail_1_1set__basis" prot="public">detail::set_basis</innerclass>
    <innerclass refid="structdetail_1_1set__basis_3_01First_01_4" prot="public">detail::set_basis&lt; First &gt;</innerclass>
    <innerclass refid="structdetail_1_1set__difference__sequence" prot="public">detail::set_difference_sequence</innerclass>
    <innerclass refid="structdetail_1_1set__difference__sequence__h" prot="public">detail::set_difference_sequence_h</innerclass>
    <innerclass refid="structdetail_1_1set__difference__sequence__h_3_01sequence_3_01Result_8_8_8_01_4_00_01sequence_3_bf2e7243518eef2d20a6d321cfd0324f" prot="public">detail::set_difference_sequence_h&lt; sequence&lt; Result... &gt;, sequence&lt; ArgsInput1... &gt;, sequence&lt;&gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1set__difference__sequence__h_3_01sequence_3_01Result_8_8_8_01_4_00_01sequence_3_3f4ababf8dfbd23e389b03a7806cbf86" prot="public">detail::set_difference_sequence_h&lt; sequence&lt; Result... &gt;, sequence&lt; FirstInput, ArgsInput1... &gt;, sequence&lt; FirstInput, ArgsInput2... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1set__difference__sequence__h_3_01sequence_3_01Result_8_8_8_01_4_00_01sequence_3_123cabd2395768bbfdd15260d73ce180" prot="public">detail::set_difference_sequence_h&lt; sequence&lt; Result... &gt;, sequence&lt; FirstInput1, ArgsInput1... &gt;, sequence&lt; FirstInput2, ArgsInput2... &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1sign__N__wrapper" prot="public">detail::sign_N_wrapper</innerclass>
    <innerclass refid="classdetail_1_1sign__S__wrapper" prot="public">detail::sign_S_wrapper</innerclass>
    <innerclass refid="classdetail_1_1sign__tensor__wrapper" prot="public">detail::sign_tensor_wrapper</innerclass>
    <innerclass refid="structdetail_1_1sign__wrapper" prot="public">detail::sign_wrapper</innerclass>
    <innerclass refid="structdetail_1_1sin__wrapper" prot="public">detail::sin_wrapper</innerclass>
    <innerclass refid="classdetail_1_1skew__symmetric__part__wrapper" prot="public">detail::skew_symmetric_part_wrapper</innerclass>
    <innerclass refid="structdetail_1_1sqrt__" prot="public">detail::sqrt_</innerclass>
    <innerclass refid="structdetail_1_1sqrt__wrapper" prot="public">detail::sqrt_wrapper</innerclass>
    <innerclass refid="classdetail_1_1squeezer" prot="public">detail::squeezer</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01__Wrapper_3_01negative_3_01__Expr_01_4_00_01__Args_8_8_8_01_4_01_4" prot="public">detail::squeezer&lt; _Wrapper&lt; negative&lt; _Expr &gt;, _Args... &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01__Expr_00_01__Expr_00_01op__add_01_4_01_4" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; _Expr, _Expr, op_add &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01__Expr_00_01__Expr_00_01op__div_01_4_01_4" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; _Expr, _Expr, op_div &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01__Expr_00_01__Expr_00_01op__sub_01_4_01_4" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; _Expr, _Expr, op_sub &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01__Expr_00_01real_3_01__T_00_010_00_09942b2b9336a1dc518a80c91b65608a8" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; _Expr, real&lt; _T, 0, 0, _E &gt;, op_mul &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01__Expr_00_01scalar__one_3_01__T_01_4_00_01op__mul_01_4_01_4" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; _Expr, scalar_one&lt; _T &gt;, op_mul &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01__Expr_00_01scalar__zero_3_01__T_01_4_00_01op__add_01_4_01_4" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; _Expr, scalar_zero&lt; _T &gt;, op_add &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01__Expr_00_01scalar__zero_3_01__T_01_4_00_01op__mul_01_4_01_4" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; _Expr, scalar_zero&lt; _T &gt;, op_mul &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01__Expr_00_01scalar__zero_3_01__T_01_4_00_01op__sub_01_4_01_4" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; _Expr, scalar_zero&lt; _T &gt;, op_sub &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01__Expr_00_01tensor__zero_3_01__T_01_4_00_01op__add_01_4_01_4" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; _Expr, tensor_zero&lt; _T &gt;, op_add &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01__Expr_00_01tensor__zero_3_01__T_01_4_00_01op__mul_01_4_01_4" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; _Expr, tensor_zero&lt; _T &gt;, op_mul &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01__Expr_00_01tensor__zero_3_01__T_01_4_00_01op__sub_01_4_01_4" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; _Expr, tensor_zero&lt; _T &gt;, op_sub &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01__LHS_00_01negative_3_01__RHS_01_4_00_01op__add_01_4_01_4" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; _LHS, negative&lt; _RHS &gt;, op_add &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01__LHS_00_01negative_3_01__RHS_01_4_00_01op__mul_01_4_01_4" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; _LHS, negative&lt; _RHS &gt;, op_mul &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01binary__expression__wrapper_3_01__LH4b75ad8a8c6c107f3d0be97dfb70404e" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; binary_expression_wrapper&lt; _LHS, _RHS, op_mul &gt;, binary_expression_wrapper&lt; _RHS, _LHS, op_mul &gt;, op_add &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01binary__expression__wrapper_3_01real40e428cd88e03450eb0e8884b309e8dc" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; binary_expression_wrapper&lt; real&lt; _T, _L, _R, _E &gt;, _Expr, op_mul &gt;, _Expr, op_add &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01function__wrapper_3_01__Expr_00_01sq4bc63e6f3a6d84477b9fb70f89049116" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; function_wrapper&lt; _Expr, sqrt_wrapper &gt;, function_wrapper&lt; _Expr, sqrt_wrapper &gt;, op_mul &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01negative_3_01__LHS_01_4_00_01__RHS_00_01op__mul_01_4_01_4" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; negative&lt; _LHS &gt;, _RHS, op_mul &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01real_3_01__T_00_010_00_010_00_01__E_09f7ac4bb6807518b944387f52d3147d" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; real&lt; _T, 0, 0, _E &gt;, _Expr, op_mul &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01scalar__one_3_01__T_01_4_00_01__Expr_00_01op__mul_01_4_01_4" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; scalar_one&lt; _T &gt;, _Expr, op_mul &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01scalar__one_3_01__T_01_4_00_01scalar05e2b40a889baa29c7afedb4798a3968" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; scalar_one&lt; _T &gt;, scalar_one&lt; _T &gt;, op_mul &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01scalar__zero_3_01__T_01_4_00_01__Expr_00_01op__add_01_4_01_4" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; scalar_zero&lt; _T &gt;, _Expr, op_add &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01scalar__zero_3_01__T_01_4_00_01__Expr_00_01op__div_01_4_01_4" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; scalar_zero&lt; _T &gt;, _Expr, op_div &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01scalar__zero_3_01__T_01_4_00_01__Expr_00_01op__mul_01_4_01_4" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; scalar_zero&lt; _T &gt;, _Expr, op_mul &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01scalar__zero_3_01__T_01_4_00_01__Expr_00_01op__sub_01_4_01_4" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; scalar_zero&lt; _T &gt;, _Expr, op_sub &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01scalar__zero_3_01__T_01_4_00_01scala2c1052a74121317000b9a8b39e9e8630" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; scalar_zero&lt; _T &gt;, scalar_zero&lt; _T &gt;, op_add &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01scalar__zero_3_01__T_01_4_00_01scalacf6e92e38c2c2d9887a21a8f8b334114" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; scalar_zero&lt; _T &gt;, scalar_zero&lt; _T &gt;, op_sub &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01tensor__zero_3_01__T_01_4_00_01__Expr_00_01op__add_01_4_01_4" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; tensor_zero&lt; _T &gt;, _Expr, op_add &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01tensor__zero_3_01__T_01_4_00_01__Expr_00_01op__mul_01_4_01_4" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; tensor_zero&lt; _T &gt;, _Expr, op_mul &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01tensor__zero_3_01__T_01_4_00_01__Expr_00_01op__sub_01_4_01_4" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; tensor_zero&lt; _T &gt;, _Expr, op_sub &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01tensor__zero_3_01__T_01_4_00_01tenso9dbeb0bb1aa110c420c847c2038dbdfd" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; tensor_zero&lt; _T &gt;, tensor_zero&lt; _T &gt;, op_add &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01binary__expression__wrapper_3_01tensor__zero_3_01__T_01_4_00_01tenso399f74fd871235a5b93856b671f720d1" prot="public">detail::squeezer&lt; binary_expression_wrapper&lt; tensor_zero&lt; _T &gt;, tensor_zero&lt; _T &gt;, op_sub &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01diff__pow_3_01__Expr_00_01real_3_01__T_00_010_00_010_00_01__E_01_4_00_01true_01_4_01_4" prot="public">detail::squeezer&lt; diff_pow&lt; _Expr, real&lt; _T, 0, 0, _E &gt;, true &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01diff__pow_3_01__Expr_00_01real_3_01__T_00_011_00_010_00_011_01_4_00_01true_01_4_01_4" prot="public">detail::squeezer&lt; diff_pow&lt; _Expr, real&lt; _T, 1, 0, 1 &gt;, true &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01negative_3_01negative_3_01__Expr_01_4_01_4_01_4" prot="public">detail::squeezer&lt; negative&lt; negative&lt; _Expr &gt; &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01tensor__inner__product__wrapper_3_01__Expr_00_01tensor__zero_3_01__Td06ba88e3f149e2abc00675bfa62b850" prot="public">detail::squeezer&lt; tensor_inner_product_wrapper&lt; _Expr, tensor_zero&lt; _Type &gt;, _SequenceLHS, _SequenceRHS &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01tensor__inner__product__wrapper_3_01__ExprLHS_00_01tensor__outer__pra9ead97c59b2e97f8e74f6e8a0236b58" prot="public">detail::squeezer&lt; tensor_inner_product_wrapper&lt; _ExprLHS, tensor_outer_product_wrapper&lt; tensor_one&lt; _Type &gt;, tensor_one&lt; _Type &gt;, tmech::sequence&lt; 1, 3 &gt;, tmech::sequence&lt; 2, 4 &gt; &gt;, tmech::sequence&lt; 1, 2 &gt;, tmech::sequence&lt; 1, 2 &gt; &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01tensor__inner__product__wrapper_3_01tensor__outer__product__wrapper_a4144d490d681c2d5b168549cfc580e8" prot="public">detail::squeezer&lt; tensor_inner_product_wrapper&lt; tensor_outer_product_wrapper&lt; tensor_one&lt; _Type &gt;, tensor_one&lt; _Type &gt;, tmech::sequence&lt; 1, 3 &gt;, tmech::sequence&lt; 2, 4 &gt; &gt;, _ExprRHS, tmech::sequence&lt; 1, 2 &gt;, tmech::sequence&lt; 1, 2 &gt; &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01tensor__inner__product__wrapper_3_01tensor__zero_3_01__Type_01_4_00_129aaf37b1da5e6a21dea327bf87085a" prot="public">detail::squeezer&lt; tensor_inner_product_wrapper&lt; tensor_zero&lt; _Type &gt;, _Expr, _SequenceLHS, _SequenceRHS &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01tensor__outer__product__wrapper_3_01__ExprLHS_00_01tensor__zero_3_01897b3c81e61d1e3aa5a02c70704ee1cc" prot="public">detail::squeezer&lt; tensor_outer_product_wrapper&lt; _ExprLHS, tensor_zero&lt; _Type &gt;, _SeqLHS, _SeqRHS &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01tensor__outer__product__wrapper_3_01tensor__zero_3_01__Type_01_4_00_76d72455113c6c5b7a705f602cb3a5b2" prot="public">detail::squeezer&lt; tensor_outer_product_wrapper&lt; tensor_zero&lt; _Type &gt;, _ExprRHS, _SeqLHS, _SeqRHS &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1squeezer_3_01tensor__outer__product__wrapper_3_01tensor__zero_3_01__TypeLHS_01_4_4d307cf96fdea7a110f8d83e6033ede3" prot="public">detail::squeezer&lt; tensor_outer_product_wrapper&lt; tensor_zero&lt; _TypeLHS &gt;, tensor_zero&lt; _TypeRHS &gt;, _SeqLHS, _SeqRHS &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1swape__element__squence" prot="public">detail::swape_element_squence</innerclass>
    <innerclass refid="structdetail_1_1swape__element__squence_3_01sequence_3_01ArgsInput_8_8_8_01_4_00_01Arg1_00_01Arg2_01_4" prot="public">detail::swape_element_squence&lt; sequence&lt; ArgsInput... &gt;, Arg1, Arg2 &gt;</innerclass>
    <innerclass refid="structdetail_1_1swape__element__squence__h" prot="public">detail::swape_element_squence_h</innerclass>
    <innerclass refid="structdetail_1_1swape__element__squence__h_3_01sequence_3_01ArgsResult_8_8_8_01_4_00_01sequence_1892c3f1ed054b3032c87ede7a35a75e" prot="public">detail::swape_element_squence_h&lt; sequence&lt; ArgsResult... &gt;, sequence&lt; FirstInput, ArgsInput... &gt;, Arg1, Arg2 &gt;</innerclass>
    <innerclass refid="structdetail_1_1swape__element__squence__h_3_01sequence_3_01ArgsResult_8_8_8_01_4_00_01sequence_980a8501759efc50ebab7bd6d80f808c" prot="public">detail::swape_element_squence_h&lt; sequence&lt; ArgsResult... &gt;, sequence&lt; FirstInput, ArgsInput... &gt;, FirstInput, Arg2 &gt;</innerclass>
    <innerclass refid="structdetail_1_1swape__element__squence__h_3_01sequence_3_01ArgsResult_8_8_8_01_4_00_01sequence_ccc5e5d954b2acf4ebb78d7b71521a65" prot="public">detail::swape_element_squence_h&lt; sequence&lt; ArgsResult... &gt;, sequence&lt; FirstInput, ArgsInput... &gt;, FirstInput, FirstInput &gt;</innerclass>
    <innerclass refid="structdetail_1_1swape__elements__squence" prot="public">detail::swape_elements_squence</innerclass>
    <innerclass refid="structdetail_1_1swape__elements__squence_3_01sequence_3_01Input_8_8_8_01_4_00_01sequence_3_01Inp9bc95a633ddcad1f2559e77085e34391" prot="public">detail::swape_elements_squence&lt; sequence&lt; Input... &gt;, sequence&lt; Input1... &gt;, sequence&lt; Input2... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1swape__elements__squence__h" prot="public">detail::swape_elements_squence_h</innerclass>
    <innerclass refid="structdetail_1_1swape__elements__squence__h_3_01sequence_3_01Result_8_8_8_01_4_00_01sequence_3_0174ada51eef7a735014f17985318ddc6" prot="public">detail::swape_elements_squence_h&lt; sequence&lt; Result... &gt;, sequence&lt; ArgsInput... &gt;, sequence&lt; FirstInput1, ArgsInput1... &gt;, sequence&lt; FirstInput2, ArgsInput2... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1swape__elements__squence__h_3_01sequence_3_4_00_01sequence_3_01ArgsInput_8_8_8_0e3e8498394d5dfd0cdac83c453ce2f75" prot="public">detail::swape_elements_squence_h&lt; sequence&lt;&gt;, sequence&lt; ArgsInput... &gt;, sequence&lt; FirstInput1, ArgsInput1... &gt;, sequence&lt; FirstInput2, ArgsInput2... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1swape__elements__squence__h_3_01sequence_3_4_00_01sequence_3_01ArgsInput_8_8_8_00e942f40200abba6e4798927bab66f53" prot="public">detail::swape_elements_squence_h&lt; sequence&lt;&gt;, sequence&lt; ArgsInput... &gt;, sequence&lt;&gt;, sequence&lt;&gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1symdiff__expression__wrapper" prot="public">detail::symdiff_expression_wrapper</innerclass>
    <innerclass refid="classdetail_1_1symmetric__part__wrapper" prot="public">detail::symmetric_part_wrapper</innerclass>
    <innerclass refid="structdetail_1_1tan__wrapper" prot="public">detail::tan_wrapper</innerclass>
    <innerclass refid="classdetail_1_1tensor__basis__change__wrapper" prot="public">detail::tensor_basis_change_wrapper</innerclass>
    <innerclass refid="classdetail_1_1tensor__binary__expression__wrapper" prot="public">detail::tensor_binary_expression_wrapper</innerclass>
    <innerclass refid="classdetail_1_1tensor__function__wrapper" prot="public">detail::tensor_function_wrapper</innerclass>
    <innerclass refid="classdetail_1_1tensor__inner__product__wrapper" prot="public">detail::tensor_inner_product_wrapper</innerclass>
    <innerclass refid="classdetail_1_1tensor__outer__product__wrapper" prot="public">detail::tensor_outer_product_wrapper</innerclass>
    <innerclass refid="structdetail_1_1trace__wrapper" prot="public">detail::trace_wrapper</innerclass>
    <innerclass refid="structdetail_1_1uniform__distribution" prot="public">detail::uniform_distribution</innerclass>
    <innerclass refid="structdetail_1_1uniform__distribution_3_01T_00_01true_01_4" prot="public">detail::uniform_distribution&lt; T, true &gt;</innerclass>
    <innerclass refid="classdetail_1_1volumetric__wrapper" prot="public">detail::volumetric_wrapper</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="derivative__wrapper__bones_8h_1a68ed4ed02f5ec0b573d3db93d9209229" prot="public" static="no">
        <type>tmech::detail::operator_mul</type>
        <definition>typedef tmech::detail::operator_mul detail::op_mul</definition>
        <argsstring></argsstring>
        <name>op_mul</name>
        <qualifiedname>detail::op_mul</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" line="5" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="derivative__wrapper__bones_8h_1ac638cf317d37c1f277f30cbd59f21002" prot="public" static="no">
        <type>tmech::detail::operator_add</type>
        <definition>typedef tmech::detail::operator_add detail::op_add</definition>
        <argsstring></argsstring>
        <name>op_add</name>
        <qualifiedname>detail::op_add</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" line="6" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="derivative__wrapper__bones_8h_1a9f7afa423946a99009bcf2afc257ba76" prot="public" static="no">
        <type>tmech::detail::operator_div</type>
        <definition>typedef tmech::detail::operator_div detail::op_div</definition>
        <argsstring></argsstring>
        <name>op_div</name>
        <qualifiedname>detail::op_div</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" line="7" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="derivative__wrapper__bones_8h_1a20db8c2423a3c54696549b2d0ed7f344" prot="public" static="no">
        <type>tmech::detail::operator_sub</type>
        <definition>typedef tmech::detail::operator_sub detail::op_sub</definition>
        <argsstring></argsstring>
        <name>op_sub</name>
        <qualifiedname>detail::op_sub</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" line="8" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/derivative_wrapper_bones.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="symdiff__utility_8h_1a0b90f6fd3725563c9af90ccfa308dcb7" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename _Type</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>_Arguments</declname>
            <defname>_Arguments</defname>
          </param>
        </templateparamlist>
        <type>decltype(std::declval&lt; _Type &gt;().update(std::declval&lt; _Arguments &gt;()...))</type>
        <definition>using detail::has_update = typedef decltype(std::declval&lt;_Type&gt;().update(std::declval&lt;_Arguments&gt;()...))</definition>
        <argsstring></argsstring>
        <name>has_update</name>
        <qualifiedname>detail::has_update</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/symdiff_utility.h" line="134" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/symdiff_utility.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="symdiff__utility_8h_1a0279cfc4f77b0ba7d588db12715347d0" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename _Type</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>_Arguments</declname>
            <defname>_Arguments</defname>
          </param>
        </templateparamlist>
        <type>decltype(std::declval&lt; _Type &gt;().reset(std::declval&lt; _Arguments &gt;()...))</type>
        <definition>using detail::has_reset = typedef decltype(std::declval&lt;_Type&gt;().reset(std::declval&lt;_Arguments&gt;()...))</definition>
        <argsstring></argsstring>
        <name>has_reset</name>
        <qualifiedname>detail::has_reset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/symdiff_utility.h" line="137" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/symdiff_utility.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="numerical__differentiation__central__sym__wrapper__bones_8h_1ac96f5f41590a5d4582e7153a4008aa86" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Result</type>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>Dim</declname>
            <defname>Dim</defname>
          </param>
        </templateparamlist>
        <type>meta_for_loop_symmetric&lt; meta_for_loop_symmetric&lt; Result, Dim, 0 &gt;, Dim, 0 &gt;</type>
        <definition>using detail::basis_pair_t = typedef meta_for_loop_symmetric&lt;meta_for_loop_symmetric&lt;Result, Dim, 0&gt;, Dim, 0&gt;</definition>
        <argsstring></argsstring>
        <name>basis_pair_t</name>
        <qualifiedname>detail::basis_pair_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/numerical_differentiation_central_sym_wrapper_bones.h" line="21" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/numerical_differentiation_central_sym_wrapper_bones.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tensor_2utility_8h_1a98e53f233a0831b03274a3c09ce536ae" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
        </templateparamlist>
        <type>decltype(std::declval&lt; Type &gt;().raw_data())</type>
        <definition>using detail::has_raw_data = typedef decltype(std::declval&lt;Type&gt;().raw_data())</definition>
        <argsstring></argsstring>
        <name>has_raw_data</name>
        <qualifiedname>detail::has_raw_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="327" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tensor_2utility_8h_1a80730cf6e4735239a3d038ec1de71057" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Arguments</declname>
            <defname>Arguments</defname>
          </param>
        </templateparamlist>
        <type>decltype(std::declval&lt; Type &gt;().evaluate(std::declval&lt; Arguments &gt;()...))</type>
        <definition>using detail::has_evaluate = typedef decltype(std::declval&lt;Type&gt;().evaluate(std::declval&lt;Arguments&gt;()...))</definition>
        <argsstring></argsstring>
        <name>has_evaluate</name>
        <qualifiedname>detail::has_evaluate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="330" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tensor_2utility_8h_1a3ea96835e78667b0e4da706c5e28a444" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>End</declname>
            <defname>End</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>Start</declname>
            <defname>Start</defname>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structdetail_1_1seq__gen" kindref="compound">seq_gen</ref>&lt; Start, End+1 &gt;::type</type>
        <definition>using detail::sequence_t = typedef typename seq_gen&lt;Start, End+1&gt;::type</definition>
        <argsstring></argsstring>
        <name>sequence_t</name>
        <qualifiedname>detail::sequence_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="370" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tensor_2utility_8h_1ad377c053204b5ee4ffb63e0791c5ee00" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>End</declname>
            <defname>End</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>Start</declname>
            <defname>Start</defname>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structdetail_1_1seq__gen__transpose" kindref="compound">seq_gen_transpose</ref>&lt; Start, End-1 &gt;::type</type>
        <definition>using detail::sequence_transpose = typedef typename seq_gen_transpose&lt;Start, End-1&gt;::type</definition>
        <argsstring></argsstring>
        <name>sequence_transpose</name>
        <qualifiedname>detail::sequence_transpose</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="394" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tensor_2utility_8h_1ae6f0b576cdfe08d69d4cc2cc677d9706" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>Rank</declname>
            <defname>Rank</defname>
          </param>
          <param>
            <type>typename SequenceInner</type>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structdetail_1_1make__outer__sequence__test" kindref="compound">make_outer_sequence_test</ref>&lt; Rank, 1, SequenceInner &gt;::type::sequence_outer</type>
        <definition>using detail::sequence_outer_t = typedef typename make_outer_sequence_test&lt;Rank, 1, SequenceInner&gt;::type::sequence_outer</definition>
        <argsstring></argsstring>
        <name>sequence_outer_t</name>
        <qualifiedname>detail::sequence_outer_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="707" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="707" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tensor_2utility_8h_1a027264c0f2132e76a80057029ccf4946" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Input1</type>
          </param>
          <param>
            <type>typename Input2</type>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structdetail_1_1set__difference__sequence" kindref="compound">set_difference_sequence</ref>&lt; Input1, Input2 &gt;::type</type>
        <definition>using detail::set_difference_sequence_t = typedef typename set_difference_sequence&lt;Input1, Input2&gt;::type</definition>
        <argsstring></argsstring>
        <name>set_difference_sequence_t</name>
        <qualifiedname>detail::set_difference_sequence_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="739" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="739" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tensor_2utility_8h_1a80763cd7929520f47e50900aaf1db46f" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Input</type>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>Position</declname>
            <defname>Position</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>Value</declname>
            <defname>Value</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structdetail_1_1change__value__at__position" kindref="compound">change_value_at_position</ref>&lt; Input, Position, Value &gt;::type</type>
        <definition>using detail::change_value_at_position_t = typedef typename change_value_at_position&lt;Input, Position, Value&gt;::type</definition>
        <argsstring></argsstring>
        <name>change_value_at_position_t</name>
        <qualifiedname>detail::change_value_at_position_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="766" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="766" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tensor_2utility_8h_1ac260571cb2ed72dd831d8b305158821d" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Input</type>
          </param>
          <param>
            <type>typename Position</type>
          </param>
          <param>
            <type>typename Value</type>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structdetail_1_1change__values__at__positions" kindref="compound">change_values_at_positions</ref>&lt; Input, Position, Value &gt;::type</type>
        <definition>using detail::change_values_at_positions_t = typedef typename change_values_at_positions&lt;Input, Position, Value&gt;::type</definition>
        <argsstring></argsstring>
        <name>change_values_at_positions_t</name>
        <qualifiedname>detail::change_values_at_positions_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="782" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="782" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tensor_2utility_8h_1a3b57aa71cf66d87bf20231f5c953038c" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>Value</declname>
            <defname>Value</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structdetail_1_1add__value__sequence" kindref="compound">add_value_sequence</ref>&lt; T, Value &gt;::type</type>
        <definition>using detail::add_value_sequence_t = typedef typename add_value_sequence&lt;T, Value&gt;::type</definition>
        <argsstring></argsstring>
        <name>add_value_sequence_t</name>
        <qualifiedname>detail::add_value_sequence_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="805" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="805" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tensor_2utility_8h_1a354efe37f99dfaf9bec2e128387ae2df" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>Value</declname>
            <defname>Value</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structdetail_1_1min__value__squence" kindref="compound">min_value_squence</ref>&lt; typename std::remove_reference&lt; T &gt;::type, Value &gt;::type</type>
        <definition>using detail::min_value_squence_t = typedef typename min_value_squence&lt;typename std::remove_reference&lt;T&gt;::type, Value&gt;::type</definition>
        <argsstring></argsstring>
        <name>min_value_squence_t</name>
        <qualifiedname>detail::min_value_squence_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="830" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="830" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tensor_2utility_8h_1adc7aaa655aee91a04ee1d1d3ff051912" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Input</type>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>Arg1</declname>
            <defname>Arg1</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>Arg2</declname>
            <defname>Arg2</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structdetail_1_1swape__element__squence" kindref="compound">swape_element_squence</ref>&lt; Input, Arg1, Arg2 &gt;::type</type>
        <definition>using detail::swape_element_squence_t = typedef typename swape_element_squence&lt;Input, Arg1, Arg2&gt;::type</definition>
        <argsstring></argsstring>
        <name>swape_element_squence_t</name>
        <qualifiedname>detail::swape_element_squence_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="870" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="870" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tensor_2utility_8h_1add0ee9b38052bc2f113f1fb6fbfe938d" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Input</type>
          </param>
          <param>
            <type>typename Input1</type>
          </param>
          <param>
            <type>typename Input2</type>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structdetail_1_1swape__elements__squence" kindref="compound">swape_elements_squence</ref>&lt; Input, Input1, Input2 &gt;::type</type>
        <definition>using detail::swape_elements_squence_t = typedef typename swape_elements_squence&lt;Input, Input1, Input2&gt;::type</definition>
        <argsstring></argsstring>
        <name>swape_elements_squence_t</name>
        <qualifiedname>detail::swape_elements_squence_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="907" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="907" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tensor_2utility_8h_1ac0c8ffce2dcb0c414fbb55d022acd4c7" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Sequence</type>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structdetail_1_1reverse__sequence" kindref="compound">reverse_sequence</ref>&lt; Sequence &gt;::type</type>
        <definition>using detail::reverse_sequence_t = typedef typename reverse_sequence&lt;Sequence&gt;::type</definition>
        <argsstring></argsstring>
        <name>reverse_sequence_t</name>
        <qualifiedname>detail::reverse_sequence_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="932" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="932" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tensor_2utility_8h_1a04eb987a1f923f82f68ceffe82759559" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename _SeqFirst</type>
          </param>
          <param>
            <type>typename _SeqSecond</type>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structdetail_1_1append__sequence__end" kindref="compound">append_sequence_end</ref>&lt; _SeqFirst, _SeqSecond &gt;::type</type>
        <definition>using detail::append_sequence_end_t = typedef typename append_sequence_end&lt;_SeqFirst, _SeqSecond&gt;::type</definition>
        <argsstring></argsstring>
        <name>append_sequence_end_t</name>
        <qualifiedname>detail::append_sequence_end_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="961" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="961" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="tensor_2utility_8h_1ac2f70786a79918b3cbe06d2e9611ce38" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>typename Sequence</type>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>ValueToCheck</declname>
            <defname>ValueToCheck</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto detail::counter_index_sequence_v</definition>
        <argsstring></argsstring>
        <name>counter_index_sequence_v</name>
        <qualifiedname>detail::counter_index_sequence_v</qualifiedname>
        <initializer>= <ref refid="structdetail_1_1counter__index__sequence" kindref="compound">counter_index_sequence</ref>&lt;Sequence, ValueToCheck&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="565" column="16" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="565" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tensor_2utility_8h_1af5716ec509f064b1131fb088ed1df03d" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>typename Sequence</type>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>ValueToCheck</declname>
            <defname>ValueToCheck</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto detail::check_duplicated_value_in_sequence_v</definition>
        <argsstring></argsstring>
        <name>check_duplicated_value_in_sequence_v</name>
        <qualifiedname>detail::check_duplicated_value_in_sequence_v</qualifiedname>
        <initializer>= <ref refid="structdetail_1_1check__duplicated__value__in__sequence" kindref="compound">check_duplicated_value_in_sequence</ref>&lt;Sequence, ValueToCheck&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="605" column="16" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="605" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tensor_2utility_8h_1abf7d1e10ae22945f400ec547e4fe77c9" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>typename Sequence</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto detail::check_duplicated_in_sequence_v</definition>
        <argsstring></argsstring>
        <name>check_duplicated_in_sequence_v</name>
        <qualifiedname>detail::check_duplicated_in_sequence_v</qualifiedname>
        <initializer>= <ref refid="structdetail_1_1check__duplicated__in__sequence" kindref="compound">check_duplicated_in_sequence</ref>&lt;Sequence&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="630" column="16" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="630" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="math__details_8h_1a151b71fec4dff49d34ce2212963913b7" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto detail::det_2_2</definition>
        <argsstring>(T const *const a)</argsstring>
        <name>det_2_2</name>
        <qualifiedname>detail::det_2_2</qualifiedname>
        <param>
          <type>T const *const</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/math_details.h" line="20" column="30" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/math_details.h" bodystart="20" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="math__details_8h_1a21808c80534a6ffd4b973b05cdd84d3d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto detail::det_3_3</definition>
        <argsstring>(A const *const a)</argsstring>
        <name>det_3_3</name>
        <qualifiedname>detail::det_3_3</qualifiedname>
        <param>
          <type>A const *const</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/math_details.h" line="27" column="23" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/math_details.h" bodystart="27" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="math__details_8h_1a9dfe2637b0433b9161ea58a010e4c63b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto detail::det_4_4</definition>
        <argsstring>(T const *const a)</argsstring>
        <name>det_4_4</name>
        <qualifiedname>detail::det_4_4</qualifiedname>
        <param>
          <type>T const *const</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/math_details.h" line="44" column="23" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/math_details.h" bodystart="44" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="math__details_8h_1ad4e63ab474a2e40df255cf4141a7cc53" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto detail::det_5_5</definition>
        <argsstring>(T const *const a)</argsstring>
        <name>det_5_5</name>
        <qualifiedname>detail::det_5_5</qualifiedname>
        <param>
          <type>T const *const</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/math_details.h" line="79" column="23" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/math_details.h" bodystart="79" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="math__details_8h_1ab27ba2e886a350411e1840efcc494b1c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto detail::det_6_6</definition>
        <argsstring>(T const *const a)</argsstring>
        <name>det_6_6</name>
        <qualifiedname>detail::det_6_6</qualifiedname>
        <param>
          <type>T const *const</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/math_details.h" line="150" column="23" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/math_details.h" bodystart="150" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="numerical__differentiation__central__wrapper__bones_8h_1ac3ba2b513cfece22e2031ed59454dbb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TupType</type>
          </param>
          <param>
            <type>size_t...</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::print</definition>
        <argsstring>(const TupType &amp;_tup, std::index_sequence&lt; I... &gt;)</argsstring>
        <name>print</name>
        <qualifiedname>detail::print</qualifiedname>
        <param>
          <type>const TupType &amp;</type>
          <declname>_tup</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; I... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/numerical_differentiation_central_wrapper_bones.h" line="20" column="6" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/numerical_differentiation_central_wrapper_bones.h" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="numerical__differentiation__central__wrapper__bones_8h_1ac4216a10fc8c2d5fdd55461c072a1901" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::print</definition>
        <argsstring>(const std::tuple&lt; T... &gt; &amp;_tup)</argsstring>
        <name>print</name>
        <qualifiedname>detail::print</qualifiedname>
        <param>
          <type>const std::tuple&lt; T... &gt; &amp;</type>
          <declname>_tup</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/numerical_differentiation_central_wrapper_bones.h" line="28" column="6" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/numerical_differentiation_central_wrapper_bones.h" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="tensor_2utility_8h_1a6bde974af395c7ad2cea2c45335ec790" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename TUP</type>
          </param>
          <param>
            <type>std::size_t ...</type>
            <declname>INDICES</declname>
            <defname>INDICES</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto &amp;</type>
        <definition>static constexpr auto &amp; detail::tuple_call</definition>
        <argsstring>(F &amp;f, TUP &amp;&amp;tup, sequence&lt; INDICES... &gt;)</argsstring>
        <name>tuple_call</name>
        <qualifiedname>detail::tuple_call</qualifiedname>
        <param>
          <type>F &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>TUP &amp;&amp;</type>
          <declname>tup</declname>
        </param>
        <param>
          <type><ref refid="structsequence" kindref="compound">sequence</ref>&lt; INDICES... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="397" column="31" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="397" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="tensor_2utility_8h_1a9ce186f39ada6185e9396bf8c9e37520" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename TUP</type>
          </param>
          <param>
            <type>std::size_t ...</type>
            <declname>INDICES</declname>
            <defname>INDICES</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto detail::tuple_call</definition>
        <argsstring>(F const &amp;f, TUP &amp;&amp;tup, sequence&lt; INDICES... &gt;)</argsstring>
        <name>tuple_call</name>
        <qualifiedname>detail::tuple_call</qualifiedname>
        <param>
          <type>F const &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>TUP &amp;&amp;</type>
          <declname>tup</declname>
        </param>
        <param>
          <type><ref refid="structsequence" kindref="compound">sequence</ref>&lt; INDICES... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="402" column="30" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="402" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="tensor_2utility_8h_1ad938608ec47ece0e03b0c98e7d6a39b0" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t ...</type>
            <declname>Numbers</declname>
            <defname>Numbers</defname>
          </param>
          <param>
            <type>std::size_t ...</type>
            <declname>Ns</declname>
            <defname>Ns</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto detail::make_single_sequence_detail</definition>
        <argsstring>(sequence&lt; Ns... &gt;)</argsstring>
        <name>make_single_sequence_detail</name>
        <qualifiedname>detail::make_single_sequence_detail</qualifiedname>
        <param>
          <type><ref refid="structsequence" kindref="compound">sequence</ref>&lt; Ns... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="407" column="30" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="407" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="tensor_2utility_8h_1a94849b5c9abbb0bd4a442369c618dd64" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t ...</type>
            <declname>Number</declname>
            <defname>Number</defname>
          </param>
          <param>
            <type>std::size_t ...</type>
            <declname>Ns</declname>
            <defname>Ns</defname>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto detail::make_single_sequence_detail</definition>
        <argsstring>(sequence&lt; Ns... &gt;, Args... args)</argsstring>
        <name>make_single_sequence_detail</name>
        <qualifiedname>detail::make_single_sequence_detail</qualifiedname>
        <param>
          <type><ref refid="structsequence" kindref="compound">sequence</ref>&lt; Ns... &gt;</type>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="412" column="30" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="412" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="tensor_2utility_8h_1a17867ecb8ed422386244c45361ee9867" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto detail::make_single_sequence</definition>
        <argsstring>(Args... args)</argsstring>
        <name>make_single_sequence</name>
        <qualifiedname>detail::make_single_sequence</qualifiedname>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="417" column="30" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="417" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="tensor_2utility_8h_1a57e37c39b2cd0ff1ea9d43fe3c8d6c64" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>Start</declname>
            <defname>Start</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>End</declname>
            <defname>End</defname>
          </param>
          <param>
            <type>std::size_t ...</type>
            <declname>Numbers</declname>
            <defname>Numbers</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto detail::get_sequence</definition>
        <argsstring>(sequence&lt; Numbers... &gt;)</argsstring>
        <name>get_sequence</name>
        <qualifiedname>detail::get_sequence</qualifiedname>
        <param>
          <type><ref refid="structsequence" kindref="compound">sequence</ref>&lt; Numbers... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="483" column="30" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="483" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="tensor_2utility_8h_1abea6c38429680d296a5637074f8947f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t...</type>
            <declname>Numbers</declname>
            <defname>Numbers</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::print_sequence</definition>
        <argsstring>(sequence&lt; Numbers... &gt;)</argsstring>
        <name>print_sequence</name>
        <qualifiedname>detail::print_sequence</qualifiedname>
        <param>
          <type><ref refid="structsequence" kindref="compound">sequence</ref>&lt; Numbers... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="490" column="6" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="490" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="tensor_2utility_8h_1a8d35d61ac2e3f6cf0edb54ad0ba119c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void detail::print_sequence</definition>
        <argsstring>(sequence&lt;&gt;)</argsstring>
        <name>print_sequence</name>
        <qualifiedname>detail::print_sequence</qualifiedname>
        <param>
          <type><ref refid="structsequence" kindref="compound">sequence</ref>&lt;&gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" line="494" column="6" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h" bodystart="494" bodyend="496"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/symdiff/binary_expression_wrapper_bones.h" line="6" column="1"/>
  </compounddef>
</doxygen>
