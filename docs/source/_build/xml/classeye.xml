<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classeye" kind="class" language="C++" prot="public">
    <compoundname>eye</compoundname>
    <basecompoundref refid="classtensor__base" prot="public" virt="non-virtual">tensor_base&lt; eye&lt; T, Dim, Rank &gt; &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>Dim</declname>
        <defname>Dim</defname>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>Rank</declname>
        <defname>Rank</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Constructors</header>
      <memberdef kind="function" id="classeye_1ae3d8da3cb23c01aadf9f17d6232c2336" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr eye&lt; T, Dim, Rank &gt;::eye</definition>
        <argsstring>()</argsstring>
        <name>eye</name>
        <qualifiedname>eye::eye</qualifiedname>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/identity_tensor_bones.h" line="36" column="15" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/identity_tensor_meat.h" bodystart="26" bodyend="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Data</header>
      <memberdef kind="function" id="classeye_1ac703d3830ee219d14c9fabf8237f6559" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Indices</declname>
            <defname>Indices</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto eye&lt; T, Dim, Rank &gt;::operator()</definition>
        <argsstring>(const Indices... indices) const</argsstring>
        <name>operator()</name>
        <qualifiedname>eye::operator()</qualifiedname>
        <param>
          <type>const Indices...</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the element at the specified position in the expression. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indicies</parametername>
</parameternamelist>
<parameterdescription>
<para>a list of indices specifying the position in the tensor expression. Indices must be unsigned integers, the number of indices must be equal to the rank of the expression. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/identity_tensor_bones.h" line="41" column="27" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/identity_tensor_meat.h" bodystart="40" bodyend="42"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Dimension and rank</header>
      <memberdef kind="function" id="classeye_1a0af349537ea89af2a1a530df3807b0a5" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto eye&lt; T, Dim, Rank &gt;::rank</definition>
        <argsstring>()</argsstring>
        <name>rank</name>
        <qualifiedname>eye::rank</qualifiedname>
        <briefdescription>
<para>Returns the rank. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/identity_tensor_bones.h" line="43" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/identity_tensor_meat.h" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classeye_1aa6778fe736e8628d8d208de1d57a5818" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto eye&lt; T, Dim, Rank &gt;::dimension</definition>
        <argsstring>()</argsstring>
        <name>dimension</name>
        <qualifiedname>eye::dimension</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the dimension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/identity_tensor_bones.h" line="45" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/identity_tensor_meat.h" bodystart="53" bodyend="55"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Private functions</header>
      <memberdef kind="function" id="classeye_1adeea6ac29cc7c7f7eb2152d3f623d2c9" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Indicies</declname>
            <defname>Indicies</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto eye&lt; T, Dim, Rank &gt;::value</definition>
        <argsstring>(size_type const i, size_type const j, Indicies const ... indices)</argsstring>
        <name>value</name>
        <qualifiedname>eye::value</qualifiedname>
        <param>
          <type>size_type const</type>
          <declname>i</declname>
        </param>
        <param>
          <type>size_type const</type>
          <declname>j</declname>
        </param>
        <param>
          <type>Indicies const ...</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
<para>Recursive function to determine the element at the specified position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indicies</parametername>
</parameternamelist>
<parameterdescription>
<para>a list of indices specifying the position in the tensor expression. Indices must be unsigned integers, the number of indices must be equal to the rank of the expression. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/identity_tensor_bones.h" line="49" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/identity_tensor_meat.h" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classeye_1acf1c69bf010868dc19c0fd9ead0591d7" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto eye&lt; T, Dim, Rank &gt;::value</definition>
        <argsstring>(size_type const i, size_type const j)</argsstring>
        <name>value</name>
        <qualifiedname>eye::value</qualifiedname>
        <param>
          <type>size_type const</type>
          <declname>i</declname>
        </param>
        <param>
          <type>size_type const</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Determines the element at the specified position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>First index specifying the position in the tensor expression. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>Second index specifying the position in the tensor expression. Indices must be unsigned integers, the number of indices must be equal to the rank of the expression. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/identity_tensor_bones.h" line="51" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/identity_tensor_meat.h" bodystart="87" bodyend="89"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classeye_1adbe4ba364dc10eeacc5d703e4cd49341" prot="public" static="no">
        <type>T</type>
        <definition>using eye&lt; T, Dim, Rank &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>eye::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/identity_tensor_bones.h" line="30" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/identity_tensor_bones.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeye_1a3bf719a5054dbe63dbf3dc2faa385e1b" prot="public" static="no">
        <type>std::size_t</type>
        <definition>using eye&lt; T, Dim, Rank &gt;::size_type =  std::size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>eye::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/identity_tensor_bones.h" line="31" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/identity_tensor_bones.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classeye_1a81896b57cec5a6bc97a83c9dfac7136d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>eye&lt; T, Dim, Rank &gt;::~eye</definition>
        <argsstring>()</argsstring>
        <name>~eye</name>
        <qualifiedname>eye::~eye</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/identity_tensor_bones.h" line="38" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/identity_tensor_bones.h" bodystart="38" bodyend="38"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>eye&lt; T, Dim, Rank &gt;</label>
        <link refid="classeye"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tensor_base&lt; eye&lt; T, Dim, Rank &gt; &gt;</label>
        <link refid="classtensor__base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>eye&lt; T, Dim, Rank &gt;</label>
        <link refid="classeye"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tensor_base&lt; eye&lt; T, Dim, Rank &gt; &gt;</label>
        <link refid="classtensor__base"/>
      </node>
    </collaborationgraph>
    <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/identity_tensor_bones.h" line="27" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/identity_tensor_bones.h" bodystart="28" bodyend="52"/>
    <listofallmembers>
      <member refid="classtensor__base_1ad3589a7250ab005ef2c3276cca2e525b" prot="protected" virt="non-virtual"><scope>eye</scope><name>_is_init</name></member>
      <member refid="classtensor__base_1ac3424b59bec904bf6eaec3d3969c44ee" prot="public" virt="non-virtual"><scope>eye</scope><name>convert</name></member>
      <member refid="classtensor__base_1a385cf61f63ebb826ceb8b454111268a8" prot="public" virt="non-virtual"><scope>eye</scope><name>convert</name></member>
      <member refid="classtensor__base_1ac3424b59bec904bf6eaec3d3969c44ee" prot="public" virt="non-virtual"><scope>eye</scope><name>convert</name></member>
      <member refid="classtensor__base_1a385cf61f63ebb826ceb8b454111268a8" prot="public" virt="non-virtual"><scope>eye</scope><name>convert</name></member>
      <member refid="classeye_1aa6778fe736e8628d8d208de1d57a5818" prot="public" virt="non-virtual"><scope>eye</scope><name>dimension</name></member>
      <member refid="classeye_1ae3d8da3cb23c01aadf9f17d6232c2336" prot="public" virt="non-virtual"><scope>eye</scope><name>eye</name></member>
      <member refid="classeye_1ac703d3830ee219d14c9fabf8237f6559" prot="public" virt="non-virtual"><scope>eye</scope><name>operator()</name></member>
      <member refid="classtensor__base_1ad81a18a37838d7fb4f0cc8285db684ae" prot="public" virt="non-virtual"><scope>eye</scope><name>operator-</name></member>
      <member refid="classtensor__base_1ad81a18a37838d7fb4f0cc8285db684ae" prot="public" virt="non-virtual"><scope>eye</scope><name>operator-</name></member>
      <member refid="classeye_1a0af349537ea89af2a1a530df3807b0a5" prot="public" virt="non-virtual"><scope>eye</scope><name>rank</name></member>
      <member refid="classtensor__base_1a869aa22037b95b0024b6e5731a61c90f" prot="public" virt="non-virtual"><scope>eye</scope><name>size</name></member>
      <member refid="classtensor__base_1a869aa22037b95b0024b6e5731a61c90f" prot="public" virt="non-virtual"><scope>eye</scope><name>size</name></member>
      <member refid="classeye_1a3bf719a5054dbe63dbf3dc2faa385e1b" prot="public" virt="non-virtual"><scope>eye</scope><name>size_type</name></member>
      <member refid="classtensor__base_1aa5c232cd2dc1e0126a906b4c25cfdcf5" prot="public" virt="non-virtual"><scope>eye</scope><name>tensor_base</name></member>
      <member refid="classtensor__base_1abf742a0335034d3c8d2574e9ea4d6f3d" prot="public" virt="non-virtual"><scope>eye</scope><name>tensor_base</name></member>
      <member refid="classtensor__base_1aa5c232cd2dc1e0126a906b4c25cfdcf5" prot="public" virt="non-virtual"><scope>eye</scope><name>tensor_base</name></member>
      <member refid="classtensor__base_1abf742a0335034d3c8d2574e9ea4d6f3d" prot="public" virt="non-virtual"><scope>eye</scope><name>tensor_base</name></member>
      <member refid="classeye_1adeea6ac29cc7c7f7eb2152d3f623d2c9" prot="private" virt="non-virtual"><scope>eye</scope><name>value</name></member>
      <member refid="classeye_1acf1c69bf010868dc19c0fd9ead0591d7" prot="private" virt="non-virtual"><scope>eye</scope><name>value</name></member>
      <member refid="classeye_1adbe4ba364dc10eeacc5d703e4cd49341" prot="public" virt="non-virtual"><scope>eye</scope><name>value_type</name></member>
      <member refid="classeye_1a81896b57cec5a6bc97a83c9dfac7136d" prot="public" virt="non-virtual"><scope>eye</scope><name>~eye</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
