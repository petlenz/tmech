<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="tensor_2utility_8h" kind="file" language="C++">
    <compoundname>utility.h</compoundname>
    <includedby refid="tensor__functions__implementation_8h" local="yes">/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/tensor_functions_implementation.h</includedby>
    <includedby refid="tmech_8h" local="yes">/home/peter/SynologyDrive/Drive/tmech/include/tmech/tmech.h</includedby>
    <innerclass refid="structis__tensor__type" prot="public">is_tensor_type</innerclass>
    <innerclass refid="structis__tensor__type_3_01tensor_3_01__T_00_01__Dim_00_01__Rank_01_4_01_4" prot="public">is_tensor_type&lt; tensor&lt; _T, _Dim, _Rank &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1abs__tensor__wrapper_3_01__T_01_4_01_4" prot="public">is_tensor_type&lt; detail::abs_tensor_wrapper&lt; _T &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1tensor__binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01__OP_01_4_01_4" prot="public">is_tensor_type&lt; detail::tensor_binary_expression_wrapper&lt; _LHS, _RHS, _OP &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1basis__change__wrapper_3_01__Tensor_00_01__Sequence_01_4_01_4" prot="public">is_tensor_type&lt; detail::basis_change_wrapper&lt; _Tensor, _Sequence &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1sign__S__wrapper_3_01__Father_01_4_01_4" prot="public">is_tensor_type&lt; detail::sign_S_wrapper&lt; _Father &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1sign__N__wrapper_3_01__Father_01_4_01_4" prot="public">is_tensor_type&lt; detail::sign_N_wrapper&lt; _Father &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01randn_3_01__T_00_01__Dim_00_01__Rank_01_4_01_4" prot="public">is_tensor_type&lt; randn&lt; _T, _Dim, _Rank &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1adjoint__wrapper_3_01__Tensor_01_4_01_4" prot="public">is_tensor_type&lt; detail::adjoint_wrapper&lt; _Tensor &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1inverse__wrapper_3_01__Tensor_00_01__Sequences_8_8_8_01_4_01_4" prot="public">is_tensor_type&lt; detail::inverse_wrapper&lt; _Tensor, _Sequences... &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1inner__product__wrapper_3_01__LHS_00_01__RHS_00_01__Sequencc1564959a2142575d63cb472f0ba1c40" prot="public">is_tensor_type&lt; detail::inner_product_wrapper&lt; _LHS, _RHS, _SequenceLHS, _SequenceRHS &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01levi__civita_3_01T_00_01Dim_01_4_01_4" prot="public">is_tensor_type&lt; levi_civita&lt; T, Dim &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1eval__tensor__wrapper_3_01__Tensor_01_4_01_4" prot="public">is_tensor_type&lt; detail::eval_tensor_wrapper&lt; _Tensor &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1outer__product__wrapper_3_01__LHS_00_01__RHS_00_01__Sequenc70cecb92a908988d1859e6fd449dce03" prot="public">is_tensor_type&lt; detail::outer_product_wrapper&lt; _LHS, _RHS, _SequenceLHS, _SequenceRHS &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1symmetric__part__wrapper_3_01__Tensor_01_4_01_4" prot="public">is_tensor_type&lt; detail::symmetric_part_wrapper&lt; _Tensor &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01eye_3_01T_00_01Dim_00_01Rank_01_4_01_4" prot="public">is_tensor_type&lt; eye&lt; T, Dim, Rank &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01zeros_3_01T_00_01Dim_00_01Rank_01_4_01_4" prot="public">is_tensor_type&lt; zeros&lt; T, Dim, Rank &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01adaptor_3_01T_00_01Dim_00_01Rank_00_01__Type_01_4_01_4" prot="public">is_tensor_type&lt; adaptor&lt; T, Dim, Rank, _Type &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1cofactor__wrapper_3_01__Tensor_01_4_01_4" prot="public">is_tensor_type&lt; detail::cofactor_wrapper&lt; _Tensor &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1cross__product__wrapper_3_01__LHS_00_01__RHS_01_4_01_4" prot="public">is_tensor_type&lt; detail::cross_product_wrapper&lt; _LHS, _RHS &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1skew__symmetric__part__wrapper_3_01__Tensor_01_4_01_4" prot="public">is_tensor_type&lt; detail::skew_symmetric_part_wrapper&lt; _Tensor &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1deviatoric__wrapper_3_01__Tensor_01_4_01_4" prot="public">is_tensor_type&lt; detail::deviatoric_wrapper&lt; _Tensor &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1volumetric__wrapper_3_01__Tensor_01_4_01_4" prot="public">is_tensor_type&lt; detail::volumetric_wrapper&lt; _Tensor &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1isotropic__tensor__function_3_01__Tensor_00_01__Function_01_4_01_4" prot="public">is_tensor_type&lt; detail::isotropic_tensor_function&lt; _Tensor, _Function &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1polar__decomposition__R__wrapper_3_01__Base_00_01__Tensor_01_4_01_4" prot="public">is_tensor_type&lt; detail::polar_decomposition_R_wrapper&lt; _Base, _Tensor &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1polar__decomposition__U__wrapper_3_01__Base_00_01__Tensor_01_4_01_4" prot="public">is_tensor_type&lt; detail::polar_decomposition_U_wrapper&lt; _Base, _Tensor &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1polar__decomposition__V__wrapper_3_01__Base_00_01__Tensor_01_4_01_4" prot="public">is_tensor_type&lt; detail::polar_decomposition_V_wrapper&lt; _Base, _Tensor &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1polar__decomposition__dR__wrapper_3_01__Base_00_01__Tensor_01_4_01_4" prot="public">is_tensor_type&lt; detail::polar_decomposition_dR_wrapper&lt; _Base, _Tensor &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1polar__decomposition__dU__wrapper_3_01__Base_00_01__Tensor_01_4_01_4" prot="public">is_tensor_type&lt; detail::polar_decomposition_dU_wrapper&lt; _Base, _Tensor &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1polar__decomposition__dV__wrapper_3_01__Base_00_01__Tensor_01_4_01_4" prot="public">is_tensor_type&lt; detail::polar_decomposition_dV_wrapper&lt; _Base, _Tensor &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1exp__tensor__wrapper_3_01__Tensor_01_4_01_4" prot="public">is_tensor_type&lt; detail::exp_tensor_wrapper&lt; _Tensor &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1exp__derivative__tensor__wrapper_3_01__Father_00_01__Tensor_01_4_01_4" prot="public">is_tensor_type&lt; detail::exp_derivative_tensor_wrapper&lt; _Father, _Tensor &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1positive__negative__decomposition__neg__wrapper_3_01__Base_00_01__Tensor_01_4_01_4" prot="public">is_tensor_type&lt; detail::positive_negative_decomposition_neg_wrapper&lt; _Base, _Tensor &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1positive__negative__decomposition__pos__wrapper_3_01__Base_00_01__Tensor_01_4_01_4" prot="public">is_tensor_type&lt; detail::positive_negative_decomposition_pos_wrapper&lt; _Base, _Tensor &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1positive__negative__decomposition__dneg__wrapper_3_01__Base_00_01__Tensor_01_4_01_4" prot="public">is_tensor_type&lt; detail::positive_negative_decomposition_dneg_wrapper&lt; _Base, _Tensor &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1positive__negative__decomposition__dpos__wrapper_3_01__Base_00_01__Tensor_01_4_01_4" prot="public">is_tensor_type&lt; detail::positive_negative_decomposition_dpos_wrapper&lt; _Base, _Tensor &gt; &gt;</innerclass>
    <innerclass refid="structis__tensor__type_3_01detail_1_1negative__tensor__wrapper_3_01__Tensor_01_4_01_4" prot="public">is_tensor_type&lt; detail::negative_tensor_wrapper&lt; _Tensor &gt; &gt;</innerclass>
    <innerclass refid="structsequence" prot="public">sequence</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__array__type_3_01T_00_01Size_00_01true_01_4" prot="public">detail::get_tensor_array_type&lt; T, Size, true &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__array__type_3_01T_00_01Size_00_01false_01_4" prot="public">detail::get_tensor_array_type&lt; T, Size, false &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__complex__entry__type" prot="public">detail::get_complex_entry_type</innerclass>
    <innerclass refid="structdetail_1_1get__complex__entry__type_3_01std_1_1complex_3_01T_01_4_01_4" prot="public">detail::get_complex_entry_type&lt; std::complex&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__size" prot="public">detail::get_tensor_size</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__size_3_01DIM_00_01RANK_00_01RANK_01_4" prot="public">detail::get_tensor_size&lt; DIM, RANK, RANK &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__rank__result" prot="public">detail::get_rank_result</innerclass>
    <innerclass refid="structdetail_1_1get__rank__result_3_01Function_00_01Direction_00_01true_01_4" prot="public">detail::get_rank_result&lt; Function, Direction, true &gt;</innerclass>
    <innerclass refid="structdetail_1_1seq__gen_3_01Start_00_01End_00_01Ns_8_8_8_01_4" prot="public">detail::seq_gen&lt; Start, End, Ns... &gt;</innerclass>
    <innerclass refid="structdetail_1_1seq__gen_3_01Start_00_01Start_00_01Ns_8_8_8_01_4" prot="public">detail::seq_gen&lt; Start, Start, Ns... &gt;</innerclass>
    <innerclass refid="structdetail_1_1seq__gen__transpose_3_01Start_00_01End_00_01Ns_8_8_8_01_4" prot="public">detail::seq_gen_transpose&lt; Start, End, Ns... &gt;</innerclass>
    <innerclass refid="structdetail_1_1seq__gen__transpose_3_010_00_011_00_01Ns_8_8_8_01_4" prot="public">detail::seq_gen_transpose&lt; 0, 1, Ns... &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__sequence__detail" prot="public">detail::get_sequence_detail</innerclass>
    <innerclass refid="structdetail_1_1get__sequence__detail_3_01End_00_01End_01_4" prot="public">detail::get_sequence_detail&lt; End, End &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__sequence__iter__start__detail" prot="public">detail::get_sequence_iter_start_detail</innerclass>
    <innerclass refid="structdetail_1_1get__sequence__iter__start__detail_3_01Start_00_01Start_00_01End_01_4" prot="public">detail::get_sequence_iter_start_detail&lt; Start, Start, End &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__array__size" prot="public">detail::get_tensor_array_size</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__array__size_3_010_00_01Last_01_4" prot="public">detail::get_tensor_array_size&lt; 0, Last &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__index" prot="public">detail::get_tensor_index</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__index_3_01Dim_00_01Index_00_01Index_01_4" prot="public">detail::get_tensor_index&lt; Dim, Index, Index &gt;</innerclass>
    <innerclass refid="structdetail_1_1get__tensor__array__index" prot="public">detail::get_tensor_array_index</innerclass>
    <innerclass refid="structdetail_1_1counter__index__sequence__h" prot="public">detail::counter_index_sequence_h</innerclass>
    <innerclass refid="structdetail_1_1counter__index__sequence__h_3_01Counter_00_01sequence_3_01First_00_01Args_8_8_8_01_4_00_01ValueToCheck_01_4" prot="public">detail::counter_index_sequence_h&lt; Counter, sequence&lt; First, Args... &gt;, ValueToCheck &gt;</innerclass>
    <innerclass refid="structdetail_1_1counter__index__sequence__h_3_01Counter_00_01sequence_3_01ValueToCheck_00_01Args035fefc13ce96cccc896f17fe1bc64cc" prot="public">detail::counter_index_sequence_h&lt; Counter, sequence&lt; ValueToCheck, Args... &gt;, ValueToCheck &gt;</innerclass>
    <innerclass refid="structdetail_1_1counter__index__sequence" prot="public">detail::counter_index_sequence</innerclass>
    <innerclass refid="structdetail_1_1find__in__sequence__h" prot="public">detail::find_in_sequence_h</innerclass>
    <innerclass refid="structdetail_1_1find__in__sequence__h_3_01Result_00_01sequence_3_01First_00_01Args_8_8_8_01_4_00_01ValueToCheck_01_4" prot="public">detail::find_in_sequence_h&lt; Result, sequence&lt; First, Args... &gt;, ValueToCheck &gt;</innerclass>
    <innerclass refid="structdetail_1_1find__in__sequence__h_3_01Result_00_01sequence_3_01ValueToCheck_00_01Args_8_8_8_01_4_00_01ValueToCheck_01_4" prot="public">detail::find_in_sequence_h&lt; Result, sequence&lt; ValueToCheck, Args... &gt;, ValueToCheck &gt;</innerclass>
    <innerclass refid="structdetail_1_1find__in__sequence_3_01sequence_3_01First_00_01Args_8_8_8_01_4_00_01ValueToCheck_01_4" prot="public">detail::find_in_sequence&lt; sequence&lt; First, Args... &gt;, ValueToCheck &gt;</innerclass>
    <innerclass refid="structdetail_1_1find__in__sequence_3_01sequence_3_01ValueToCheck_00_01Args_8_8_8_01_4_00_01ValueToCheck_01_4" prot="public">detail::find_in_sequence&lt; sequence&lt; ValueToCheck, Args... &gt;, ValueToCheck &gt;</innerclass>
    <innerclass refid="structdetail_1_1check__duplicated__value__in__sequence" prot="public">detail::check_duplicated_value_in_sequence</innerclass>
    <innerclass refid="structdetail_1_1check__duplicated__in__sequence__h" prot="public">detail::check_duplicated_in_sequence_h</innerclass>
    <innerclass refid="structdetail_1_1check__duplicated__in__sequence__h_3_01false_00_01sequence_3_01First_00_01ArgsIn6eec65dafa325949056ae9ff75eff1f5" prot="public">detail::check_duplicated_in_sequence_h&lt; false, sequence&lt; First, ArgsInput... &gt;, Sequence &gt;</innerclass>
    <innerclass refid="structdetail_1_1check__duplicated__in__sequence_3_01sequence_3_01First_00_01ArgsInput_8_8_8_01_4_01_4" prot="public">detail::check_duplicated_in_sequence&lt; sequence&lt; First, ArgsInput... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1make__outer__sequence__find_3_01Index_00_01First_00_01ArgsInner_8_8_8_01_4" prot="public">detail::make_outer_sequence_find&lt; Index, First, ArgsInner... &gt;</innerclass>
    <innerclass refid="structdetail_1_1make__outer__sequence__find_3_01Index_00_01Index_00_01ArgsInner_8_8_8_01_4" prot="public">detail::make_outer_sequence_find&lt; Index, Index, ArgsInner... &gt;</innerclass>
    <innerclass refid="structdetail_1_1make__outer__sequence__find_3_01Index_00_01Index_01_4" prot="public">detail::make_outer_sequence_find&lt; Index, Index &gt;</innerclass>
    <innerclass refid="structdetail_1_1make__outer__sequence__find_3_01Index_00_01Last_01_4" prot="public">detail::make_outer_sequence_find&lt; Index, Last &gt;</innerclass>
    <innerclass refid="structdetail_1_1make__outer__sequence_3_01false_00_01Size_00_01Index_00_01sequence_3_01ArgsInner2ea34c33ed31cf71d4a1608b01b4635c" prot="public">detail::make_outer_sequence&lt; false, Size, Index, sequence&lt; ArgsInner... &gt;, ArgsOuter... &gt;</innerclass>
    <innerclass refid="structdetail_1_1make__outer__sequence_3_01true_00_01Size_00_01Index_00_01sequence_3_01ArgsInner_d117f2fb4f95bd45eb02f04ea59d7775" prot="public">detail::make_outer_sequence&lt; true, Size, Index, sequence&lt; ArgsInner... &gt;, ArgsOuter... &gt;</innerclass>
    <innerclass refid="structdetail_1_1make__outer__sequence_3_01false_00_01Size_00_01Size_00_01sequence_3_01ArgsInner_bdcb049414d9adaec1b7e15542689498" prot="public">detail::make_outer_sequence&lt; false, Size, Size, sequence&lt; ArgsInner... &gt;, ArgsOuter... &gt;</innerclass>
    <innerclass refid="structdetail_1_1make__outer__sequence__test_3_01Size_00_01Index_00_01sequence_3_01ArgsInner_8_8_8_01_4_01_4" prot="public">detail::make_outer_sequence_test&lt; Size, Index, sequence&lt; ArgsInner... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1set__difference__sequence__h" prot="public">detail::set_difference_sequence_h</innerclass>
    <innerclass refid="structdetail_1_1set__difference__sequence__h_3_01sequence_3_01Result_8_8_8_01_4_00_01sequence_3_123cabd2395768bbfdd15260d73ce180" prot="public">detail::set_difference_sequence_h&lt; sequence&lt; Result... &gt;, sequence&lt; FirstInput1, ArgsInput1... &gt;, sequence&lt; FirstInput2, ArgsInput2... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1set__difference__sequence__h_3_01sequence_3_01Result_8_8_8_01_4_00_01sequence_3_3f4ababf8dfbd23e389b03a7806cbf86" prot="public">detail::set_difference_sequence_h&lt; sequence&lt; Result... &gt;, sequence&lt; FirstInput, ArgsInput1... &gt;, sequence&lt; FirstInput, ArgsInput2... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1set__difference__sequence__h_3_01sequence_3_01Result_8_8_8_01_4_00_01sequence_3_bf2e7243518eef2d20a6d321cfd0324f" prot="public">detail::set_difference_sequence_h&lt; sequence&lt; Result... &gt;, sequence&lt; ArgsInput1... &gt;, sequence&lt;&gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1set__difference__sequence" prot="public">detail::set_difference_sequence</innerclass>
    <innerclass refid="structdetail_1_1change__value__at__position__h" prot="public">detail::change_value_at_position_h</innerclass>
    <innerclass refid="structdetail_1_1change__value__at__position__h_3_01sequence_3_01Result_8_8_8_01_4_00_01sequence_06530e380916ee95c7995f9d85128daf" prot="public">detail::change_value_at_position_h&lt; sequence&lt; Result... &gt;, sequence&lt; First, Args... &gt;, IDX, Positions, Value &gt;</innerclass>
    <innerclass refid="structdetail_1_1change__value__at__position__h_3_01sequence_3_01Result_8_8_8_01_4_00_01sequence_fabd6cf233db036c355dfd369207251b" prot="public">detail::change_value_at_position_h&lt; sequence&lt; Result... &gt;, sequence&lt; First, Args... &gt;, Positions, Positions, Value &gt;</innerclass>
    <innerclass refid="structdetail_1_1change__value__at__position" prot="public">detail::change_value_at_position</innerclass>
    <innerclass refid="structdetail_1_1change__values__at__positions" prot="public">detail::change_values_at_positions</innerclass>
    <innerclass refid="structdetail_1_1change__values__at__positions_3_01Input_00_01sequence_3_01FirstPos_00_01Position6064f1333584cacc2eb88a104b451125" prot="public">detail::change_values_at_positions&lt; Input, sequence&lt; FirstPos, Position... &gt;, sequence&lt; FirstValue, Value... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1add__value__sequence__h" prot="public">detail::add_value_sequence_h</innerclass>
    <innerclass refid="structdetail_1_1add__value__sequence__h_3_01sequence_3_01ArgsResult_8_8_8_01_4_00_01sequence_3_0066720045c9d3e0e07659529368fb2ec" prot="public">detail::add_value_sequence_h&lt; sequence&lt; ArgsResult... &gt;, sequence&lt; FirstInput, ArgsInput... &gt;, Value &gt;</innerclass>
    <innerclass refid="structdetail_1_1add__value__sequence_3_01sequence_3_01Args_8_8_8_01_4_00_01Value_01_4" prot="public">detail::add_value_sequence&lt; sequence&lt; Args... &gt;, Value &gt;</innerclass>
    <innerclass refid="structdetail_1_1min__value__squence__h" prot="public">detail::min_value_squence_h</innerclass>
    <innerclass refid="structdetail_1_1min__value__squence__h_3_01sequence_3_01ArgsResult_8_8_8_01_4_00_01sequence_3_01a668e9c32054fcf0022c007284d162e9" prot="public">detail::min_value_squence_h&lt; sequence&lt; ArgsResult... &gt;, sequence&lt; FirstInput, ArgsInput... &gt;, Value &gt;</innerclass>
    <innerclass refid="structdetail_1_1min__value__squence_3_01sequence_3_01Args_8_8_8_01_4_00_01Value_01_4" prot="public">detail::min_value_squence&lt; sequence&lt; Args... &gt;, Value &gt;</innerclass>
    <innerclass refid="structdetail_1_1swape__element__squence__h" prot="public">detail::swape_element_squence_h</innerclass>
    <innerclass refid="structdetail_1_1swape__element__squence__h_3_01sequence_3_01ArgsResult_8_8_8_01_4_00_01sequence_1892c3f1ed054b3032c87ede7a35a75e" prot="public">detail::swape_element_squence_h&lt; sequence&lt; ArgsResult... &gt;, sequence&lt; FirstInput, ArgsInput... &gt;, Arg1, Arg2 &gt;</innerclass>
    <innerclass refid="structdetail_1_1swape__element__squence__h_3_01sequence_3_01ArgsResult_8_8_8_01_4_00_01sequence_980a8501759efc50ebab7bd6d80f808c" prot="public">detail::swape_element_squence_h&lt; sequence&lt; ArgsResult... &gt;, sequence&lt; FirstInput, ArgsInput... &gt;, FirstInput, Arg2 &gt;</innerclass>
    <innerclass refid="structdetail_1_1swape__element__squence__h_3_01sequence_3_01ArgsResult_8_8_8_01_4_00_01sequence_ccc5e5d954b2acf4ebb78d7b71521a65" prot="public">detail::swape_element_squence_h&lt; sequence&lt; ArgsResult... &gt;, sequence&lt; FirstInput, ArgsInput... &gt;, FirstInput, FirstInput &gt;</innerclass>
    <innerclass refid="structdetail_1_1swape__element__squence_3_01sequence_3_01ArgsInput_8_8_8_01_4_00_01Arg1_00_01Arg2_01_4" prot="public">detail::swape_element_squence&lt; sequence&lt; ArgsInput... &gt;, Arg1, Arg2 &gt;</innerclass>
    <innerclass refid="structdetail_1_1swape__elements__squence__h" prot="public">detail::swape_elements_squence_h</innerclass>
    <innerclass refid="structdetail_1_1swape__elements__squence__h_3_01sequence_3_4_00_01sequence_3_01ArgsInput_8_8_8_0e3e8498394d5dfd0cdac83c453ce2f75" prot="public">detail::swape_elements_squence_h&lt; sequence&lt;&gt;, sequence&lt; ArgsInput... &gt;, sequence&lt; FirstInput1, ArgsInput1... &gt;, sequence&lt; FirstInput2, ArgsInput2... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1swape__elements__squence__h_3_01sequence_3_01Result_8_8_8_01_4_00_01sequence_3_0174ada51eef7a735014f17985318ddc6" prot="public">detail::swape_elements_squence_h&lt; sequence&lt; Result... &gt;, sequence&lt; ArgsInput... &gt;, sequence&lt; FirstInput1, ArgsInput1... &gt;, sequence&lt; FirstInput2, ArgsInput2... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1swape__elements__squence__h_3_01sequence_3_4_00_01sequence_3_01ArgsInput_8_8_8_00e942f40200abba6e4798927bab66f53" prot="public">detail::swape_elements_squence_h&lt; sequence&lt;&gt;, sequence&lt; ArgsInput... &gt;, sequence&lt;&gt;, sequence&lt;&gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1swape__elements__squence_3_01sequence_3_01Input_8_8_8_01_4_00_01sequence_3_01Inp9bc95a633ddcad1f2559e77085e34391" prot="public">detail::swape_elements_squence&lt; sequence&lt; Input... &gt;, sequence&lt; Input1... &gt;, sequence&lt; Input2... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1reverse__sequence__h" prot="public">detail::reverse_sequence_h</innerclass>
    <innerclass refid="structdetail_1_1reverse__sequence__h_3_01void_00_01sequence_3_01First_00_01Args_8_8_8_01_4_01_4" prot="public">detail::reverse_sequence_h&lt; void, sequence&lt; First, Args... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1reverse__sequence__h_3_01sequence_3_01Numbers_8_8_8_01_4_00_01sequence_3_01First_00_01Args_8_8_8_01_4_01_4" prot="public">detail::reverse_sequence_h&lt; sequence&lt; Numbers... &gt;, sequence&lt; First, Args... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1reverse__sequence" prot="public">detail::reverse_sequence</innerclass>
    <innerclass refid="structdetail_1_1append__sequence__end__h_3_01sequence_3_01Numbers_8_8_8_01_4_00_01sequence_3_4_01_4" prot="public">detail::append_sequence_end_h&lt; sequence&lt; Numbers... &gt;, sequence&lt;&gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1append__sequence__end__h_3_01sequence_3_01Numbers_8_8_8_01_4_00_01sequence_3_01First_00_01Args_8_8_8_01_4_01_4" prot="public">detail::append_sequence_end_h&lt; sequence&lt; Numbers... &gt;, sequence&lt; First, Args... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1append__sequence__end__h_3_01sequence_3_4_00_01sequence_3_01First_00_01Args_8_8_8_01_4_01_4" prot="public">detail::append_sequence_end_h&lt; sequence&lt;&gt;, sequence&lt; First, Args... &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1append__sequence__end" prot="public">detail::append_sequence_end</innerclass>
    <innerclass refid="structdetail_1_1bubble__sort__sequence__swap__h" prot="public">detail::bubble_sort_sequence_swap_h</innerclass>
    <innerclass refid="structdetail_1_1bubble__sort__sequence__swap__h_3_01__First_00_01__Second_00_01false_01_4" prot="public">detail::bubble_sort_sequence_swap_h&lt; _First, _Second, false &gt;</innerclass>
    <innernamespace refid="namespacedetail">detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2022<sp/>Peter<sp/>Lenz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UTILITY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UTILITY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="19" refid="structis__tensor__type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::false_type;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_Dim,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_Rank&gt;</highlight></codeline>
<codeline lineno="26" refid="structis__tensor__type_3_01tensor_3_01__T_00_01__Dim_00_01__Rank_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;<ref refid="classtensor" kindref="compound">tensor</ref>&lt;_T,<sp/>_Dim,<sp/>_Rank&gt;&gt;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T&gt;</highlight></codeline>
<codeline lineno="33" refid="structis__tensor__type_3_01detail_1_1abs__tensor__wrapper_3_01__T_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::abs_tensor_wrapper&lt;_T&gt;&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_OP&gt;</highlight></codeline>
<codeline lineno="40" refid="structis__tensor__type_3_01detail_1_1tensor__binary__expression__wrapper_3_01__LHS_00_01__RHS_00_01__OP_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::tensor_binary_expression_wrapper&lt;_LHS,<sp/>_RHS,<sp/>_OP&gt;&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Sequence&gt;</highlight></codeline>
<codeline lineno="47" refid="structis__tensor__type_3_01detail_1_1basis__change__wrapper_3_01__Tensor_00_01__Sequence_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::basis_change_wrapper&lt;_Tensor,<sp/>_Sequence&gt;&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Father&gt;</highlight></codeline>
<codeline lineno="54" refid="structis__tensor__type_3_01detail_1_1sign__S__wrapper_3_01__Father_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::sign_S_wrapper&lt;_Father&gt;&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Father&gt;</highlight></codeline>
<codeline lineno="61" refid="structis__tensor__type_3_01detail_1_1sign__N__wrapper_3_01__Father_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::sign_N_wrapper&lt;_Father&gt;&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_Dim,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_Rank&gt;</highlight></codeline>
<codeline lineno="68" refid="structis__tensor__type_3_01randn_3_01__T_00_01__Dim_00_01__Rank_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;<ref refid="classrandn" kindref="compound">randn</ref>&lt;_T,<sp/>_Dim,<sp/>_Rank&gt;&gt;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor&gt;</highlight></codeline>
<codeline lineno="75" refid="structis__tensor__type_3_01detail_1_1adjoint__wrapper_3_01__Tensor_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::adjoint_wrapper&lt;_Tensor&gt;&gt;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>..._Sequences&gt;</highlight></codeline>
<codeline lineno="82" refid="structis__tensor__type_3_01detail_1_1inverse__wrapper_3_01__Tensor_00_01__Sequences_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::inverse_wrapper&lt;_Tensor,<sp/>_Sequences...&gt;&gt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_SequenceLHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_SequenceRHS&gt;</highlight></codeline>
<codeline lineno="89" refid="structis__tensor__type_3_01detail_1_1inner__product__wrapper_3_01__LHS_00_01__RHS_00_01__Sequencc1564959a2142575d63cb472f0ba1c40" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::inner_product_wrapper&lt;_LHS,<sp/>_RHS,<sp/>_SequenceLHS,<sp/>_SequenceRHS&gt;&gt;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Dim&gt;</highlight></codeline>
<codeline lineno="96" refid="structis__tensor__type_3_01levi__civita_3_01T_00_01Dim_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;<ref refid="classlevi__civita" kindref="compound">levi_civita</ref>&lt;T,<sp/>Dim&gt;&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor&gt;</highlight></codeline>
<codeline lineno="103" refid="structis__tensor__type_3_01detail_1_1eval__tensor__wrapper_3_01__Tensor_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::eval_tensor_wrapper&lt;_Tensor&gt;&gt;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_SequenceLHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_SequenceRHS&gt;</highlight></codeline>
<codeline lineno="110" refid="structis__tensor__type_3_01detail_1_1outer__product__wrapper_3_01__LHS_00_01__RHS_00_01__Sequenc70cecb92a908988d1859e6fd449dce03" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::outer_product_wrapper&lt;_LHS,<sp/>_RHS,<sp/>_SequenceLHS,<sp/>_SequenceRHS&gt;&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor&gt;</highlight></codeline>
<codeline lineno="117" refid="structis__tensor__type_3_01detail_1_1symmetric__part__wrapper_3_01__Tensor_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::symmetric_part_wrapper&lt;_Tensor&gt;&gt;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Dim,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Rank&gt;</highlight></codeline>
<codeline lineno="124" refid="structis__tensor__type_3_01eye_3_01T_00_01Dim_00_01Rank_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;<ref refid="classeye" kindref="compound">eye</ref>&lt;T,<sp/>Dim,<sp/>Rank&gt;&gt;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Dim,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Rank&gt;</highlight></codeline>
<codeline lineno="131" refid="structis__tensor__type_3_01zeros_3_01T_00_01Dim_00_01Rank_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;<ref refid="classzeros" kindref="compound">zeros</ref>&lt;T,<sp/>Dim,<sp/>Rank&gt;&gt;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Dim,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Rank,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Type&gt;</highlight></codeline>
<codeline lineno="138" refid="structis__tensor__type_3_01adaptor_3_01T_00_01Dim_00_01Rank_00_01__Type_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;<ref refid="classadaptor" kindref="compound">adaptor</ref>&lt;T,<sp/>Dim,<sp/>Rank,<sp/>_Type&gt;&gt;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">};</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor&gt;</highlight></codeline>
<codeline lineno="145" refid="structis__tensor__type_3_01detail_1_1cofactor__wrapper_3_01__Tensor_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::cofactor_wrapper&lt;_Tensor&gt;&gt;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_LHS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_RHS&gt;</highlight></codeline>
<codeline lineno="152" refid="structis__tensor__type_3_01detail_1_1cross__product__wrapper_3_01__LHS_00_01__RHS_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::cross_product_wrapper&lt;_LHS,<sp/>_RHS&gt;&gt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor&gt;</highlight></codeline>
<codeline lineno="159" refid="structis__tensor__type_3_01detail_1_1skew__symmetric__part__wrapper_3_01__Tensor_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::skew_symmetric_part_wrapper&lt;_Tensor&gt;&gt;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor&gt;</highlight></codeline>
<codeline lineno="166" refid="structis__tensor__type_3_01detail_1_1deviatoric__wrapper_3_01__Tensor_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::deviatoric_wrapper&lt;_Tensor&gt;&gt;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor&gt;</highlight></codeline>
<codeline lineno="173" refid="structis__tensor__type_3_01detail_1_1volumetric__wrapper_3_01__Tensor_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::volumetric_wrapper&lt;_Tensor&gt;&gt;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">};</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Function&gt;</highlight></codeline>
<codeline lineno="180" refid="structis__tensor__type_3_01detail_1_1isotropic__tensor__function_3_01__Tensor_00_01__Function_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::isotropic_tensor_function&lt;_Tensor,<sp/>_Function&gt;&gt;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">};</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Base,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor&gt;</highlight></codeline>
<codeline lineno="187" refid="structis__tensor__type_3_01detail_1_1polar__decomposition__R__wrapper_3_01__Base_00_01__Tensor_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::polar_decomposition_R_wrapper&lt;_Base,<sp/>_Tensor&gt;&gt;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Base,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor&gt;</highlight></codeline>
<codeline lineno="194" refid="structis__tensor__type_3_01detail_1_1polar__decomposition__U__wrapper_3_01__Base_00_01__Tensor_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::polar_decomposition_U_wrapper&lt;_Base,<sp/>_Tensor&gt;&gt;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Base,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor&gt;</highlight></codeline>
<codeline lineno="201" refid="structis__tensor__type_3_01detail_1_1polar__decomposition__V__wrapper_3_01__Base_00_01__Tensor_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::polar_decomposition_V_wrapper&lt;_Base,<sp/>_Tensor&gt;&gt;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">};</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Base,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor&gt;</highlight></codeline>
<codeline lineno="208" refid="structis__tensor__type_3_01detail_1_1polar__decomposition__dR__wrapper_3_01__Base_00_01__Tensor_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::polar_decomposition_dR_wrapper&lt;_Base,<sp/>_Tensor&gt;&gt;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal">};</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Base,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor&gt;</highlight></codeline>
<codeline lineno="215" refid="structis__tensor__type_3_01detail_1_1polar__decomposition__dU__wrapper_3_01__Base_00_01__Tensor_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::polar_decomposition_dU_wrapper&lt;_Base,<sp/>_Tensor&gt;&gt;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">};</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Base,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor&gt;</highlight></codeline>
<codeline lineno="222" refid="structis__tensor__type_3_01detail_1_1polar__decomposition__dV__wrapper_3_01__Base_00_01__Tensor_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::polar_decomposition_dV_wrapper&lt;_Base,<sp/>_Tensor&gt;&gt;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor&gt;</highlight></codeline>
<codeline lineno="229" refid="structis__tensor__type_3_01detail_1_1exp__tensor__wrapper_3_01__Tensor_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::exp_tensor_wrapper&lt;_Tensor&gt;&gt;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">};</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Father,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor&gt;</highlight></codeline>
<codeline lineno="236" refid="structis__tensor__type_3_01detail_1_1exp__derivative__tensor__wrapper_3_01__Father_00_01__Tensor_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::exp_derivative_tensor_wrapper&lt;_Father,<sp/>_Tensor&gt;&gt;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">};</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Base,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor&gt;</highlight></codeline>
<codeline lineno="243" refid="structis__tensor__type_3_01detail_1_1positive__negative__decomposition__neg__wrapper_3_01__Base_00_01__Tensor_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::positive_negative_decomposition_neg_wrapper&lt;_Base,<sp/>_Tensor&gt;&gt;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">};</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Base,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor&gt;</highlight></codeline>
<codeline lineno="250" refid="structis__tensor__type_3_01detail_1_1positive__negative__decomposition__pos__wrapper_3_01__Base_00_01__Tensor_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::positive_negative_decomposition_pos_wrapper&lt;_Base,<sp/>_Tensor&gt;&gt;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">};</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Base,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor&gt;</highlight></codeline>
<codeline lineno="257" refid="structis__tensor__type_3_01detail_1_1positive__negative__decomposition__dneg__wrapper_3_01__Base_00_01__Tensor_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::positive_negative_decomposition_dneg_wrapper&lt;_Base,<sp/>_Tensor&gt;&gt;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">};</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Base,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor&gt;</highlight></codeline>
<codeline lineno="264" refid="structis__tensor__type_3_01detail_1_1positive__negative__decomposition__dpos__wrapper_3_01__Base_00_01__Tensor_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::positive_negative_decomposition_dpos_wrapper&lt;_Base,<sp/>_Tensor&gt;&gt;</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal">};</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Tensor&gt;</highlight></codeline>
<codeline lineno="271" refid="structis__tensor__type_3_01detail_1_1negative__tensor__wrapper_3_01__Tensor_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__tensor__type" kindref="compound">is_tensor_type</ref>&lt;detail::negative_tensor_wrapper&lt;_Tensor&gt;&gt;</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal">};</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>type<sp/>which<sp/>holds<sp/>sequences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="structsequence" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...<sp/>_Idx&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsequence" kindref="compound">sequence</ref><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size()<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(_Idx);<sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal">};</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Size,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Enable&gt;</highlight></codeline>
<codeline lineno="287" refid="structdetail_1_1get__tensor__array__type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__tensor__array__type" kindref="compound">get_tensor_array_type</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Size&gt;</highlight></codeline>
<codeline lineno="290" refid="structdetail_1_1get__tensor__array__type_3_01T_00_01Size_00_01true_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__tensor__array__type" kindref="compound">get_tensor_array_type</ref>&lt;T,<sp/>Size,<sp/>true&gt;</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>data_type<sp/>=<sp/>std::array&lt;T,<sp/>Size&gt;;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">};</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Size&gt;</highlight></codeline>
<codeline lineno="296" refid="structdetail_1_1get__tensor__array__type_3_01T_00_01Size_00_01false_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__tensor__array__type" kindref="compound">get_tensor_array_type</ref>&lt;T,<sp/>Size,<sp/>false&gt;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>data_type<sp/>=<sp/>std::vector&lt;T&gt;;</highlight></codeline>
<codeline lineno="299"><highlight class="normal">};</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="303" refid="structdetail_1_1get__complex__entry__type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__complex__entry__type" kindref="compound">get_complex_entry_type</ref></highlight></codeline>
<codeline lineno="304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">};</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="309" refid="structdetail_1_1get__complex__entry__type_3_01std_1_1complex_3_01T_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__complex__entry__type" kindref="compound">get_complex_entry_type</ref>&lt;std::complex&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">};</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>DIM,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>RANK,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Start=1&gt;</highlight></codeline>
<codeline lineno="315" refid="structdetail_1_1get__tensor__size" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__tensor__size" kindref="compound">get_tensor_size</ref>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal"><sp/>(RANK<sp/>!=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;tensor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::size_t<sp/>size<sp/>=<sp/>DIM<sp/>*<sp/><ref refid="structdetail_1_1get__tensor__size" kindref="compound">get_tensor_size&lt;DIM, RANK, Start+1&gt;::size</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">};</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>DIM,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>RANK&gt;</highlight></codeline>
<codeline lineno="321" refid="structdetail_1_1get__tensor__size_3_01DIM_00_01RANK_00_01RANK_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__tensor__size" kindref="compound">get_tensor_size</ref>&lt;DIM,<sp/>RANK,<sp/>RANK&gt;{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::size_t<sp/>size<sp/>=<sp/>DIM;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">};</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type&gt;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_raw_data<sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(std::declval&lt;Type&gt;().raw_data());</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Arguments&gt;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_evaluate<sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(std::declval&lt;Type&gt;().evaluate(std::declval&lt;Arguments&gt;()...));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">//numerical<sp/>differentiation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Function,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Direction,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Fundamental&gt;</highlight></codeline>
<codeline lineno="335" refid="structdetail_1_1get__rank__result" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__rank__result" kindref="compound">get_rank_result</ref></highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::size_t<sp/>rank{Function::data_type::rank()<sp/>+<sp/>Direction::rank()};</highlight></codeline>
<codeline lineno="338"><highlight class="normal">};</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Function,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Direction&gt;</highlight></codeline>
<codeline lineno="341" refid="structdetail_1_1get__rank__result_3_01Function_00_01Direction_00_01true_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__rank__result" kindref="compound">get_rank_result</ref>&lt;Function,<sp/>Direction,<sp/>true&gt;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::size_t<sp/>rank{Direction::rank()};</highlight></codeline>
<codeline lineno="344"><highlight class="normal">};</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">//<sp/>First<sp/>define<sp/>the<sp/>template<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="structdetail_1_1seq__gen" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...<sp/>Ns&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1seq__gen" kindref="compound">seq_gen</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Recursion<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//<sp/>End<sp/>Start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>End,<sp/>std::size_t<sp/>Start,<sp/>std::size_t<sp/>...<sp/>Ns&gt;</highlight></codeline>
<codeline lineno="354" refid="structdetail_1_1seq__gen_3_01Start_00_01End_00_01Ns_8_8_8_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1seq__gen" kindref="compound">seq_gen</ref>&lt;Start,<sp/>End,<sp/>Ns...&gt;</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>front<sp/>most<sp/>number<sp/>of<sp/>sequence,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>it,<sp/>and<sp/>prepend<sp/>it<sp/>twice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1seq__gen" kindref="compound">seq_gen</ref>&lt;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Start,<sp/>End<sp/>-<sp/>1,<sp/>End<sp/>-<sp/>1,<sp/>Ns...&gt;::type;</highlight></codeline>
<codeline lineno="360"><highlight class="normal">};</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Recursion<sp/>abort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>Start,<sp/>std::size_t<sp/>...<sp/>Ns&gt;</highlight></codeline>
<codeline lineno="364" refid="structdetail_1_1seq__gen_3_01Start_00_01Start_00_01Ns_8_8_8_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1seq__gen" kindref="compound">seq_gen</ref>&lt;Start,<sp/>Start,<sp/>Ns...&gt;</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structsequence" kindref="compound">type</ref><sp/>=<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;Ns...&gt;;</highlight></codeline>
<codeline lineno="367"><highlight class="normal">};</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>End,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Start=0&gt;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>sequence_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1seq__gen" kindref="compound">seq_gen&lt;Start, End+1&gt;::type</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">//<sp/>First<sp/>define<sp/>the<sp/>template<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="structdetail_1_1seq__gen__transpose" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...<sp/>Ns&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1seq__gen__transpose" kindref="compound">seq_gen_transpose</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Recursion<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">//<sp/>End<sp/>Start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>End,<sp/>std::size_t<sp/>Start,<sp/>std::size_t<sp/>...<sp/>Ns&gt;</highlight></codeline>
<codeline lineno="379" refid="structdetail_1_1seq__gen__transpose_3_01Start_00_01End_00_01Ns_8_8_8_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1seq__gen__transpose" kindref="compound">seq_gen_transpose</ref>&lt;Start,<sp/>End,<sp/>Ns...&gt;</highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>front<sp/>most<sp/>number<sp/>of<sp/>sequence,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>it,<sp/>and<sp/>prepend<sp/>it<sp/>twice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1seq__gen__transpose" kindref="compound">seq_gen_transpose</ref>&lt;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Start,<sp/>End<sp/>-<sp/>2,<sp/>End,<sp/>End<sp/>-<sp/>1,<sp/>Ns...&gt;::type;</highlight></codeline>
<codeline lineno="385"><highlight class="normal">};</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...<sp/>Ns&gt;</highlight></codeline>
<codeline lineno="388" refid="structdetail_1_1seq__gen__transpose_3_010_00_011_00_01Ns_8_8_8_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1seq__gen__transpose" kindref="compound">seq_gen_transpose</ref>&lt;0,<sp/>1,<sp/>Ns...&gt;</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structsequence" kindref="compound">type</ref><sp/>=<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;1,0,<sp/>Ns...&gt;;</highlight></codeline>
<codeline lineno="391"><highlight class="normal">};</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>End,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Start=0&gt;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>sequence_transpose<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1seq__gen__transpose" kindref="compound">seq_gen_transpose</ref>&lt;Start,<sp/>End-1&gt;::type;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TUP,<sp/>std::size_t<sp/>...<sp/>INDICES&gt;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>tuple_call(F<sp/>&amp;<sp/>f,<sp/>TUP<sp/>&amp;&amp;<sp/>tup,<sp/><ref refid="structsequence" kindref="compound">sequence&lt;INDICES...&gt;</ref>){</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(std::get&lt;INDICES&gt;(tup)...);</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TUP,<sp/>std::size_t<sp/>...<sp/>INDICES&gt;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tuple_call(F<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>f,<sp/>TUP<sp/>&amp;&amp;<sp/>tup,<sp/><ref refid="structsequence" kindref="compound">sequence&lt;INDICES...&gt;</ref>){</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(std::get&lt;INDICES&gt;(tup)...);</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::size_t<sp/>...Numbers,<sp/>std::size_t<sp/>...Ns&gt;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>make_single_sequence_detail(<ref refid="structsequence" kindref="compound">sequence&lt;Ns...&gt;</ref>){</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;Numbers...,<sp/>Ns...&gt;();</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::size_t<sp/>...Number,<sp/>std::size_t<sp/>...Ns,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...Args&gt;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>make_single_sequence_detail(<ref refid="structsequence" kindref="compound">sequence&lt;Ns...&gt;</ref>,<sp/>Args...<sp/>args){</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_single_sequence_detail&lt;Number...,<sp/>Ns...&gt;(args...);</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...Args&gt;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>make_single_sequence(Args...<sp/>args){</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_single_sequence_detail(args...);</highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="comment">//template&lt;std::size_t<sp/>...NumbersResult&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment">//static<sp/>constexpr<sp/>inline<sp/>auto<sp/>make_single_boxtimes_sequence_detail(sequence&lt;NumbersResult...&gt;,<sp/>sequence&lt;&gt;<sp/>,<sp/>sequence&lt;&gt;){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>sequence&lt;NumbersResult...&gt;();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment">//template&lt;std::size_t<sp/>...NumbersResult,<sp/>std::size_t<sp/>FirstRHS,<sp/>std::size_t<sp/>LastRHS&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="comment">//static<sp/>constexpr<sp/>inline<sp/>auto<sp/>make_single_boxtimes_sequence_detail(sequence&lt;NumbersResult...&gt;,<sp/>sequence&lt;&gt;,<sp/>sequence&lt;FirstRHS,<sp/>LastRHS&gt;){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>sequence&lt;NumbersResult...,<sp/>FirstRHS,<sp/>LastRHS&gt;();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment">//template&lt;std::size_t<sp/>...NumbersResult,<sp/>std::size_t<sp/>FirstLHS,<sp/>std::size_t<sp/>LastLHS,<sp/>std::size_t<sp/>FirstRHS,<sp/>std::size_t<sp/>LastRHS,<sp/>std::size_t<sp/>...NumbersLHS,<sp/>std::size_t<sp/>...NumbersRHS&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="comment">//static<sp/>constexpr<sp/>inline<sp/>auto<sp/>make_single_boxtimes_sequence_detail(sequence&lt;NumbersResult...&gt;,<sp/>sequence&lt;FirstLHS,<sp/>LastLHS,<sp/>NumbersLHS...&gt;,<sp/>sequence&lt;FirstRHS,<sp/>LastRHS,<sp/>NumbersRHS...&gt;){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>make_single_boxtimes_sequence_detail(sequence&lt;NumbersResult...,<sp/>FirstLHS,<sp/>FirstRHS,<sp/>LastLHS,<sp/>LastRHS&gt;(),<sp/>sequence&lt;NumbersLHS...&gt;(),<sp/>sequence&lt;NumbersRHS...&gt;());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="comment">//template&lt;std::size_t<sp/>...NumbersLHS,<sp/>std::size_t<sp/>...NumbersRHS&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">//static<sp/>constexpr<sp/>inline<sp/>auto<sp/>make_single_boxtimes_sequence(sequence&lt;NumbersLHS...&gt;<sp/>,<sp/>sequence&lt;NumbersRHS...&gt;){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>make_single_boxtimes_sequence_detail(sequence&lt;&gt;(),<sp/>sequence&lt;NumbersLHS...&gt;(),<sp/>sequence&lt;NumbersRHS...&gt;());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Iter,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>End&gt;</highlight></codeline>
<codeline lineno="445" refid="structdetail_1_1get__sequence__detail" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__sequence__detail" kindref="compound">get_sequence_detail</ref></highlight></codeline>
<codeline lineno="446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::size_t<sp/>...NumbersResult,<sp/>std::size_t<sp/>Next,<sp/><sp/>std::size_t<sp/>...Numbers&gt;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>apply(<ref refid="structsequence" kindref="compound">sequence&lt;NumbersResult...&gt;</ref>,<sp/><ref refid="structsequence" kindref="compound">sequence&lt;Next, Numbers...&gt;</ref>){</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__sequence__detail" kindref="compound">get_sequence_detail&lt;Iter+1, End&gt;::apply</ref>(<ref refid="structsequence" kindref="compound">sequence&lt;NumbersResult..., Next&gt;</ref>(),<sp/><sp/><ref refid="structsequence" kindref="compound">sequence&lt;Numbers...&gt;</ref>());</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal">};</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>End&gt;</highlight></codeline>
<codeline lineno="455" refid="structdetail_1_1get__sequence__detail_3_01End_00_01End_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__sequence__detail" kindref="compound">get_sequence_detail</ref>&lt;End,<sp/>End&gt;</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::size_t<sp/>...NumbersResult,<sp/>std::size_t<sp/>...Numbers&gt;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>apply(<ref refid="structsequence" kindref="compound">sequence&lt;NumbersResult...&gt;</ref>,<sp/><ref refid="structsequence" kindref="compound">sequence&lt;Numbers...&gt;</ref>){</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;NumbersResult...&gt;();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal">};</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Iter,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Start,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>End&gt;</highlight></codeline>
<codeline lineno="464" refid="structdetail_1_1get__sequence__iter__start__detail" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__sequence__iter__start__detail" kindref="compound">get_sequence_iter_start_detail</ref></highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::size_t<sp/>Next,<sp/><sp/>std::size_t<sp/>...Numbers&gt;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>apply(<ref refid="structsequence" kindref="compound">sequence&lt;Next, Numbers...&gt;</ref>){</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__sequence__iter__start__detail" kindref="compound">get_sequence_iter_start_detail&lt;Iter+1, Start, End&gt;::apply</ref>(<ref refid="structsequence" kindref="compound">sequence&lt;Numbers...&gt;</ref>());</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal">};</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Start,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>End&gt;</highlight></codeline>
<codeline lineno="474" refid="structdetail_1_1get__sequence__iter__start__detail_3_01Start_00_01Start_00_01End_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__sequence__iter__start__detail" kindref="compound">get_sequence_iter_start_detail</ref>&lt;Start,<sp/>Start,<sp/>End&gt;</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::size_t<sp/>...Numbers&gt;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>apply(<ref refid="structsequence" kindref="compound">sequence&lt;Numbers...&gt;</ref>){</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__sequence__detail" kindref="compound">get_sequence_detail&lt;Start, End&gt;::apply</ref>(<ref refid="structsequence" kindref="compound">sequence&lt;&gt;</ref>(),<sp/><ref refid="structsequence" kindref="compound">sequence&lt;Numbers...&gt;</ref>());</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal">};</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::size_t<sp/>Start,<sp/>std::size_t<sp/>End,<sp/>std::size_t<sp/>...Numbers&gt;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>get_sequence(<ref refid="structsequence" kindref="compound">sequence&lt;Numbers...&gt;</ref>){</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__sequence__iter__start__detail" kindref="compound">get_sequence_iter_start_detail&lt;0, Start, End&gt;::apply</ref>(<ref refid="structsequence" kindref="compound">sequence&lt;Numbers...&gt;</ref>());</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::size_t...Numbers&gt;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_sequence(<ref refid="structsequence" kindref="compound">sequence&lt;Numbers...&gt;</ref>){</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>((std::cout&lt;&lt;Numbers&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">),...)&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_sequence(<ref refid="structsequence" kindref="compound">sequence&lt;&gt;</ref>){</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::size_t<sp/>Size,<sp/>std::size_t<sp/>First,<sp/>std::size_t<sp/>...Numbers&gt;</highlight></codeline>
<codeline lineno="499" refid="structdetail_1_1get__tensor__array__size" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__tensor__array__size" kindref="compound">get_tensor_array_size</ref></highlight></codeline>
<codeline lineno="500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::size_t<sp/>size(){</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>First<sp/>*<sp/><ref refid="structdetail_1_1get__tensor__array__size" kindref="compound">get_tensor_array_size&lt;Size-1, Numbers...&gt;::size</ref>();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal">};</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Last&gt;</highlight></codeline>
<codeline lineno="507" refid="structdetail_1_1get__tensor__array__size_3_010_00_01Last_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__tensor__array__size" kindref="compound">get_tensor_array_size</ref>&lt;0,<sp/>Last&gt;</highlight></codeline>
<codeline lineno="508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::size_t<sp/>size(){</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Last;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal">};</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Dim,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Size,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="515" refid="structdetail_1_1get__tensor__index" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__tensor__index" kindref="compound">get_tensor_index</ref></highlight></codeline>
<codeline lineno="516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>get(){</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Dim*<ref refid="structdetail_1_1get__tensor__index" kindref="compound">get_tensor_index&lt;Dim,Size,Index+1&gt;::get</ref>();</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal">};</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Dim,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="523" refid="structdetail_1_1get__tensor__index_3_01Dim_00_01Index_00_01Index_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__tensor__index" kindref="compound">get_tensor_index</ref>&lt;Dim,<sp/>Index,<sp/>Index&gt;</highlight></codeline>
<codeline lineno="524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>get(){</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Dim;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal">};</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Dim,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Size,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="531" refid="structdetail_1_1get__tensor__array__index" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1get__tensor__array__index" kindref="compound">get_tensor_array_index</ref>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...Indicies&gt;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::size_t<sp/>index(std::tuple&lt;Indicies...&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><sp/>indicies){</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal">(Index<sp/>&lt;<sp/>Size-1){</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;Index<sp/>&quot;&lt;&lt;get_tensor_index&lt;Dim,<sp/>Size-2,<sp/>Index&gt;::get()&lt;&lt;&quot;<sp/>&quot;&lt;&lt;Size-1&lt;&lt;&quot;<sp/>&quot;&lt;&lt;Index&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1get__tensor__index" kindref="compound">get_tensor_index&lt;Dim, Size-2, Index&gt;::get</ref>()*std::get&lt;Index&gt;(indicies)<sp/>+<sp/><ref refid="structdetail_1_1get__tensor__array__index" kindref="compound">get_tensor_array_index&lt;Dim, Size, Index+1&gt;::index</ref>(indicies);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//4-1=3<sp/>4-2=2<sp/>4-3=1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::get&lt;Index&gt;(indicies);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal">};</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Counter,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sequence,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="544" refid="structdetail_1_1counter__index__sequence__h" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1counter__index__sequence__h" kindref="compound">counter_index_sequence_h</ref></highlight></codeline>
<codeline lineno="545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>Counter;</highlight></codeline>
<codeline lineno="547"><highlight class="normal">};</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>Counter,<sp/>std::size_t<sp/>First,<sp/>std::size_t<sp/>...Args,<sp/>std::size_t<sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="550" refid="structdetail_1_1counter__index__sequence__h_3_01Counter_00_01sequence_3_01First_00_01Args_8_8_8_01_4_00_01ValueToCheck_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1counter__index__sequence__h" kindref="compound">counter_index_sequence_h</ref>&lt;Counter,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;First,<sp/>Args...&gt;,<sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1counter__index__sequence__h" kindref="compound">counter_index_sequence_h</ref>&lt;Counter,<sp/>sequence&lt;Args...&gt;,<sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="552"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>Counter,<sp/>std::size_t<sp/>...Args,<sp/>std::size_t<sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="555" refid="structdetail_1_1counter__index__sequence__h_3_01Counter_00_01sequence_3_01ValueToCheck_00_01Args035fefc13ce96cccc896f17fe1bc64cc" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1counter__index__sequence__h" kindref="compound">counter_index_sequence_h</ref>&lt;Counter,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;ValueToCheck,<sp/>Args...&gt;,<sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1counter__index__sequence__h" kindref="compound">counter_index_sequence_h</ref>&lt;Counter+1,<sp/>sequence&lt;Args...&gt;,<sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="557"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sequence,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="560" refid="structdetail_1_1counter__index__sequence" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1counter__index__sequence" kindref="compound">counter_index_sequence</ref></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1counter__index__sequence__h" kindref="compound">counter_index_sequence_h</ref>&lt;0,<sp/>Sequence,<sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="562"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sequence,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>counter_index_sequence_v<sp/>=<sp/><ref refid="structdetail_1_1counter__index__sequence" kindref="compound">counter_index_sequence&lt;Sequence, ValueToCheck&gt;::value</ref>;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sequence,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="570" refid="structdetail_1_1find__in__sequence__h" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1find__in__sequence__h" kindref="compound">find_in_sequence_h</ref></highlight></codeline>
<codeline lineno="571"><highlight class="normal">{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>Result;</highlight></codeline>
<codeline lineno="573"><highlight class="normal">};</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Result,<sp/>std::size_t<sp/>First,<sp/>std::size_t<sp/>...Args,<sp/>std::size_t<sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="576" refid="structdetail_1_1find__in__sequence__h_3_01Result_00_01sequence_3_01First_00_01Args_8_8_8_01_4_00_01ValueToCheck_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1find__in__sequence__h" kindref="compound">find_in_sequence_h</ref>&lt;Result,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;First,<sp/>Args...&gt;,<sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1find__in__sequence__h" kindref="compound">find_in_sequence_h</ref>&lt;false,<sp/>sequence&lt;Args...&gt;,<sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="578"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Result,<sp/>std::size_t<sp/>...Args,<sp/>std::size_t<sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="581" refid="structdetail_1_1find__in__sequence__h_3_01Result_00_01sequence_3_01ValueToCheck_00_01Args_8_8_8_01_4_00_01ValueToCheck_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1find__in__sequence__h" kindref="compound">find_in_sequence_h</ref>&lt;Result,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;ValueToCheck,<sp/>Args...&gt;,<sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1find__in__sequence__h" kindref="compound">find_in_sequence_h</ref>&lt;true,<sp/>sequence&lt;&gt;,<sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="583"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sequence,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="587" refid="structdetail_1_1find__in__sequence" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1find__in__sequence" kindref="compound">find_in_sequence</ref>;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>First,<sp/>std::size_t<sp/>...Args,<sp/>std::size_t<sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="590" refid="structdetail_1_1find__in__sequence_3_01sequence_3_01First_00_01Args_8_8_8_01_4_00_01ValueToCheck_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1find__in__sequence" kindref="compound">find_in_sequence</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;First,<sp/>Args...&gt;,<sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1find__in__sequence__h" kindref="compound">find_in_sequence_h</ref>&lt;false,<sp/>sequence&lt;Args...&gt;,<sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="592"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...Args,<sp/>std::size_t<sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="595" refid="structdetail_1_1find__in__sequence_3_01sequence_3_01ValueToCheck_00_01Args_8_8_8_01_4_00_01ValueToCheck_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1find__in__sequence" kindref="compound">find_in_sequence</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;ValueToCheck,<sp/>Args...&gt;,<sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1find__in__sequence__h" kindref="compound">find_in_sequence_h</ref>&lt;true,<sp/>sequence&lt;&gt;,<sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="597"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sequence,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="600" refid="structdetail_1_1check__duplicated__value__in__sequence" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1check__duplicated__value__in__sequence" kindref="compound">check_duplicated_value_in_sequence</ref>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>(counter_index_sequence_v&lt;Sequence,<sp/>ValueToCheck&gt;<sp/>&gt;<sp/>1);</highlight></codeline>
<codeline lineno="602"><highlight class="normal">};</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sequence,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ValueToCheck&gt;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>check_duplicated_value_in_sequence_v<sp/>=<sp/><ref refid="structdetail_1_1check__duplicated__value__in__sequence" kindref="compound">check_duplicated_value_in_sequence&lt;Sequence, ValueToCheck&gt;::value</ref>;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SequenceInput,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sequence&gt;</highlight></codeline>
<codeline lineno="611" refid="structdetail_1_1check__duplicated__in__sequence__h" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1check__duplicated__in__sequence__h" kindref="compound">check_duplicated_in_sequence_h</ref>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>Result;</highlight></codeline>
<codeline lineno="613"><highlight class="normal">};</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>First,<sp/>std::size_t<sp/>...ArgsInput,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sequence&gt;</highlight></codeline>
<codeline lineno="616" refid="structdetail_1_1check__duplicated__in__sequence__h_3_01false_00_01sequence_3_01First_00_01ArgsIn6eec65dafa325949056ae9ff75eff1f5" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1check__duplicated__in__sequence__h" kindref="compound">check_duplicated_in_sequence_h</ref>&lt;false,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;First,<sp/>ArgsInput...&gt;,<sp/>Sequence&gt;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1check__duplicated__in__sequence__h" kindref="compound">check_duplicated_in_sequence_h</ref>&lt;check_duplicated_value_in_sequence_v&lt;Sequence,<sp/>First&gt;,<sp/>sequence&lt;ArgsInput...&gt;,<sp/>Sequence&gt;</highlight></codeline>
<codeline lineno="618"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sequence&gt;</highlight></codeline>
<codeline lineno="622" refid="structdetail_1_1check__duplicated__in__sequence" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1check__duplicated__in__sequence" kindref="compound">check_duplicated_in_sequence</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>First,<sp/>std::size_t<sp/>...ArgsInput&gt;</highlight></codeline>
<codeline lineno="625" refid="structdetail_1_1check__duplicated__in__sequence_3_01sequence_3_01First_00_01ArgsInput_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1check__duplicated__in__sequence" kindref="compound">check_duplicated_in_sequence</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;First,<sp/>ArgsInput...&gt;&gt;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1check__duplicated__in__sequence__h" kindref="compound">check_duplicated_in_sequence_h</ref>&lt;check_duplicated_value_in_sequence_v&lt;sequence&lt;First,<sp/>ArgsInput...&gt;,<sp/>First&gt;,<sp/>sequence&lt;ArgsInput...&gt;,<sp/>sequence&lt;First,<sp/>ArgsInput...&gt;&gt;</highlight></codeline>
<codeline lineno="627"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sequence&gt;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>check_duplicated_in_sequence_v<sp/>=<sp/><ref refid="structdetail_1_1check__duplicated__in__sequence" kindref="compound">check_duplicated_in_sequence&lt;Sequence&gt;::value</ref>;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>Index,<sp/>std::size_t<sp/>...ArgsInner&gt;</highlight></codeline>
<codeline lineno="634" refid="structdetail_1_1make__outer__sequence__find" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1make__outer__sequence__find" kindref="compound">make_outer_sequence_find</ref>;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>Index,<sp/>std::size_t<sp/>First,<sp/>std::size_t<sp/>...ArgsInner&gt;</highlight></codeline>
<codeline lineno="637" refid="structdetail_1_1make__outer__sequence__find_3_01Index_00_01First_00_01ArgsInner_8_8_8_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1make__outer__sequence__find" kindref="compound">make_outer_sequence_find</ref>&lt;Index,<sp/>First,<sp/>ArgsInner...&gt;</highlight></codeline>
<codeline lineno="638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/><ref refid="structdetail_1_1make__outer__sequence__find" kindref="compound">make_outer_sequence_find</ref>&lt;Index,<sp/>ArgsInner...&gt;::value;</highlight></codeline>
<codeline lineno="640"><highlight class="normal">};</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="comment">//Index<sp/>is<sp/>inside<sp/>ArgsInner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>Index,<sp/>std::size_t<sp/>...ArgsInner&gt;</highlight></codeline>
<codeline lineno="644" refid="structdetail_1_1make__outer__sequence__find_3_01Index_00_01Index_00_01ArgsInner_8_8_8_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1make__outer__sequence__find" kindref="compound">make_outer_sequence_find</ref>&lt;Index,<sp/>Index,<sp/>ArgsInner...&gt;</highlight></codeline>
<codeline lineno="645"><highlight class="normal">{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="647"><highlight class="normal">};</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="650" refid="structdetail_1_1make__outer__sequence__find_3_01Index_00_01Index_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1make__outer__sequence__find" kindref="compound">make_outer_sequence_find</ref>&lt;Index,<sp/>Index&gt;</highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal">};</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="comment">//Index<sp/>is<sp/>not<sp/>inside<sp/>ArgsInner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Index,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Last&gt;</highlight></codeline>
<codeline lineno="658" refid="structdetail_1_1make__outer__sequence__find_3_01Index_00_01Last_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1make__outer__sequence__find" kindref="compound">make_outer_sequence_find</ref>&lt;Index,<sp/>Last&gt;</highlight></codeline>
<codeline lineno="659"><highlight class="normal">{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal">};</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Type,<sp/>std::size_t<sp/>Size,<sp/>std::size_t<sp/>Index,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Inner,<sp/>std::size_t<sp/>...ArgsOuter&gt;</highlight></codeline>
<codeline lineno="665" refid="structdetail_1_1make__outer__sequence" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1make__outer__sequence" kindref="compound">make_outer_sequence</ref>;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="comment">//Index<sp/>is<sp/>not<sp/>inside<sp/>ArgsInner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>Size,<sp/>std::size_t<sp/>Index,<sp/>std::size_t<sp/>...ArgsInner,<sp/>std::size_t<sp/>...ArgsOuter&gt;</highlight></codeline>
<codeline lineno="669" refid="structdetail_1_1make__outer__sequence_3_01false_00_01Size_00_01Index_00_01sequence_3_01ArgsInner2ea34c33ed31cf71d4a1608b01b4635c" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1make__outer__sequence" kindref="compound">make_outer_sequence</ref>&lt;false,<sp/>Size,<sp/>Index,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;ArgsInner...&gt;,<sp/>ArgsOuter...&gt;</highlight></codeline>
<codeline lineno="670"><highlight class="normal">{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1make__outer__sequence" kindref="compound">make_outer_sequence</ref>&lt;<ref refid="structdetail_1_1make__outer__sequence__find" kindref="compound">make_outer_sequence_find</ref>&lt;Index+1,<sp/>ArgsInner...&gt;::value,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>Size,<sp/>Index+1,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;ArgsInner...&gt;,<sp/>ArgsOuter...,<sp/>Index&gt;::type;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structsequence" kindref="compound">sequence_outer</ref><sp/>=<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;ArgsOuter...,<sp/>Index&gt;;</highlight></codeline>
<codeline lineno="675"><highlight class="normal">};</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="comment">//Index<sp/>is<sp/>inside<sp/>ArgsInner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>Size,<sp/>std::size_t<sp/>Index,<sp/>std::size_t<sp/>...ArgsInner,<sp/>std::size_t<sp/>...ArgsOuter&gt;</highlight></codeline>
<codeline lineno="679" refid="structdetail_1_1make__outer__sequence_3_01true_00_01Size_00_01Index_00_01sequence_3_01ArgsInner_d117f2fb4f95bd45eb02f04ea59d7775" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1make__outer__sequence" kindref="compound">make_outer_sequence</ref>&lt;true,<sp/>Size,<sp/>Index,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;ArgsInner...&gt;,<sp/>ArgsOuter...&gt;</highlight></codeline>
<codeline lineno="680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1make__outer__sequence" kindref="compound">make_outer_sequence</ref>&lt;<ref refid="structdetail_1_1make__outer__sequence__find" kindref="compound">make_outer_sequence_find</ref>&lt;Index+1,<sp/>ArgsInner...&gt;::value,</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>Size,<sp/>Index+1,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;ArgsInner...&gt;,<sp/>ArgsOuter...&gt;::type;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structsequence" kindref="compound">sequence_outer</ref><sp/>=<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;ArgsOuter...&gt;;</highlight></codeline>
<codeline lineno="685"><highlight class="normal">};</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="comment">//Index<sp/>is<sp/>not<sp/>inside<sp/>ArgsInner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>Size,<sp/>std::size_t<sp/>...ArgsInner,<sp/>std::size_t<sp/>...ArgsOuter&gt;</highlight></codeline>
<codeline lineno="689" refid="structdetail_1_1make__outer__sequence_3_01false_00_01Size_00_01Size_00_01sequence_3_01ArgsInner_bdcb049414d9adaec1b7e15542689498" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1make__outer__sequence" kindref="compound">make_outer_sequence</ref>&lt;false,<sp/>Size,<sp/>Size,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;ArgsInner...&gt;,<sp/>ArgsOuter...&gt;</highlight></codeline>
<codeline lineno="690"><highlight class="normal">{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1make__outer__sequence_3_01false_00_01Size_00_01Size_00_01sequence_3_01ArgsInner_bdcb049414d9adaec1b7e15542689498" kindref="compound">type</ref><sp/>=<sp/><ref refid="structdetail_1_1make__outer__sequence" kindref="compound">make_outer_sequence</ref>&lt;</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>Size,<sp/>Size,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;ArgsInner...&gt;,<sp/>ArgsOuter...&gt;;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structsequence" kindref="compound">sequence_outer</ref><sp/>=<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;ArgsOuter...&gt;;</highlight></codeline>
<codeline lineno="693"><highlight class="normal">};</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Size,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Index,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Inner&gt;</highlight></codeline>
<codeline lineno="697" refid="structdetail_1_1make__outer__sequence__test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1make__outer__sequence__test" kindref="compound">make_outer_sequence_test</ref>;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>Size,<sp/>std::size_t<sp/>Index,<sp/>std::size_t<sp/>...ArgsInner&gt;</highlight></codeline>
<codeline lineno="700" refid="structdetail_1_1make__outer__sequence__test_3_01Size_00_01Index_00_01sequence_3_01ArgsInner_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1make__outer__sequence__test" kindref="compound">make_outer_sequence_test</ref>&lt;Size,<sp/>Index,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;ArgsInner...&gt;&gt;</highlight></codeline>
<codeline lineno="701"><highlight class="normal">{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1make__outer__sequence" kindref="compound">make_outer_sequence</ref>&lt;<ref refid="structdetail_1_1make__outer__sequence__find" kindref="compound">make_outer_sequence_find</ref>&lt;Index,<sp/>ArgsInner...&gt;::value,</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>Size,<sp/>Index,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;ArgsInner...&gt;&gt;::type;</highlight></codeline>
<codeline lineno="704"><highlight class="normal">};</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Rank,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SequenceInner&gt;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>sequence_outer_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1make__outer__sequence__test" kindref="compound">make_outer_sequence_test&lt;Rank, 1, SequenceInner&gt;::type::sequence_outer</ref>;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input2&gt;</highlight></codeline>
<codeline lineno="712" refid="structdetail_1_1set__difference__sequence__h" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1set__difference__sequence__h" kindref="compound">set_difference_sequence_h</ref></highlight></codeline>
<codeline lineno="713"><highlight class="normal">{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>Result;</highlight></codeline>
<codeline lineno="715"><highlight class="normal">};</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...Result,<sp/>std::size_t<sp/>FirstInput1,<sp/>std::size_t<sp/>...ArgsInput1,<sp/>std::size_t<sp/>FirstInput2,<sp/>std::size_t<sp/>...ArgsInput2&gt;</highlight></codeline>
<codeline lineno="719" refid="structdetail_1_1set__difference__sequence__h_3_01sequence_3_01Result_8_8_8_01_4_00_01sequence_3_123cabd2395768bbfdd15260d73ce180" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1set__difference__sequence__h" kindref="compound">set_difference_sequence_h</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;Result...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;FirstInput1,<sp/>ArgsInput1...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;FirstInput2,<sp/>ArgsInput2...&gt;&gt;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1set__difference__sequence__h" kindref="compound">set_difference_sequence_h</ref>&lt;sequence&lt;Result...,<sp/>FirstInput1&gt;,<sp/>sequence&lt;ArgsInput1...&gt;,<sp/>sequence&lt;FirstInput2,<sp/>ArgsInput2...&gt;&gt;</highlight></codeline>
<codeline lineno="721"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...Result,<sp/>std::size_t<sp/>FirstInput,<sp/>std::size_t<sp/>...ArgsInput1,<sp/>std::size_t<sp/>...ArgsInput2&gt;</highlight></codeline>
<codeline lineno="724" refid="structdetail_1_1set__difference__sequence__h_3_01sequence_3_01Result_8_8_8_01_4_00_01sequence_3_3f4ababf8dfbd23e389b03a7806cbf86" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1set__difference__sequence__h" kindref="compound">set_difference_sequence_h</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;Result...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;FirstInput,<sp/>ArgsInput1...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;FirstInput,<sp/>ArgsInput2...&gt;&gt;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1set__difference__sequence__h" kindref="compound">set_difference_sequence_h</ref>&lt;sequence&lt;Result...&gt;,<sp/>sequence&lt;ArgsInput1...&gt;,<sp/>sequence&lt;ArgsInput2...&gt;&gt;</highlight></codeline>
<codeline lineno="726"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...Result,<sp/>std::size_t<sp/>...ArgsInput1&gt;</highlight></codeline>
<codeline lineno="729" refid="structdetail_1_1set__difference__sequence__h_3_01sequence_3_01Result_8_8_8_01_4_00_01sequence_3_bf2e7243518eef2d20a6d321cfd0324f" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1set__difference__sequence__h" kindref="compound">set_difference_sequence_h</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;Result...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;ArgsInput1...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;&gt;&gt;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1set__difference__sequence__h" kindref="compound">set_difference_sequence_h</ref>&lt;sequence&lt;Result...,<sp/>ArgsInput1...&gt;,<sp/>void,<sp/>void&gt;</highlight></codeline>
<codeline lineno="731"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input2&gt;</highlight></codeline>
<codeline lineno="734" refid="structdetail_1_1set__difference__sequence" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1set__difference__sequence" kindref="compound">set_difference_sequence</ref></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1set__difference__sequence__h" kindref="compound">set_difference_sequence_h</ref>&lt;sequence&lt;&gt;,<sp/>Input1,<sp/>Input2&gt;</highlight></codeline>
<codeline lineno="736"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input2&gt;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>set_difference_sequence_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structsequence" kindref="compound">set_difference_sequence&lt;Input1, Input2&gt;::type</ref>;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>IDX,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Position,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Value&gt;</highlight></codeline>
<codeline lineno="745" refid="structdetail_1_1change__value__at__position__h" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1change__value__at__position__h" kindref="compound">change_value_at_position_h</ref></highlight></codeline>
<codeline lineno="746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>Result;</highlight></codeline>
<codeline lineno="748"><highlight class="normal">};</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...Result,<sp/>std::size_t<sp/>First,<sp/>std::size_t<sp/>...Args,<sp/>std::size_t<sp/>IDX,<sp/>std::size_t<sp/>Positions,<sp/>std::size_t<sp/>Value&gt;</highlight></codeline>
<codeline lineno="751" refid="structdetail_1_1change__value__at__position__h_3_01sequence_3_01Result_8_8_8_01_4_00_01sequence_06530e380916ee95c7995f9d85128daf" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1change__value__at__position__h" kindref="compound">change_value_at_position_h</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;Result...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;First,<sp/>Args...&gt;,<sp/>IDX,<sp/>Positions,<sp/>Value&gt;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1change__value__at__position__h" kindref="compound">change_value_at_position_h</ref>&lt;sequence&lt;Result...,<sp/>First&gt;,<sp/>sequence&lt;Args...&gt;,<sp/>IDX+1,<sp/>Positions,<sp/>Value&gt;</highlight></codeline>
<codeline lineno="753"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...Result,<sp/>std::size_t<sp/>First,<sp/>std::size_t<sp/>...Args,<sp/>std::size_t<sp/>Positions,<sp/>std::size_t<sp/>Value&gt;</highlight></codeline>
<codeline lineno="756" refid="structdetail_1_1change__value__at__position__h_3_01sequence_3_01Result_8_8_8_01_4_00_01sequence_fabd6cf233db036c355dfd369207251b" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1change__value__at__position__h" kindref="compound">change_value_at_position_h</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;Result...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;First,<sp/>Args...&gt;,<sp/>Positions,<sp/>Positions,<sp/>Value&gt;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1change__value__at__position__h" kindref="compound">change_value_at_position_h</ref>&lt;sequence&lt;Result...,<sp/>Value,<sp/>Args...&gt;,<sp/>sequence&lt;&gt;,<sp/>Positions,<sp/>Positions,<sp/>Value&gt;</highlight></codeline>
<codeline lineno="758"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Position,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Value&gt;</highlight></codeline>
<codeline lineno="761" refid="structdetail_1_1change__value__at__position" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1change__value__at__position" kindref="compound">change_value_at_position</ref></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1change__value__at__position__h" kindref="compound">change_value_at_position_h</ref>&lt;sequence&lt;&gt;,<sp/>Input,<sp/>0,<sp/>Position,<sp/>Value&gt;</highlight></codeline>
<codeline lineno="763"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Position,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Value&gt;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>change_value_at_position_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structsequence" kindref="compound">change_value_at_position&lt;Input, Position, Value&gt;::type</ref>;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Position,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Value&gt;</highlight></codeline>
<codeline lineno="771" refid="structdetail_1_1change__values__at__positions" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1change__values__at__positions" kindref="compound">change_values_at_positions</ref></highlight></codeline>
<codeline lineno="772"><highlight class="normal">{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>Input;</highlight></codeline>
<codeline lineno="774"><highlight class="normal">};</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input,<sp/>std::size_t<sp/>FirstPos,<sp/>std::size_t<sp/>...Position,<sp/>std::size_t<sp/>FirstValue,<sp/>std::size_t<sp/>...Value&gt;</highlight></codeline>
<codeline lineno="777" refid="structdetail_1_1change__values__at__positions_3_01Input_00_01sequence_3_01FirstPos_00_01Position6064f1333584cacc2eb88a104b451125" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1change__values__at__positions" kindref="compound">change_values_at_positions</ref>&lt;Input,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;FirstPos,<sp/>Position...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;FirstValue,<sp/>Value...&gt;&gt;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1change__values__at__positions" kindref="compound">change_values_at_positions</ref>&lt;change_value_at_position_t&lt;Input,<sp/>FirstPos,<sp/>FirstValue&gt;,<sp/>sequence&lt;Position...&gt;,<sp/>sequence&lt;Value...&gt;&gt;</highlight></codeline>
<codeline lineno="779"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Position,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Value&gt;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>change_values_at_positions_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>change_values_at_positions&lt;Input,<sp/>Position,<sp/>Value&gt;::type;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Value&gt;</highlight></codeline>
<codeline lineno="786" refid="structdetail_1_1add__value__sequence__h" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1add__value__sequence__h" kindref="compound">add_value_sequence_h</ref></highlight></codeline>
<codeline lineno="787"><highlight class="normal">{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>Result;</highlight></codeline>
<codeline lineno="789"><highlight class="normal">};</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...ArgsResult,<sp/>std::size_t<sp/>FirstInput,<sp/>std::size_t<sp/>...ArgsInput,<sp/>std::size_t<sp/>Value&gt;</highlight></codeline>
<codeline lineno="792" refid="structdetail_1_1add__value__sequence__h_3_01sequence_3_01ArgsResult_8_8_8_01_4_00_01sequence_3_0066720045c9d3e0e07659529368fb2ec" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1add__value__sequence__h" kindref="compound">add_value_sequence_h</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;ArgsResult...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;FirstInput,<sp/>ArgsInput...&gt;,<sp/>Value&gt;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1add__value__sequence__h" kindref="compound">add_value_sequence_h</ref>&lt;sequence&lt;ArgsResult...,<sp/>FirstInput<sp/>+<sp/>Value&gt;,<sp/>sequence&lt;ArgsInput...&gt;,<sp/>Value&gt;</highlight></codeline>
<codeline lineno="794"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Value&gt;</highlight></codeline>
<codeline lineno="797" refid="structdetail_1_1add__value__sequence" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1add__value__sequence" kindref="compound">add_value_sequence</ref>;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...Args,<sp/>std::size_t<sp/>Value&gt;</highlight></codeline>
<codeline lineno="800" refid="structdetail_1_1add__value__sequence_3_01sequence_3_01Args_8_8_8_01_4_00_01Value_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1add__value__sequence" kindref="compound">add_value_sequence</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;Args...&gt;,<sp/>Value&gt;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1add__value__sequence__h" kindref="compound">add_value_sequence_h</ref>&lt;sequence&lt;&gt;,<sp/>sequence&lt;Args...&gt;,<sp/>Value&gt;</highlight></codeline>
<codeline lineno="802"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Value&gt;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>add_value_sequence_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1add__value__sequence" kindref="compound">add_value_sequence&lt;T, Value&gt;::type</ref>;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Value&gt;</highlight></codeline>
<codeline lineno="809" refid="structdetail_1_1min__value__squence__h" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1min__value__squence__h" kindref="compound">min_value_squence_h</ref></highlight></codeline>
<codeline lineno="810"><highlight class="normal">{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>Result;</highlight></codeline>
<codeline lineno="812"><highlight class="normal">};</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...ArgsResult,<sp/>std::size_t<sp/>FirstInput,<sp/>std::size_t<sp/>...ArgsInput,<sp/>std::size_t<sp/>Value&gt;</highlight></codeline>
<codeline lineno="815" refid="structdetail_1_1min__value__squence__h_3_01sequence_3_01ArgsResult_8_8_8_01_4_00_01sequence_3_01a668e9c32054fcf0022c007284d162e9" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1min__value__squence__h" kindref="compound">min_value_squence_h</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;ArgsResult...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;FirstInput,<sp/>ArgsInput...&gt;,<sp/>Value&gt;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1min__value__squence__h" kindref="compound">min_value_squence_h</ref>&lt;sequence&lt;ArgsResult...,<sp/>FirstInput<sp/>-<sp/>Value&gt;,<sp/>sequence&lt;ArgsInput...&gt;,<sp/>Value&gt;</highlight></codeline>
<codeline lineno="817"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Value&gt;</highlight></codeline>
<codeline lineno="821" refid="structdetail_1_1min__value__squence" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1min__value__squence" kindref="compound">min_value_squence</ref>;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...Args,<sp/>std::size_t<sp/>Value&gt;</highlight></codeline>
<codeline lineno="825" refid="structdetail_1_1min__value__squence_3_01sequence_3_01Args_8_8_8_01_4_00_01Value_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1min__value__squence" kindref="compound">min_value_squence</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;Args...&gt;,<sp/>Value&gt;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1min__value__squence__h" kindref="compound">min_value_squence_h</ref>&lt;sequence&lt;&gt;,<sp/>sequence&lt;Args...&gt;,<sp/>Value&gt;</highlight></codeline>
<codeline lineno="827"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Value&gt;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>min_value_squence_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1min__value__squence" kindref="compound">min_value_squence&lt;typename std::remove_reference&lt;T&gt;::type</ref>,<sp/>Value&gt;::type;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Arg1,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Arg2&gt;</highlight></codeline>
<codeline lineno="835" refid="structdetail_1_1swape__element__squence__h" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1swape__element__squence__h" kindref="compound">swape_element_squence_h</ref></highlight></codeline>
<codeline lineno="836"><highlight class="normal">{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>Result;</highlight></codeline>
<codeline lineno="838"><highlight class="normal">};</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...ArgsResult,<sp/>std::size_t<sp/>FirstInput,<sp/>std::size_t<sp/>...ArgsInput,<sp/>std::size_t<sp/>Arg1,<sp/>std::size_t<sp/>Arg2&gt;</highlight></codeline>
<codeline lineno="841" refid="structdetail_1_1swape__element__squence__h_3_01sequence_3_01ArgsResult_8_8_8_01_4_00_01sequence_1892c3f1ed054b3032c87ede7a35a75e" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1swape__element__squence__h" kindref="compound">swape_element_squence_h</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;ArgsResult...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;FirstInput,<sp/>ArgsInput...&gt;,<sp/>Arg1,<sp/>Arg2&gt;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1swape__element__squence__h" kindref="compound">swape_element_squence_h</ref>&lt;sequence&lt;ArgsResult...,<sp/>FirstInput&gt;,<sp/>sequence&lt;ArgsInput...&gt;,<sp/>Arg1,<sp/>Arg2&gt;</highlight></codeline>
<codeline lineno="843"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...ArgsResult,<sp/>std::size_t<sp/>FirstInput,<sp/>std::size_t<sp/>...ArgsInput,<sp/>std::size_t<sp/>Arg2&gt;</highlight></codeline>
<codeline lineno="846" refid="structdetail_1_1swape__element__squence__h_3_01sequence_3_01ArgsResult_8_8_8_01_4_00_01sequence_980a8501759efc50ebab7bd6d80f808c" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1swape__element__squence__h" kindref="compound">swape_element_squence_h</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;ArgsResult...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;FirstInput,<sp/>ArgsInput...&gt;,<sp/>FirstInput,<sp/>Arg2&gt;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1swape__element__squence__h" kindref="compound">swape_element_squence_h</ref>&lt;sequence&lt;ArgsResult...,<sp/>Arg2&gt;,<sp/>sequence&lt;ArgsInput...&gt;,<sp/>FirstInput,<sp/>Arg2&gt;</highlight></codeline>
<codeline lineno="848"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="comment">//template<sp/>&lt;std::size_t<sp/>...ArgsResult,<sp/>std::size_t<sp/>FirstInput,<sp/>std::size_t<sp/>...ArgsInput,<sp/>std::size_t<sp/>Arg1&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="comment">//struct<sp/>swape_element_squence_h&lt;squence&lt;ArgsResult...&gt;,<sp/>squence&lt;FirstInput,<sp/>ArgsInput...&gt;,<sp/>Arg1,<sp/>FirstInput&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>public<sp/>swape_element_squence_h&lt;squence&lt;ArgsResult...,<sp/>Arg1&gt;,<sp/>squence&lt;ArgsInput...&gt;,<sp/>Arg1,<sp/>FirstInput&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="comment">//{};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...ArgsResult,<sp/>std::size_t<sp/>FirstInput,<sp/>std::size_t<sp/>...ArgsInput&gt;</highlight></codeline>
<codeline lineno="856" refid="structdetail_1_1swape__element__squence__h_3_01sequence_3_01ArgsResult_8_8_8_01_4_00_01sequence_ccc5e5d954b2acf4ebb78d7b71521a65" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1swape__element__squence__h" kindref="compound">swape_element_squence_h</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;ArgsResult...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;FirstInput,<sp/>ArgsInput...&gt;,<sp/>FirstInput,<sp/>FirstInput&gt;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1swape__element__squence__h" kindref="compound">swape_element_squence_h</ref>&lt;sequence&lt;ArgsResult...,<sp/>FirstInput&gt;,<sp/>sequence&lt;ArgsInput...&gt;,<sp/>FirstInput,<sp/>FirstInput&gt;</highlight></codeline>
<codeline lineno="858"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Arg1,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Arg2&gt;</highlight></codeline>
<codeline lineno="862" refid="structdetail_1_1swape__element__squence" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1swape__element__squence" kindref="compound">swape_element_squence</ref>;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...ArgsInput,<sp/>std::size_t<sp/>Arg1,<sp/>std::size_t<sp/>Arg2&gt;</highlight></codeline>
<codeline lineno="865" refid="structdetail_1_1swape__element__squence_3_01sequence_3_01ArgsInput_8_8_8_01_4_00_01Arg1_00_01Arg2_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1swape__element__squence" kindref="compound">swape_element_squence</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;ArgsInput...&gt;,<sp/>Arg1,<sp/>Arg2&gt;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1swape__element__squence__h" kindref="compound">swape_element_squence_h</ref>&lt;sequence&lt;&gt;,<sp/>sequence&lt;ArgsInput...&gt;,<sp/>Arg1,<sp/>Arg2&gt;</highlight></codeline>
<codeline lineno="867"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Arg1,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Arg2&gt;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>swape_element_squence_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1swape__element__squence" kindref="compound">swape_element_squence&lt;Input, Arg1, Arg2&gt;::type</ref>;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input2&gt;</highlight></codeline>
<codeline lineno="876" refid="structdetail_1_1swape__elements__squence__h" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1swape__elements__squence__h" kindref="compound">swape_elements_squence_h</ref></highlight></codeline>
<codeline lineno="877"><highlight class="normal">{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>Result;</highlight></codeline>
<codeline lineno="879"><highlight class="normal">};</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...ArgsInput,<sp/>std::size_t<sp/>FirstInput1,<sp/>std::size_t<sp/>...ArgsInput1,<sp/>std::size_t<sp/>FirstInput2,<sp/>std::size_t<sp/>...ArgsInput2&gt;</highlight></codeline>
<codeline lineno="882" refid="structdetail_1_1swape__elements__squence__h_3_01sequence_3_4_00_01sequence_3_01ArgsInput_8_8_8_0e3e8498394d5dfd0cdac83c453ce2f75" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1swape__elements__squence__h" kindref="compound">swape_elements_squence_h</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;ArgsInput...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;FirstInput1,<sp/>ArgsInput1...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;FirstInput2,<sp/>ArgsInput2...&gt;&gt;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1swape__elements__squence__h" kindref="compound">swape_elements_squence_h</ref>&lt;swape_element_squence_t&lt;sequence&lt;ArgsInput...&gt;,<sp/>FirstInput1,<sp/>FirstInput2&gt;,<sp/>sequence&lt;ArgsInput...&gt;,<sp/>sequence&lt;ArgsInput1...&gt;,<sp/>sequence&lt;ArgsInput2...&gt;&gt;</highlight></codeline>
<codeline lineno="884"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...Result,<sp/>std::size_t<sp/>...ArgsInput,<sp/>std::size_t<sp/>FirstInput1,<sp/>std::size_t<sp/>...ArgsInput1,<sp/>std::size_t<sp/>FirstInput2,<sp/>std::size_t<sp/>...ArgsInput2&gt;</highlight></codeline>
<codeline lineno="887" refid="structdetail_1_1swape__elements__squence__h_3_01sequence_3_01Result_8_8_8_01_4_00_01sequence_3_0174ada51eef7a735014f17985318ddc6" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1swape__elements__squence__h" kindref="compound">swape_elements_squence_h</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;Result...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;ArgsInput...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;FirstInput1,<sp/>ArgsInput1...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;FirstInput2,<sp/>ArgsInput2...&gt;&gt;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1swape__elements__squence__h" kindref="compound">swape_elements_squence_h</ref>&lt;swape_element_squence_t&lt;sequence&lt;Result...&gt;,<sp/>FirstInput1,<sp/>FirstInput2&gt;,<sp/>sequence&lt;ArgsInput...&gt;,<sp/>sequence&lt;ArgsInput1...&gt;,<sp/>sequence&lt;ArgsInput2...&gt;&gt;</highlight></codeline>
<codeline lineno="889"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight><highlight class="comment">//nothing<sp/>to<sp/>swapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/>std::size_t<sp/>...ArgsInput&gt;</highlight></codeline>
<codeline lineno="893" refid="structdetail_1_1swape__elements__squence__h_3_01sequence_3_4_00_01sequence_3_01ArgsInput_8_8_8_00e942f40200abba6e4798927bab66f53" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1swape__elements__squence__h" kindref="compound">swape_elements_squence_h</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;ArgsInput...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;&gt;&gt;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1swape__elements__squence__h" kindref="compound">swape_elements_squence_h</ref>&lt;sequence&lt;ArgsInput...&gt;,<sp/>void,<sp/>void,<sp/>void&gt;</highlight></codeline>
<codeline lineno="895"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input2&gt;</highlight></codeline>
<codeline lineno="899" refid="structdetail_1_1swape__elements__squence" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1swape__elements__squence" kindref="compound">swape_elements_squence</ref>;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...Input,<sp/>std::size_t<sp/>...Input1,<sp/>std::size_t<sp/>...Input2&gt;</highlight></codeline>
<codeline lineno="902" refid="structdetail_1_1swape__elements__squence_3_01sequence_3_01Input_8_8_8_01_4_00_01sequence_3_01Inp9bc95a633ddcad1f2559e77085e34391" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1swape__elements__squence" kindref="compound">swape_elements_squence</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;Input...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;Input1...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;Input2...&gt;&gt;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1swape__elements__squence__h" kindref="compound">swape_elements_squence_h</ref>&lt;sequence&lt;&gt;,<sp/>sequence&lt;Input...&gt;,<sp/>sequence&lt;Input1...&gt;,<sp/>sequence&lt;Input2...&gt;&gt;</highlight></codeline>
<codeline lineno="904"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Input2&gt;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>swape_elements_squence_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1swape__elements__squence" kindref="compound">swape_elements_squence&lt;Input, Input1, Input2&gt;::type</ref>;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sequence&gt;</highlight></codeline>
<codeline lineno="911" refid="structdetail_1_1reverse__sequence__h" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1reverse__sequence__h" kindref="compound">reverse_sequence_h</ref></highlight></codeline>
<codeline lineno="912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>Result;</highlight></codeline>
<codeline lineno="914"><highlight class="normal">};</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>First,<sp/>std::size_t<sp/>...Args&gt;</highlight></codeline>
<codeline lineno="917" refid="structdetail_1_1reverse__sequence__h_3_01void_00_01sequence_3_01First_00_01Args_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1reverse__sequence__h" kindref="compound">reverse_sequence_h</ref>&lt;void,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;First,<sp/>Args...&gt;&gt;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1reverse__sequence__h" kindref="compound">reverse_sequence_h</ref>&lt;sequence&lt;First&gt;,<sp/>sequence&lt;Args...&gt;&gt;</highlight></codeline>
<codeline lineno="919"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...Numbers,<sp/>std::size_t<sp/>First,<sp/>std::size_t<sp/>...Args&gt;</highlight></codeline>
<codeline lineno="922" refid="structdetail_1_1reverse__sequence__h_3_01sequence_3_01Numbers_8_8_8_01_4_00_01sequence_3_01First_00_01Args_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1reverse__sequence__h" kindref="compound">reverse_sequence_h</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;Numbers...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;First,<sp/>Args...&gt;&gt;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1reverse__sequence__h" kindref="compound">reverse_sequence_h</ref>&lt;sequence&lt;First,<sp/>Numbers...&gt;,<sp/>sequence&lt;Args...&gt;&gt;</highlight></codeline>
<codeline lineno="924"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sequence&gt;</highlight></codeline>
<codeline lineno="927" refid="structdetail_1_1reverse__sequence" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1reverse__sequence" kindref="compound">reverse_sequence</ref></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1reverse__sequence__h" kindref="compound">reverse_sequence_h</ref>&lt;void,Sequence&gt;</highlight></codeline>
<codeline lineno="929"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sequence&gt;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>reverse_sequence_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>reverse_sequence&lt;Sequence&gt;::type;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Sequence&gt;</highlight></codeline>
<codeline lineno="937" refid="structdetail_1_1append__sequence__end__h" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1append__sequence__end__h" kindref="compound">append_sequence_end_h</ref>;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...Numbers&gt;</highlight></codeline>
<codeline lineno="940" refid="structdetail_1_1append__sequence__end__h_3_01sequence_3_01Numbers_8_8_8_01_4_00_01sequence_3_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1append__sequence__end__h" kindref="compound">append_sequence_end_h</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;Numbers...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;&gt;&gt;</highlight></codeline>
<codeline lineno="941"><highlight class="normal">{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structsequence" kindref="compound">type</ref><sp/>=<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;Numbers...&gt;;</highlight></codeline>
<codeline lineno="943"><highlight class="normal">};</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>...Numbers,<sp/>std::size_t<sp/>First,<sp/>std::size_t<sp/>...Args&gt;</highlight></codeline>
<codeline lineno="946" refid="structdetail_1_1append__sequence__end__h_3_01sequence_3_01Numbers_8_8_8_01_4_00_01sequence_3_01First_00_01Args_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1append__sequence__end__h" kindref="compound">append_sequence_end_h</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;Numbers...&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;First,<sp/>Args...&gt;&gt;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1append__sequence__end__h" kindref="compound">append_sequence_end_h</ref>&lt;sequence&lt;Numbers...,<sp/>First&gt;,<sp/>sequence&lt;Args...&gt;&gt;</highlight></codeline>
<codeline lineno="948"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>First,<sp/>std::size_t<sp/>...Args&gt;</highlight></codeline>
<codeline lineno="951" refid="structdetail_1_1append__sequence__end__h_3_01sequence_3_4_00_01sequence_3_01First_00_01Args_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1append__sequence__end__h" kindref="compound">append_sequence_end_h</ref>&lt;<ref refid="structsequence" kindref="compound">sequence</ref>&lt;&gt;,<sp/><ref refid="structsequence" kindref="compound">sequence</ref>&lt;First,<sp/>Args...&gt;&gt;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1append__sequence__end__h" kindref="compound">append_sequence_end_h</ref>&lt;sequence&lt;First&gt;,<sp/>sequence&lt;Args...&gt;&gt;</highlight></codeline>
<codeline lineno="953"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_SeqFirst,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_SeqSecond&gt;</highlight></codeline>
<codeline lineno="956" refid="structdetail_1_1append__sequence__end" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1append__sequence__end" kindref="compound">append_sequence_end</ref></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1append__sequence__end__h" kindref="compound">append_sequence_end_h</ref>&lt;_SeqFirst,<sp/>_SeqSecond&gt;</highlight></codeline>
<codeline lineno="958"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_SeqFirst,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_SeqSecond&gt;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>append_sequence_end_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1append__sequence__end" kindref="compound">append_sequence_end&lt;_SeqFirst, _SeqSecond&gt;::type</ref>;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_First,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_Second,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="964" refid="structdetail_1_1bubble__sort__sequence__swap__h" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1bubble__sort__sequence__swap__h" kindref="compound">bubble_sort_sequence_swap_h</ref></highlight></codeline>
<codeline lineno="965"><highlight class="normal">{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first<sp/><sp/>=<sp/>_First;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>second<sp/>=<sp/>_Second;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sorted<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="969"><highlight class="normal">};</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_First,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_Second&gt;</highlight></codeline>
<codeline lineno="972" refid="structdetail_1_1bubble__sort__sequence__swap__h_3_01__First_00_01__Second_00_01false_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1bubble__sort__sequence__swap__h" kindref="compound">bubble_sort_sequence_swap_h</ref>&lt;_First,<sp/>_Second,<sp/>false&gt;</highlight></codeline>
<codeline lineno="973"><highlight class="normal">{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first<sp/><sp/>=<sp/>_Second;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>second<sp/>=<sp/>_First;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sorted<sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="977"><highlight class="normal">};</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_First,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_Second&gt;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bubble_sort_sequence_swap</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1bubble__sort__sequence__swap__h" kindref="compound">bubble_sort_sequence_swap_h</ref>&lt;_First,<sp/>_Second,<sp/>_First<sp/>&lt;<sp/>_Second&gt;</highlight></codeline>
<codeline lineno="982"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal">template<sp/>&lt;typename<sp/>_Result,<sp/>typename<sp/>_Input,<sp/>bool<sp/>Sorted&gt;</highlight></codeline>
<codeline lineno="986"><highlight class="normal">struct<sp/>bubble_sort_sequence_h</highlight></codeline>
<codeline lineno="987"><highlight class="normal">{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>using<sp/>type<sp/>=<sp/>_Result;</highlight></codeline>
<codeline lineno="989"><highlight class="normal">};</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal">template<sp/>&lt;std::size_t<sp/>...Results,<sp/>std::size_t<sp/>_First,<sp/>std::size_t<sp/>_Second,<sp/>std::size_t<sp/>...Args&gt;</highlight></codeline>
<codeline lineno="992"><highlight class="normal">struct<sp/>bubble_sort_sequence_h&lt;tmech::sequence&lt;Results...&gt;,<sp/>tmech::sequence&lt;_First,<sp/>_Second,<sp/>Args...&gt;,<sp/>false&gt;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>public<sp/>bubble_sort_sequence_h&lt;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmech::sequence&lt;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Results...,</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bubble_sort_sequence_swap&lt;_First,<sp/>_Second&gt;::first&gt;,</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmech::sequence&lt;bubble_sort_sequence_swap&lt;_First,<sp/>_Second&gt;::second,<sp/>Args...&gt;,</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bubble_sort_sequence_swap&lt;_First,<sp/>_Second&gt;::sorted&gt;</highlight></codeline>
<codeline lineno="999"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="comment">//last<sp/>two<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal">template<sp/>&lt;std::size_t<sp/>...Results,<sp/>std::size_t<sp/>_First,<sp/>std::size_t<sp/>_Second&gt;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">struct<sp/>bubble_sort_sequence_h&lt;tmech::sequence&lt;Results...&gt;,<sp/>tmech::sequence&lt;_First,<sp/>_Second&gt;,<sp/>false&gt;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>public<sp/>bubble_sort_sequence_h&lt;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmech::sequence&lt;Results...,</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bubble_sort_sequence_swap&lt;_First,<sp/>_Second&gt;::first,</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bubble_sort_sequence_swap&lt;_First,<sp/>_Second&gt;::second&gt;,</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmech::sequence&lt;&gt;,</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>false&gt;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="comment">//only<sp/>one<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal">template<sp/>&lt;std::size_t<sp/>...Results,<sp/>std::size_t<sp/>_First&gt;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal">struct<sp/>bubble_sort_sequence_h&lt;tmech::sequence&lt;Results...&gt;,<sp/>tmech::sequence&lt;_First&gt;,<sp/>false&gt;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>public<sp/>bubble_sort_sequence_h&lt;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmech::sequence&lt;Results...,_First&gt;,</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmech::sequence&lt;&gt;,</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>false&gt;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal">template<sp/>&lt;std::size_t<sp/>...Results,<sp/>std::size_t<sp/>_First,<sp/>std::size_t<sp/>_Second,<sp/>std::size_t<sp/>...Args&gt;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal">struct<sp/>bubble_sort_sequence_h&lt;tmech::sequence&lt;Results...&gt;,<sp/>tmech::sequence&lt;_First,<sp/>_Second,<sp/>Args...&gt;,<sp/>true&gt;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>public<sp/>bubble_sort_sequence_h&lt;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmech::sequence&lt;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Results...,</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bubble_sort_sequence_swap&lt;_First,<sp/>_Second&gt;::first&gt;,</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmech::sequence&lt;bubble_sort_sequence_swap&lt;_First,<sp/>_Second&gt;::second,<sp/>Args...&gt;,</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true&gt;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal">template<sp/>&lt;std::size_t<sp/>...Results,<sp/>std::size_t<sp/>_First,<sp/>std::size_t<sp/>_Second&gt;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal">struct<sp/>bubble_sort_sequence_h&lt;tmech::sequence&lt;Results...&gt;,<sp/>tmech::sequence&lt;_First,<sp/>_Second&gt;,<sp/>true&gt;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>public<sp/>bubble_sort_sequence_h&lt;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmech::sequence&lt;&gt;,</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmech::sequence&lt;Results...,</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bubble_sort_sequence_swap&lt;_First,<sp/>_Second&gt;::first,</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bubble_sort_sequence_swap&lt;_First,<sp/>_Second&gt;::second&gt;,</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>false&gt;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal">template<sp/>&lt;typename<sp/>_Input&gt;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal">struct<sp/>bubble_sort_sequence</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>public<sp/>bubble_sort_sequence_h&lt;tmech::sequence&lt;&gt;,<sp/>_Input,<sp/>false&gt;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal">template<sp/>&lt;typename<sp/>_Input&gt;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal">using<sp/>bubble_sort_sequence_t<sp/>=<sp/>typename<sp/>bubble_sort_sequence&lt;_Input&gt;::type;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal">template<sp/>&lt;typename<sp/>Function,<sp/>std::size_t<sp/>End,<sp/>std::size_t<sp/>Start=0&gt;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal">class<sp/>meta_for_loop</highlight></codeline>
<codeline lineno="1051"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal">public:</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>Func,<sp/>typename<sp/>...Indicies&gt;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/>constexpr<sp/>inline<sp/>auto<sp/>loop(Func<sp/>const&amp;<sp/>func,<sp/>const<sp/>Indicies<sp/>&amp;...<sp/>indicies)<sp/>{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>constexpr<sp/>(Start<sp/>&lt;<sp/>End){</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Function::loop(func,<sp/>indicies...,<sp/>Start);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meta_for_loop&lt;Function,<sp/>End,<sp/>Start+1&gt;::loop(func,<sp/>indicies...);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal">template<sp/>&lt;std::size_t<sp/>End,<sp/>std::size_t<sp/>Start&gt;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">class<sp/>meta_for_loop&lt;void,<sp/>End,<sp/>Start&gt;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal">public:</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>Func,<sp/>typename<sp/>...Indicies&gt;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/>constexpr<sp/>inline<sp/>auto<sp/>loop(Func<sp/>const&amp;<sp/>func,<sp/>const<sp/><sp/>Indicies<sp/>&amp;...<sp/>indicies)<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>constexpr<sp/>(Start<sp/>&lt;<sp/>End){</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func(indicies...,Start);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meta_for_loop&lt;void,<sp/>End,<sp/>Start+1&gt;::loop(func,<sp/>indicies...);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal">template<sp/>&lt;std::size_t<sp/>DIM,<sp/>std::size_t<sp/>DEEP,<sp/>std::size_t<sp/>Start=0&gt;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal">struct<sp/>meta_for_loop_deep</highlight></codeline>
<codeline lineno="1077"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>using<sp/>type<sp/>=<sp/>meta_for_loop&lt;typename<sp/>meta_for_loop_deep&lt;DIM,<sp/>DEEP,<sp/>Start+1&gt;::type,<sp/>DIM&gt;;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal">template<sp/>&lt;std::size_t<sp/>DIM,<sp/>std::size_t<sp/>DEEP&gt;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal">struct<sp/>meta_for_loop_deep&lt;DIM,<sp/>DEEP,<sp/>DEEP&gt;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>using<sp/>type<sp/>=<sp/>meta_for_loop&lt;void,<sp/>DIM&gt;;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal">template<sp/>&lt;typename<sp/>Function,<sp/>std::size_t<sp/>End,<sp/>std::size_t<sp/>Start=0&gt;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal">class<sp/>meta_for_loop_symmetric;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal">template<sp/>&lt;typename<sp/>Function,<sp/>std::size_t<sp/>End,<sp/>std::size_t<sp/>Start=0&gt;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal">struct<sp/>set_up_new_loop</highlight></codeline>
<codeline lineno="1094"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>using<sp/>type<sp/>=<sp/>Function;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal">template<sp/>&lt;typename<sp/>Function,<sp/>std::size_t<sp/>FuncEnd,<sp/>std::size_t<sp/>FuncStart,<sp/>std::size_t<sp/>LoopEnd,<sp/>std::size_t<sp/>LoopStart&gt;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal">struct<sp/>set_up_new_loop&lt;meta_for_loop_symmetric&lt;Function,<sp/>FuncEnd,<sp/>FuncStart&gt;,<sp/>LoopEnd,<sp/>LoopStart&gt;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>using<sp/>type<sp/>=<sp/>meta_for_loop_symmetric&lt;Function,<sp/>FuncEnd,<sp/>LoopStart&gt;;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal">template<sp/>&lt;typename<sp/>Function,<sp/>std::size_t<sp/>End,<sp/>std::size_t<sp/>Start&gt;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal">class<sp/>meta_for_loop_symmetric</highlight></codeline>
<codeline lineno="1107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal">public:</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>using<sp/>newFunction<sp/>=<sp/>typename<sp/>set_up_new_loop&lt;Function,<sp/>End,<sp/>Start&gt;::type;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>Func,<sp/>typename<sp/>...Indicies&gt;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/>constexpr<sp/>inline<sp/>auto<sp/>loop(Func<sp/>const&amp;<sp/>func,<sp/>const<sp/>Indicies<sp/>&amp;...<sp/>indicies)<sp/>{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>constexpr<sp/>(Start<sp/>&lt;<sp/>End){</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newFunction::loop(func,<sp/>indicies...,<sp/>Start);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meta_for_loop_symmetric&lt;newFunction,<sp/>End,<sp/>Start+1&gt;::loop(func,<sp/>indicies...);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal">template<sp/>&lt;std::size_t<sp/>End,<sp/>std::size_t<sp/>Start&gt;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal">class<sp/>meta_for_loop_symmetric&lt;void,<sp/>End,<sp/>Start&gt;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1123"><highlight class="normal">public:</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>Func,<sp/>typename<sp/>...Indicies&gt;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/>constexpr<sp/>inline<sp/>auto<sp/>loop(Func<sp/>const&amp;<sp/>func,<sp/>const<sp/>Indicies<sp/>&amp;...<sp/>indicies)<sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>constexpr<sp/>(Start<sp/>&lt;<sp/>End){</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func(indicies...,<sp/>Start);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meta_for_loop_symmetric&lt;void,<sp/>End,<sp/>Start+1&gt;::loop(func,<sp/>indicies...);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal">template<sp/>&lt;std::size_t<sp/>DIM,<sp/>typename<sp/>_Func<sp/>=<sp/>void&gt;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal">struct<sp/>meta_for_loop_deep_symmetric_pair</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>public<sp/>meta_for_loop_symmetric&lt;meta_for_loop_symmetric&lt;_Func,<sp/>DIM&gt;,<sp/>DIM&gt;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal">template<sp/>&lt;std::size_t<sp/>DIM,<sp/>std::size_t<sp/>DEEP,<sp/>std::size_t<sp/>Start=0&gt;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal">struct<sp/>meta_for_loop_deep_symmetric</highlight></codeline>
<codeline lineno="1142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>using<sp/>type<sp/>=<sp/>meta_for_loop_deep_symmetric_pair&lt;DIM,typename<sp/>meta_for_loop_deep_symmetric&lt;DIM,<sp/>DEEP,<sp/>Start+1&gt;::type&gt;;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal">template<sp/>&lt;std::size_t<sp/>DIM,<sp/>std::size_t<sp/>DEEP&gt;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal">struct<sp/>meta_for_loop_deep_symmetric&lt;DIM,<sp/>DEEP,<sp/>DEEP&gt;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>using<sp/>type<sp/>=<sp/>meta_for_loop_deep_symmetric_pair&lt;DIM&gt;;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal">struct<sp/>evaluate</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>_Tensor,<sp/>typename<sp/>..._Args&gt;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/>constexpr<sp/>inline<sp/>auto<sp/>apply(_Tensor<sp/>const&amp;<sp/>__data,<sp/>_Args...){</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>constexpr(std::experimental::is_detected&lt;has_evaluate,<sp/>_Tensor,<sp/>_Args...&gt;::value){</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_cast&lt;_Tensor&amp;&gt;(__data).evaluate();</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal">struct<sp/>assign_tensors{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>LHS,<sp/>typename<sp/>RHS&gt;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/>constexpr<sp/>inline<sp/>auto<sp/>apply(LHS<sp/>&amp;<sp/>lhs,<sp/>RHS<sp/>const&amp;<sp/>rhs){</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>RankLHS{LHS::rank()};</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>Dim{LHS::dimension()};</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>Deep{RankLHS};</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//meta<sp/>for<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>type<sp/>=<sp/>typename<sp/>meta_for_loop_deep&lt;Dim,<sp/>Deep-1&gt;::type;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//lambda<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>assign<sp/>=<sp/>[&amp;](auto&amp;&amp;...<sp/>numbers){</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhs(numbers...)<sp/>=<sp/>rhs(numbers...);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type::loop(assign);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal">struct<sp/>print_tensor{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>Tensor&gt;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/>constexpr<sp/>inline<sp/>auto<sp/>apply(Tensor<sp/>const&amp;<sp/>lhs,<sp/>std::ostream<sp/>&amp;<sp/>os){</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>value_type<sp/>=<sp/>typename<sp/>Tensor::value_type;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>RankLHS{Tensor::rank()};</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os&lt;&lt;std::scientific;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>constexpr<sp/>(RankLHS<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>Dim{Tensor::dimension()};</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(std::size_t<sp/>k{0};k&lt;Dim;++k){</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os&lt;&lt;lhs(k)&lt;&lt;&quot;<sp/>&quot;;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os&lt;&lt;&quot;\n&quot;;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>Dim{Tensor::dimension()};</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//meta<sp/>for<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>type<sp/>=<sp/>typename<sp/>meta_for_loop_deep&lt;Dim,<sp/>RankLHS-2&gt;::type;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//lambda<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>assign<sp/>=<sp/>[&amp;](auto&amp;&amp;...<sp/>numbers){</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>Dim{Tensor::dimension()};</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(std::size_t<sp/>k{0};k&lt;Dim;++k){</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>constexpr<sp/>(is_complex&lt;value_type&gt;()){</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(lhs(numbers...,k).real()<sp/>&gt;=<sp/>static_cast&lt;typename<sp/>value_type::value_type&gt;(0)){</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os&lt;&lt;&quot;<sp/>&quot;&lt;&lt;lhs(numbers...,k)&lt;&lt;&quot;<sp/>&quot;;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else{</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os&lt;&lt;lhs(numbers...,k)&lt;&lt;&quot;<sp/>&quot;;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(lhs(numbers...,k)<sp/>&gt;=<sp/>static_cast&lt;value_type&gt;(0)){</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os&lt;&lt;&quot;<sp/>&quot;&lt;&lt;lhs(numbers...,k)&lt;&lt;&quot;<sp/>&quot;;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os&lt;&lt;lhs(numbers...,k)&lt;&lt;&quot;<sp/>&quot;;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os&lt;&lt;&quot;\n&quot;;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type::loop(assign);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1225"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="comment">//currently<sp/>only<sp/>used<sp/>in<sp/>google<sp/>test<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal">struct<sp/>double_contraction{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>Result,<sp/>typename<sp/>LHS,<sp/>typename<sp/>RHS&gt;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/>constexpr<sp/>inline<sp/>auto<sp/>apply(Result&amp;<sp/>result,<sp/>LHS<sp/>const&amp;<sp/>lhs,<sp/>RHS<sp/>const&amp;<sp/>rhs){</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>RankLHS{LHS::rank()};</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>RankRHS{RHS::rank()};</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>Dim{LHS::dimension()};</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>Deep{RankLHS<sp/>-<sp/>2<sp/>+<sp/>RankRHS<sp/>-<sp/>2};</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>Result::value_type<sp/>sum{0};</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//meta<sp/>for<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>type<sp/>=<sp/>typename<sp/>meta_for_loop_deep&lt;Dim,<sp/>Deep-1&gt;::type;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>double_contraction<sp/>=<sp/>[&amp;](auto&amp;&amp;...<sp/>numbers){</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>RankLHS{LHS::rank()};</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>RankRHS{RHS::rank()};</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>Dim{LHS::dimension()};</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>Deep{RankLHS<sp/>-<sp/>2<sp/>+<sp/>RankRHS<sp/>-<sp/>2};</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>Result::value_type<sp/>sum{0};</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(std::size_t<sp/>k{0};k&lt;Dim;++k){</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(std::size_t<sp/>l{0};l&lt;Dim;++l){</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>tuple{std::make_tuple(numbers...,l,k)};</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>constexpr<sp/>(RankRHS<sp/>==<sp/>2){</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>SequenceLHS{(RankLHS<sp/>==<sp/>2<sp/>?<sp/>0<sp/>:<sp/>RankLHS-3)};</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//test_seq(make_single_sequence(sequence_t&lt;SequenceLHS&gt;(),sequence_t&lt;Deep+1,<sp/>Deep&gt;()));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//test_seq(make_single_sequence(sequence_t&lt;Deep+1,<sp/>Deep&gt;()));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>tuple_call(lhs,tuple,make_single_sequence(sequence_t&lt;SequenceLHS&gt;(),sequence_t&lt;Deep+1,<sp/>Deep&gt;()))</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tuple_call(rhs,tuple,make_single_sequence(sequence_t&lt;Deep+1,<sp/>Deep&gt;()));</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else<sp/>if<sp/>constexpr<sp/>(RankLHS<sp/>==<sp/>2){</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//test_seq(sequence_t&lt;Deep+1,<sp/>Deep&gt;());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//test_seq(make_single_sequence(sequence_t&lt;Deep+1,<sp/>Deep&gt;(),sequence_t&lt;Deep-1,0&gt;()));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>tuple_call(lhs,tuple,make_single_sequence(sequence_t&lt;Deep+1,<sp/>Deep&gt;()))</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tuple_call(rhs,tuple,make_single_sequence(sequence_t&lt;Deep+1,<sp/>Deep&gt;(),sequence_t&lt;Deep-1,0&gt;()));</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>SequenceLHS{(RankLHS<sp/>==<sp/>2<sp/>?<sp/>0<sp/>:<sp/>RankLHS-3)};</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>tuple_call(lhs,tuple,make_single_sequence(sequence_t&lt;SequenceLHS&gt;(),sequence_t&lt;Deep+1,<sp/>Deep&gt;()))</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tuple_call(rhs,tuple,make_single_sequence(sequence_t&lt;Deep+1,<sp/>Deep&gt;(),sequence_t&lt;Deep-1,RankLHS-2&gt;()));</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>constexpr<sp/>(RankRHS<sp/>==<sp/>2){</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>SequenceLHS{(RankLHS<sp/>==<sp/>2<sp/>?<sp/>0<sp/>:<sp/>RankLHS-3)};</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tuple_call(result,std::make_tuple(numbers...),make_single_sequence(sequence_t&lt;SequenceLHS&gt;()))<sp/>=<sp/>sum;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else<sp/>if<sp/>constexpr<sp/>(RankLHS<sp/>==<sp/>2){</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tuple_call(result,std::make_tuple(numbers...),make_single_sequence(sequence_t&lt;Deep-1,RankLHS-2&gt;()))<sp/>=<sp/>sum;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>SequenceLHS{(RankLHS<sp/>==<sp/>2<sp/>?<sp/>0<sp/>:<sp/>RankLHS-3)};</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tuple_call(result,std::make_tuple(numbers...),make_single_sequence(sequence_t&lt;SequenceLHS&gt;(),sequence_t&lt;Deep-1,RankLHS-2&gt;()))<sp/>=<sp/>sum;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type::loop(double_contraction);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight><highlight class="comment">//currently<sp/>only<sp/>used<sp/>in<sp/>google<sp/>test<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal">struct<sp/>single_contraction{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>Result,<sp/>typename<sp/>LHS,<sp/>typename<sp/>RHS&gt;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/>constexpr<sp/>inline<sp/>auto<sp/>apply(Result&amp;<sp/>result,<sp/>LHS<sp/>const&amp;<sp/>lhs,<sp/>RHS<sp/>const&amp;<sp/>rhs){</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>RankLHS{LHS::rank()};</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>RankRHS{RHS::rank()};</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>Dim{LHS::dimension()};</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>Deep{RankLHS<sp/>-<sp/>1<sp/>+<sp/>RankRHS<sp/>-<sp/>1};</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//meta<sp/>for<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>type<sp/>=<sp/>typename<sp/>meta_for_loop_deep&lt;Dim,<sp/>Deep-1&gt;::type;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>single_contraction<sp/>=<sp/>[&amp;](auto&amp;&amp;...<sp/>numbers){</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>RankLHS{LHS::rank()};</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>RankRHS{RHS::rank()};</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>Dim{LHS::dimension()};</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>Deep{RankLHS<sp/>-<sp/>1<sp/>+<sp/>RankRHS<sp/>-<sp/>1};</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>Result::value_type<sp/>sum{0};</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(std::size_t<sp/>k{0};k&lt;Dim;++k){</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>tuple{std::make_tuple(numbers...,k)};</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>constexpr<sp/>(RankLHS<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>lhs(k)</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tuple_call(rhs,tuple,make_single_sequence(sequence_t&lt;Deep,Deep&gt;(),sequence_t&lt;RHS::rank()-2&gt;()));</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else<sp/>if<sp/>constexpr<sp/>(RankRHS<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>tuple_call(lhs,tuple,make_single_sequence(sequence_t&lt;LHS::rank()-2&gt;(),<sp/>sequence_t&lt;Deep,Deep&gt;()))</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*rhs(k);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else{</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>tuple_call(lhs,tuple,make_single_sequence(sequence_t&lt;LHS::rank()-2&gt;(),<sp/>sequence_t&lt;Deep,Deep&gt;()))</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tuple_call(rhs,tuple,make_single_sequence(sequence_t&lt;Deep,Deep&gt;(),sequence_t&lt;Deep-1,<sp/>LHS::rank()-1&gt;()));</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>constexpr<sp/>(Result::rank()<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result(std::get&lt;0&gt;(std::make_tuple(numbers...)))<sp/>=<sp/>sum;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else{</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tuple_call(result,std::make_tuple(numbers...),sequence_t&lt;Result::rank()-1&gt;())<sp/>=<sp/>sum;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type::loop(single_contraction);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1329"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>NAMESPACE<sp/>DETAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal">#endif<sp/></highlight><highlight class="comment">//<sp/>UTILITY_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/utility.h"/>
  </compounddef>
</doxygen>
