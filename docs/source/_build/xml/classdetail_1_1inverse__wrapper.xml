<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classdetail_1_1inverse__wrapper" kind="class" language="C++" prot="public">
    <compoundname>detail::inverse_wrapper</compoundname>
    <basecompoundref refid="classtensor__base" prot="public" virt="non-virtual">tensor_base&lt; inverse_wrapper&lt; _Tensor, _Sequences... &gt; &gt;</basecompoundref>
    <includes local="no">skew_symmetric_part_wrapper_bones.h</includes>
    <templateparamlist>
      <param>
        <type>typename _Tensor</type>
      </param>
      <param>
        <type>typename ...</type>
        <declname>_Sequences</declname>
        <defname>_Sequences</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Constructors</header>
      <memberdef kind="function" id="classdetail_1_1inverse__wrapper_1ab34e736e35f7fb1b64025a7b3fce3a15" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;::inverse_wrapper</definition>
        <argsstring>(_Tensor __tensor_data)</argsstring>
        <name>inverse_wrapper</name>
        <qualifiedname>detail::inverse_wrapper::inverse_wrapper</qualifiedname>
        <param>
          <type>_Tensor</type>
          <declname>__tensor_data</declname>
        </param>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" line="41" column="15" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_meat.h" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1inverse__wrapper_1afd1336628069126580f89907bf16432c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;::inverse_wrapper</definition>
        <argsstring>(inverse_wrapper const &amp;__data)</argsstring>
        <name>inverse_wrapper</name>
        <qualifiedname>detail::inverse_wrapper::inverse_wrapper</qualifiedname>
        <param>
          <type><ref refid="classdetail_1_1inverse__wrapper" kindref="compound">inverse_wrapper</ref> const &amp;</type>
          <declname>__data</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" line="43" column="15" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_meat.h" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1inverse__wrapper_1a0b0ce3eb51eae87a4dbe4638c47dcde9" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Indicies</declname>
            <defname>Indicies</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;::operator()</definition>
        <argsstring>(Indicies... __indices) const</argsstring>
        <name>operator()</name>
        <qualifiedname>detail::inverse_wrapper::operator()</qualifiedname>
        <param>
          <type>Indicies...</type>
          <declname>__indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" line="46" column="27" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_meat.h" bodystart="44" bodyend="46"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Dimension and rank</header>
      <memberdef kind="function" id="classdetail_1_1inverse__wrapper_1a0735b7f0fd8055a29cbe69a6d7541829" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;::evaluate</definition>
        <argsstring>()</argsstring>
        <name>evaluate</name>
        <qualifiedname>detail::inverse_wrapper::evaluate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" line="52" column="27" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_meat.h" bodystart="74" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1inverse__wrapper_1a7975ff6744b6e58a8415748bafa18a62" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Result</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;::evaluate</definition>
        <argsstring>(_Result const &amp;__result)</argsstring>
        <name>evaluate</name>
        <qualifiedname>detail::inverse_wrapper::evaluate</qualifiedname>
        <param>
          <type>_Result const &amp;</type>
          <declname>__result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" line="55" column="27" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_meat.h" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1inverse__wrapper_1a9957861264df779a43ee31e8b9dba412" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;::raw_data</definition>
        <argsstring>() const</argsstring>
        <name>raw_data</name>
        <qualifiedname>detail::inverse_wrapper::raw_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" line="57" column="27" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_meat.h" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1inverse__wrapper_1a44a0f59a9331a2b64f5057b0770a8f88" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;::rank</definition>
        <argsstring>()</argsstring>
        <name>rank</name>
        <qualifiedname>detail::inverse_wrapper::rank</qualifiedname>
        <briefdescription>
<para>Returns the rank. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" line="48" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_meat.h" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1inverse__wrapper_1af7929a74c69d423cd4b9df023c809dd3" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;::dimension</definition>
        <argsstring>()</argsstring>
        <name>dimension</name>
        <qualifiedname>detail::inverse_wrapper::dimension</qualifiedname>
        <briefdescription>
<para>Returns the dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" line="50" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_meat.h" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1inverse__wrapper_1a8a4c3aceebf67680d0b897a204a692c6" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Result</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;::evaluate_imp</definition>
        <argsstring>(_Result const &amp;__result)</argsstring>
        <name>evaluate_imp</name>
        <qualifiedname>detail::inverse_wrapper::evaluate_imp</qualifiedname>
        <param>
          <type>_Result const &amp;</type>
          <declname>__result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" line="61" column="27" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_meat.h" bodystart="89" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1inverse__wrapper_1a0d74e3c01507c7cca2d1512cb34ddde1" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;::evaluate_imp</definition>
        <argsstring>(value_type const *__result, value_type const *__data)</argsstring>
        <name>evaluate_imp</name>
        <qualifiedname>detail::inverse_wrapper::evaluate_imp</qualifiedname>
        <param>
          <type>value_type const *</type>
          <declname>__result</declname>
        </param>
        <param>
          <type>value_type const *</type>
          <declname>__data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" line="63" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_meat.h" bodystart="173" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1inverse__wrapper_1a022094202b5f45260e93270ccbdaeb7d" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>Rows</declname>
            <defname>Rows</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;::lu_detail</definition>
        <argsstring>(value_type const *__A)</argsstring>
        <name>lu_detail</name>
        <qualifiedname>detail::inverse_wrapper::lu_detail</qualifiedname>
        <param>
          <type>value_type const *</type>
          <declname>__A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" line="66" column="27" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_meat.h" bodystart="212" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1inverse__wrapper_1aad604a4d63239eb43681e0ece58c4207" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>Rows</declname>
            <defname>Rows</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;::inv_lu</definition>
        <argsstring>(value_type *__Ainv, value_type const *const __Afac)</argsstring>
        <name>inv_lu</name>
        <qualifiedname>detail::inverse_wrapper::inv_lu</qualifiedname>
        <param>
          <type>value_type *</type>
          <declname>__Ainv</declname>
        </param>
        <param>
          <type>value_type const *const</type>
          <declname>__Afac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" line="69" column="27" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_meat.h" bodystart="229" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1inverse__wrapper_1a4a35e56db6a7895c6f6c3118c47e7258" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;::invert_2_2</definition>
        <argsstring>(value_type *result, value_type const A11, value_type const A12, value_type const A21, value_type const A22)</argsstring>
        <name>invert_2_2</name>
        <qualifiedname>detail::inverse_wrapper::invert_2_2</qualifiedname>
        <param>
          <type>value_type *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A11</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A12</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A21</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A22</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" line="71" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_meat.h" bodystart="264" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1inverse__wrapper_1aaf96e86ce372db950d09713023f57e50" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;::invert_3_3</definition>
        <argsstring>(value_type *result, value_type const A0, value_type const A1, value_type const A2, value_type const A3, value_type const A4, value_type const A5, value_type const A6, value_type const A7, value_type const A8)</argsstring>
        <name>invert_3_3</name>
        <qualifiedname>detail::inverse_wrapper::invert_3_3</qualifiedname>
        <param>
          <type>value_type *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A0</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A1</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A2</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A3</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A4</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A5</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A6</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A7</declname>
        </param>
        <param>
          <type>value_type const</type>
          <declname>A8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" line="75" column="34" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_meat.h" bodystart="276" bodyend="296"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classdetail_1_1inverse__wrapper_1ac17f8c01a4b2ca9269de35158832b494" prot="private" static="no">
        <type>typename std::remove_const&lt; typename std::remove_reference&lt; _Tensor &gt;::type &gt;::type</type>
        <definition>using detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;::data_type_tensor =  typename std::remove_const&lt;typename std::remove_reference&lt;_Tensor&gt;::type&gt;::type</definition>
        <argsstring></argsstring>
        <name>data_type_tensor</name>
        <qualifiedname>detail::inverse_wrapper::data_type_tensor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" line="32" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classdetail_1_1inverse__wrapper_1a7a7927a04939010e556a1270421b5432" prot="public" static="no">
        <type>std::size_t</type>
        <definition>using detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;::size_type =  std::size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>detail::inverse_wrapper::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" line="34" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classdetail_1_1inverse__wrapper_1a789051b7c4e5f7ed03bed95ad0c62f52" prot="public" static="no">
        <type>typename data_type_tensor::value_type</type>
        <definition>using detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;::value_type =  typename data_type_tensor::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>detail::inverse_wrapper::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" line="35" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classdetail_1_1inverse__wrapper_1a9300fd26a5ba877d9ab7e30c0f0cc0aa" prot="public" static="no">
        <type>decltype(std::tuple&lt; _Sequences... &gt;(_Sequences()...))</type>
        <definition>using detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;::_Tuple =  decltype (std::tuple&lt;_Sequences...&gt;(_Sequences()...))</definition>
        <argsstring></argsstring>
        <name>_Tuple</name>
        <qualifiedname>detail::inverse_wrapper::_Tuple</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" line="36" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdetail_1_1inverse__wrapper_1a1c5082195bbe7c23f87845a767424cf5" prot="private" static="no" mutable="no">
        <type><ref refid="classtmech_1_1tensor" kindref="compound">tmech::tensor</ref>&lt; value_type, <ref refid="classdetail_1_1inverse__wrapper_1af7929a74c69d423cd4b9df023c809dd3" kindref="member">dimension</ref>(), <ref refid="classdetail_1_1inverse__wrapper_1a44a0f59a9331a2b64f5057b0770a8f88" kindref="member">rank</ref>()&gt;</type>
        <definition>tmech::tensor&lt;value_type, dimension(), rank()&gt; detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <qualifiedname>detail::inverse_wrapper::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" line="79" column="19" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdetail_1_1inverse__wrapper_1ae8f0f195f74d2d51049819b0fb115b0d" prot="private" static="no" mutable="no">
        <type>_Tensor</type>
        <definition>_Tensor detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;::tensor_data</definition>
        <argsstring></argsstring>
        <name>tensor_data</name>
        <qualifiedname>detail::inverse_wrapper::tensor_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" line="80" column="13" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Wrapper for the determination of the inverse of a tensor expression. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor expression from which the inverse should be determined. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;</label>
        <link refid="classdetail_1_1inverse__wrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tensor_base&lt; inverse_wrapper&lt; _Tensor, _Sequences... &gt; &gt;</label>
        <link refid="classtensor__base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>detail::inverse_wrapper&lt; _Tensor, _Sequences &gt;</label>
        <link refid="classdetail_1_1inverse__wrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tensor_base&lt; inverse_wrapper&lt; _Tensor, _Sequences... &gt; &gt;</label>
        <link refid="classtensor__base"/>
      </node>
    </collaborationgraph>
    <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" line="30" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/inverse_wrapper_bones.h" bodystart="31" bodyend="81"/>
    <listofallmembers>
      <member refid="classtensor__base_1ac10026fb2040db2caab8e6108cfdb95e" prot="protected" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>_is_init</name></member>
      <member refid="classdetail_1_1inverse__wrapper_1a9300fd26a5ba877d9ab7e30c0f0cc0aa" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>_Tuple</name></member>
      <member refid="classtensor__base_1a9217342c966e050b1d2ae5431ff6d355" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>convert</name></member>
      <member refid="classtensor__base_1a1f79397b5e5da7ba5b430dad6e2e6f7b" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>convert</name></member>
      <member refid="classtensor__base_1a9217342c966e050b1d2ae5431ff6d355" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>convert</name></member>
      <member refid="classtensor__base_1a1f79397b5e5da7ba5b430dad6e2e6f7b" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>convert</name></member>
      <member refid="classdetail_1_1inverse__wrapper_1a1c5082195bbe7c23f87845a767424cf5" prot="private" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>data</name></member>
      <member refid="classdetail_1_1inverse__wrapper_1ac17f8c01a4b2ca9269de35158832b494" prot="private" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>data_type_tensor</name></member>
      <member refid="classdetail_1_1inverse__wrapper_1af7929a74c69d423cd4b9df023c809dd3" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>dimension</name></member>
      <member refid="classdetail_1_1inverse__wrapper_1a0735b7f0fd8055a29cbe69a6d7541829" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>evaluate</name></member>
      <member refid="classdetail_1_1inverse__wrapper_1a7975ff6744b6e58a8415748bafa18a62" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>evaluate</name></member>
      <member refid="classdetail_1_1inverse__wrapper_1a8a4c3aceebf67680d0b897a204a692c6" prot="private" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>evaluate_imp</name></member>
      <member refid="classdetail_1_1inverse__wrapper_1a0d74e3c01507c7cca2d1512cb34ddde1" prot="private" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>evaluate_imp</name></member>
      <member refid="classdetail_1_1inverse__wrapper_1aad604a4d63239eb43681e0ece58c4207" prot="private" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>inv_lu</name></member>
      <member refid="classdetail_1_1inverse__wrapper_1ab34e736e35f7fb1b64025a7b3fce3a15" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>inverse_wrapper</name></member>
      <member refid="classdetail_1_1inverse__wrapper_1afd1336628069126580f89907bf16432c" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>inverse_wrapper</name></member>
      <member refid="classdetail_1_1inverse__wrapper_1a4a35e56db6a7895c6f6c3118c47e7258" prot="private" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>invert_2_2</name></member>
      <member refid="classdetail_1_1inverse__wrapper_1aaf96e86ce372db950d09713023f57e50" prot="private" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>invert_3_3</name></member>
      <member refid="classdetail_1_1inverse__wrapper_1a022094202b5f45260e93270ccbdaeb7d" prot="private" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>lu_detail</name></member>
      <member refid="classdetail_1_1inverse__wrapper_1a0b0ce3eb51eae87a4dbe4638c47dcde9" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>operator()</name></member>
      <member refid="classtensor__base_1a4b12b9e1b4e6065b63ef84905f54272e" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>operator-</name></member>
      <member refid="classtensor__base_1a4b12b9e1b4e6065b63ef84905f54272e" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>operator-</name></member>
      <member refid="classdetail_1_1inverse__wrapper_1a44a0f59a9331a2b64f5057b0770a8f88" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>rank</name></member>
      <member refid="classdetail_1_1inverse__wrapper_1a9957861264df779a43ee31e8b9dba412" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>raw_data</name></member>
      <member refid="classtensor__base_1a193f15accda2947f7ac1d71e46b05588" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>size</name></member>
      <member refid="classtensor__base_1a193f15accda2947f7ac1d71e46b05588" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>size</name></member>
      <member refid="classdetail_1_1inverse__wrapper_1a7a7927a04939010e556a1270421b5432" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>size_type</name></member>
      <member refid="classtensor__base_1a4f1b23287884e2560bd9a684fc8b4e67" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>tensor_base</name></member>
      <member refid="classtensor__base_1afdecc080c560462657208e6e75ab4b98" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>tensor_base</name></member>
      <member refid="classtensor__base_1a4f1b23287884e2560bd9a684fc8b4e67" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>tensor_base</name></member>
      <member refid="classtensor__base_1afdecc080c560462657208e6e75ab4b98" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>tensor_base</name></member>
      <member refid="classdetail_1_1inverse__wrapper_1ae8f0f195f74d2d51049819b0fb115b0d" prot="private" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>tensor_data</name></member>
      <member refid="classdetail_1_1inverse__wrapper_1a789051b7c4e5f7ed03bed95ad0c62f52" prot="public" virt="non-virtual"><scope>detail::inverse_wrapper</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
