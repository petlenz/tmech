<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="structdetail_1_1result__type_3_01std_1_1complex_3_01float_01_4_00_01std_1_1complex_3_01double_01_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>detail::result_type&lt; std::complex&lt; float &gt;, std::complex&lt; double &gt; &gt;</compoundname>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structdetail_1_1result__type_3_01std_1_1complex_3_01float_01_4_00_01std_1_1complex_3_01double_01_4_01_4_1ad90349d045771fb710c77c8a0864aa1f" prot="public" static="no">
        <type>std::complex&lt; double &gt;</type>
        <definition>using detail::result_type&lt; std::complex&lt; float &gt;, std::complex&lt; double &gt; &gt;::value_type =  std::complex&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>detail::result_type&lt; std::complex&lt; float &gt;, std::complex&lt; double &gt; &gt;::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/traits.h" line="271" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/traits.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structdetail_1_1result__type_3_01std_1_1complex_3_01float_01_4_00_01std_1_1complex_3_01double_01_4_01_4_1af71470f275025766e13152b643d888c8" prot="public" static="no">
        <type>value_type *</type>
        <definition>using detail::result_type&lt; std::complex&lt; float &gt;, std::complex&lt; double &gt; &gt;::pointer =  value_type*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <qualifiedname>detail::result_type&lt; std::complex&lt; float &gt;, std::complex&lt; double &gt; &gt;::pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/traits.h" line="272" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/traits.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structdetail_1_1result__type_3_01std_1_1complex_3_01float_01_4_00_01std_1_1complex_3_01double_01_4_01_4_1a17b8cfbd0d7a22a503b2953d34eae9a2" prot="public" static="no">
        <type>const pointer</type>
        <definition>using detail::result_type&lt; std::complex&lt; float &gt;, std::complex&lt; double &gt; &gt;::const_pointer =  const pointer</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <qualifiedname>detail::result_type&lt; std::complex&lt; float &gt;, std::complex&lt; double &gt; &gt;::const_pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/traits.h" line="273" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/traits.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structdetail_1_1result__type_3_01std_1_1complex_3_01float_01_4_00_01std_1_1complex_3_01double_01_4_01_4_1aee17b9190543ecb389dc756848ab7e4e" prot="public" static="no">
        <type>value_type &amp;</type>
        <definition>using detail::result_type&lt; std::complex&lt; float &gt;, std::complex&lt; double &gt; &gt;::expr_ref =  value_type&amp;</definition>
        <argsstring></argsstring>
        <name>expr_ref</name>
        <qualifiedname>detail::result_type&lt; std::complex&lt; float &gt;, std::complex&lt; double &gt; &gt;::expr_ref</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/traits.h" line="274" column="5" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/traits.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/traits.h" line="269" column="1" bodyfile="/home/peter/SynologyDrive/Drive/tmech/include/tmech/tensor/traits.h" bodystart="270" bodyend="275"/>
    <listofallmembers>
      <member refid="structdetail_1_1result__type_3_01std_1_1complex_3_01float_01_4_00_01std_1_1complex_3_01double_01_4_01_4_1a17b8cfbd0d7a22a503b2953d34eae9a2" prot="public" virt="non-virtual"><scope>detail::result_type&lt; std::complex&lt; float &gt;, std::complex&lt; double &gt; &gt;</scope><name>const_pointer</name></member>
      <member refid="structdetail_1_1result__type_3_01std_1_1complex_3_01float_01_4_00_01std_1_1complex_3_01double_01_4_01_4_1aee17b9190543ecb389dc756848ab7e4e" prot="public" virt="non-virtual"><scope>detail::result_type&lt; std::complex&lt; float &gt;, std::complex&lt; double &gt; &gt;</scope><name>expr_ref</name></member>
      <member refid="structdetail_1_1result__type_3_01std_1_1complex_3_01float_01_4_00_01std_1_1complex_3_01double_01_4_01_4_1af71470f275025766e13152b643d888c8" prot="public" virt="non-virtual"><scope>detail::result_type&lt; std::complex&lt; float &gt;, std::complex&lt; double &gt; &gt;</scope><name>pointer</name></member>
      <member refid="structdetail_1_1result__type_3_01std_1_1complex_3_01float_01_4_00_01std_1_1complex_3_01double_01_4_01_4_1ad90349d045771fb710c77c8a0864aa1f" prot="public" virt="non-virtual"><scope>detail::result_type&lt; std::complex&lt; float &gt;, std::complex&lt; double &gt; &gt;</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
